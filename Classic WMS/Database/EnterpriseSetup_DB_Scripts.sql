-- Enterprise Setup DB Scripts
-- Database
USE WMS;

CREATE TABLE `tblusertoken` (
  `username` varchar(255) NOT NULL,
  `password` varchar(255) DEFAULT NULL
) COMMENT='User Credentials';

INSERT INTO `wms`.`tblusertoken` (`username`,`password`)
VALUES ('muru', '$2a$10$B5sulFY6EJVJ0W3ok9IlleJolpQ1lU2TWwU2Q6FGwFbIhuuoLFMm2');

-- Company ID Table
CREATE TABLE `WMS`.`tblcompany` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`VERT_ID` NVARCHAR(50) NULL,
	`ADD_1` NVARCHAR(5000) NULL,
	`ADD_2` NVARCHAR(5000) NULL,
	`CITY` NVARCHAR(200) NULL,
	`STATE` NVARCHAR(50) NULL,
	`COUNTRY` NVARCHAR(50) NULL,
	`ZIP_CODE` INTEGER NULL,
	`CURR_ID` INTEGER NULL,
	`CNT_NM` NVARCHAR(200) NULL,
	`DESIG` NVARCHAR(200) NULL,
	`PH_NO` NVARCHAR(50) NULL,
	`MAIL_ID` NVARCHAR(500) NULL,
	`REG_NO` NVARCHAR(50) NULL,
	`NO_PLANTS` INTEGER NULL,
	`NO_OUTLETS` INTEGER NULL,
	`NO_WAREHOUSES` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	`IS_DELETED` INTEGER NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	PRIMARY KEY (`C_ID`, `LANG_ID`))
COMMENT = 'Company';

-- Plant ID Table
CREATE TABLE `WMS`.`tblplant` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`ADD_1` NVARCHAR(5000) NULL,
	`ADD_2` NVARCHAR(5000) NULL,
	`CITY` NVARCHAR(200) NULL,
	`STATE` NVARCHAR(50) NULL,
	`COUNTRY` NVARCHAR(50) NULL,
	`ZIP_CODE` INTEGER NULL,
	`CNT_NM` NVARCHAR(200) NULL,
	`DESIG` NVARCHAR(200) NULL,
	`PH_NO` NVARCHAR(50) NULL,
	`MAIL_ID` NVARCHAR(500) NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	PRIMARY KEY (`C_ID`, `PLANT_ID`, `LANG_ID`))
COMMENT = 'Plant';

-- Warehouse ID Table
CREATE TABLE `WMS`.`tblwarehouse` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NULL,
	`WH_ID` NVARCHAR(50) NOT NULL,
	`IMP_MTD` NVARCHAR(50) NOT NULL,
	`WH_TYP_ID` INTEGER NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`IB_QA_CHK` TINYINT NULL,
	`OB_QA_CHK` TINYINT NULL,
	`ZONE` NVARCHAR(50) NULL,
	`ADD_1` NVARCHAR(5000) NULL,
	`ADD_2` NVARCHAR(5000) NULL,
	`CITY` NVARCHAR(200) NULL,
	`STATE` NVARCHAR(50) NULL,
	`COUNTRY` NVARCHAR(50) NULL,
	`ZIP_CODE` INTEGER NULL,
	`CNT_NM` NVARCHAR(200) NULL,
	`DESIG` NVARCHAR(200) NULL,
	`PH_NO` INTEGER NULL,
	`MAIL_ID` NVARCHAR(500) NULL,
	`LENGTH` DECIMAL(30,4) NULL,
	`WIDTH` DECIMAL(30,4) NULL,
	`TOT_AREA` DECIMAL(30,4) NULL,
	`AREA_UOM` NVARCHAR(20) NULL,
	`AISLE_CNT` INTEGER NULL,
	`LATITUDE` DECIMAL(30,4) NULL,
	`LONGITUDE` DECIMAL(30,4) NULL,
	`ST_MTD` NVARCHAR(50) NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,	
	`UTD_ON` DATETIME NULL,
	PRIMARY KEY (`PLANT_ID`, `C_ID`, `WH_ID`, `IMP_MTD`, `WH_TYP_ID`, `LANG_ID`))
COMMENT = 'Warehouse';

ALTER TABLE `WMS`.`tblwarehouse` 
CHANGE COLUMN `PLANT_ID` `PLANT_ID` VARCHAR(50) CHARACTER SET 'utf8' NOT NULL ,
DROP PRIMARY KEY,
ADD PRIMARY KEY (`C_ID`, `WH_ID`, `IMP_MTD`, `WH_TYP_ID`, `LANG_ID`, `PLANT_ID`);
;


-- Adhoc ID Table
CREATE TABLE `WMS`.`tbladhoc` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NULL,
	`WH_ID` NVARCHAR(50) NOT NULL,
	`IMP_MTD` NVARCHAR(50) NOT NULL,
	`MOD_ID` INTEGER NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`ADHOC_MOD_ID` INTEGER NOT NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	
	PRIMARY KEY (`C_ID`, `WH_ID`, `IMP_MTD`, `MOD_ID`, `ADHOC_MOD_ID`, `LANG_ID`))
COMMENT = 'Adhoc';

-- Floor ID Table
CREATE TABLE `WMS`.`tblfloor` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NULL,
	`WH_ID` NVARCHAR(50) NOT NULL,
	`FL_ID` INTEGER NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	PRIMARY KEY (`C_ID`, `WH_ID`, `FL_ID`, `LANG_ID`))
COMMENT = 'Floor';

-- StorageSection ID Table
CREATE TABLE `WMS`.`tblstoragesection` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NULL,
	`WH_ID` NVARCHAR(50) NOT NULL,
	`FL_ID` INTEGER NOT NULL,
	`ST_SEC_ID` NVARCHAR(10) NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`ST_TYP_ID` INTEGER NULL,
	`ROW_CNT` INTEGER NULL,
	`AISLE_CNT` INTEGER NULL,
	`SPAN_CNT` INTEGER NULL,
	`SHELF_CNT` INTEGER NULL,
	`ST_BIN_CNT` INTEGER NULL,
	`ITM_TYP_ID` INTEGER NULL,
	`ITM_GRP_ID` INTEGER NULL,
	`SUB_ITM_GRP_ID` INTEGER NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	PRIMARY KEY (`C_ID`, `WH_ID`, `FL_ID`, `ST_SEC_ID`, `LANG_ID`))
COMMENT = 'StorageSection';

-- StorageClass  ID Table
CREATE TABLE `WMS`.`tblstorageclass` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NULL,
	`WH_ID` NVARCHAR(50) NOT NULL,
	`ST_CL_ID` INTEGER NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`HAZ_MAT_CLASS` NVARCHAR(30) NULL,
	`WAT_POL_CLASS` NVARCHAR(30) NULL,
	`REMARKS` NVARCHAR(50) NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	PRIMARY KEY (`C_ID`, `WH_ID`, `ST_CL_ID`, `LANG_ID`))
COMMENT = 'StorageClass';

-- StorageType ID Table
CREATE TABLE `WMS`.`tblstoragetype` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NULL,
	`WH_ID` NVARCHAR(50) NOT NULL,
	`ST_CL_ID` INTEGER NOT NULL,
	`ST_TYP_ID` INTEGER NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`ST_TEMP_FROM` NVARCHAR(50) NULL,
	`ST_TEMP_TO` NVARCHAR(50) NULL,
	`ST_UOM` NVARCHAR(50) NULL,
	`CAP_CHECK` TINYINT NULL,
	`MIX_STOCK` TINYINT NULL,
	`ADD_EXT_STOCK` TINYINT NULL,
	`ALLOW_NEG_STOCK` TINYINT NULL,
	`RET_ST_TYP` TINYINT NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	PRIMARY KEY (`C_ID`, `WH_ID`, `ST_CL_ID`, `ST_TYP_ID`, `LANG_ID`))
COMMENT = 'Storagetype';

-- StorageBinType ID Table
CREATE TABLE `WMS`.`tblstoragebintype` (
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NULL,
	`WH_ID` NVARCHAR(50) NOT NULL,
	`ST_TYP_ID` INTEGER NOT NULL,
	`ST_BIN_TYP_ID` INTEGER NOT NULL,
	`LENGTH` DECIMAL(30,4) NULL,
	`WIDTH` DECIMAL(30,4) NULL,
	`HEIGHT` DECIMAL(30,4) NULL,
	`DIM_UOM` NVARCHAR(50) NULL,
	`TOT_VOL` DECIMAL(30,4) NULL,
	`VOL_UOM` NVARCHAR(50) NULL,
	`ST_BIN_TYP_BLK` TINYINT NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	PRIMARY KEY (`C_ID`, `WH_ID`, `ST_TYP_ID`, `ST_BIN_TYP_ID`, `LANG_ID`))
COMMENT = 'StorageBinType';

-- ItemType Table
CREATE TABLE `WMS`.`tblitemtype` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NULL,
	`WH_ID` NVARCHAR(50) NOT NULL,
	`ITM_TYPE_ID` INTEGER NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`ITM_TYP_TEXT` NVARCHAR(500) NULL,
	`ST_MTD` NVARCHAR(50) NULL,
	`VAR_MGT_IND` INTEGER NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	PRIMARY KEY (`C_ID`, `WH_ID`, `ITM_TYPE_ID`, `LANG_ID`))
COMMENT = 'ItemType';

-- ItemGroup Table
CREATE TABLE `WMS`.`tblitemgroup` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NULL,
	`WH_ID` NVARCHAR(50) NOT NULL,
	`ITM_TYPE_ID` INTEGER NOT NULL,
	`ITM_GRP_ID` INTEGER NOT NULL,
	`SUB_ITM_GRP_ID` INTEGER NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`ST_CL_ID` INTEGER NULL,
	`ST_SEC_ID` NVARCHAR(10) NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	PRIMARY KEY (`C_ID`, `WH_ID`, `ITM_TYPE_ID`, `ITM_GRP_ID`, `SUB_ITM_GRP_ID`, `LANG_ID`))
COMMENT = 'ItemGroup';

-- BATCHSERIAL Table
CREATE TABLE `WMS`.`tblbatchserial` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NULL,
	`WH_ID` NVARCHAR(50) NOT NULL,
	`ST_MTD` NVARCHAR(50) NOT NULL,
	`LEVEL_ID` INTEGER NOT NULL,
	`MAINT` NVARCHAR(50) NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`LEVEL_REF` NVARCHAR(50) NOT NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	PRIMARY KEY (`C_ID`, `WH_ID`, `ST_MTD`, `LEVEL_ID`, `MAINT`, `LANG_ID`, `LEVEL_REF`))
COMMENT = 'BATCHSERIAL';

-- VARIANT Table
CREATE TABLE `WMS`.`tblvariant` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NULL,
	`WH_ID` NVARCHAR(50) NOT NULL,
	`VAR_ID` NVARCHAR(50) NOT NULL,
	`VAR_SUB_ID` NVARCHAR(50) NOT NULL,
	`LEVEL_ID` INTEGER NOT NULL,
	`LEVEL_REF` NVARCHAR(50) NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	PRIMARY KEY (`C_ID`, `WH_ID`, `VAR_ID`, `VAR_SUB_ID`, `LEVEL_ID`, `LEVEL_REF`, `LANG_ID`))
COMMENT = 'VARIANT';

-- STRATEGIES Table
CREATE TABLE `WMS`.`tblstrategies` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NULL,
	`WH_ID` NVARCHAR(50) NOT NULL,
	`STR_TYP_ID` INTEGER NOT NULL,
	`SEQ_IND` INTEGER NOT NULL,
	`ST_NO` NVARCHAR(50) NOT NULL,
	`PRIORITY` INTEGER NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	PRIMARY KEY (`C_ID`, `WH_ID`, `STR_TYP_ID`, `SEQ_IND`, `ST_NO`, `PRIORITY`, `LANG_ID`))
COMMENT = 'STRATEGIES';

-- EMPLOYEE Table
CREATE TABLE `WMS`.`tblemployee` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NULL,
	`WH_ID` NVARCHAR(50) NOT NULL,
	`C_CODE` NVARCHAR(50) NOT NULL,
	`WH_NO` NVARCHAR(50) NOT NULL,
	`EMP_ID` NVARCHAR(50) NOT NULL,
	`PROCESS_ID` INTEGER NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`ST_SEC` NVARCHAR(5) NULL,
	`HAND_EQP` NVARCHAR(5) NULL,
	`STATUS` NVARCHAR(5) NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	PRIMARY KEY (`C_ID`, `WH_ID`, `EMP_ID`, `PROCESS_ID`, `LANG_ID`))
COMMENT = 'EMPLOYEE';

-- DOORS Table
CREATE TABLE `WMS`.`tbldoors` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NULL,
	`WH_ID` NVARCHAR(50) NOT NULL,
	`DOOR_ID` NVARCHAR(50) NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`DOOR_TYP` NVARCHAR(50) NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	PRIMARY KEY (`C_ID`, `WH_ID`, `DOOR_ID`, `LANG_ID`))
COMMENT = 'DOORS';

-- Barcode Table
CREATE TABLE `WMS`.`tblbarcode` (
	`C_ID` NVARCHAR(50) NOT NULL,
	`PLANT_ID` NVARCHAR(50) NULL,
	`WH_ID` NVARCHAR(50) NOT NULL,
	`MTD` NVARCHAR(50) NOT NULL,
	`BAR_TYP_ID` INTEGER NOT NULL,
	`BAR_SUB_ID` INTEGER NOT NULL,
	`LEVEL_ID` INTEGER NOT NULL,
	`LEVEL_REF` NVARCHAR(50) NOT NULL,
	`PROCESS_ID` INTEGER NOT NULL,
	`LANG_ID` NVARCHAR(5) NOT NULL,
	`NUM_RANGE_FROM` NVARCHAR(30) NULL,
	`NUM_RANGE_TO` NVARCHAR(30) NULL,
	`BAR_LEN` DECIMAL(30,4) NULL,
	`BAR_WID` DECIMAL(30,4) NULL,
	`DIM_UOM` NVARCHAR(50) NULL,
	`LABL_INFO` NVARCHAR(500) NULL,
	`FIELD_1` NVARCHAR(50) NULL,
	`FIELD_2` NVARCHAR(50) NULL,
	`FIELD_3` NVARCHAR(50) NULL,
	`FIELD_4` NVARCHAR(50) NULL,
	`FIELD_5` NVARCHAR(50) NULL,
	`IS_DELETED` INTEGER NULL,
	`CTD_BY` NVARCHAR(50) NULL,
	`CTD_ON` DATETIME NULL,
	`UTD_BY` NVARCHAR(50) NULL,
	`UTD_ON` DATETIME NULL,
	PRIMARY KEY (`C_ID`, `WH_ID`, `MTD`, `BAR_TYP_ID`, `BAR_SUB_ID`, `LEVEL_ID`, `LEVEL_REF` , `PROCESS_ID`, `LANG_ID`))
COMMENT = 'Barcode';


-------------------------------------------------------------------------------
drop table tblbarcode;
drop table tblcompany;
drop table tblfloor;
drop table tblitemgroup;
drop table tblitemtype;
drop table tblplant;
drop table tblstoragebintype;
drop table tblstorageclass;
drop table tblstoragesection;
drop table tblstoragetype;
drop table tblstrategies;
drop table tblwarehouse;

