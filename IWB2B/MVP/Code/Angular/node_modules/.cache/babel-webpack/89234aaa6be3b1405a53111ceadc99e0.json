{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'primeng/api';\nimport { PrimeTemplate } from 'primeng/api';\nimport { ZIndexUtils } from 'primeng/utils';\nconst _c0 = [\"mask\"];\n\nfunction BlockUI_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"p-blockui-document\": a0,\n    \"p-blockui p-component-overlay\": true\n  };\n};\n\nconst _c2 = function (a0) {\n  return {\n    display: a0\n  };\n};\n\nconst _c3 = [\"*\"];\n\nclass BlockUI {\n  constructor(el, cd, config) {\n    this.el = el;\n    this.cd = cd;\n    this.config = config;\n    this.autoZIndex = true;\n    this.baseZIndex = 0;\n  }\n\n  get blocked() {\n    return this._blocked;\n  }\n\n  set blocked(val) {\n    this._blocked = val;\n\n    if (this.mask && this.mask.nativeElement) {\n      if (this._blocked) this.block();else this.unblock();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.target && !this.target.getBlockableElement) {\n      throw 'Target of BlockUI must implement BlockableUI interface';\n    }\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'content':\n          this.contentTemplate = item.template;\n          break;\n\n        default:\n          this.contentTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  block() {\n    if (this.target) {\n      this.target.getBlockableElement().appendChild(this.mask.nativeElement);\n      this.target.getBlockableElement().style.position = 'relative';\n    } else {\n      document.body.appendChild(this.mask.nativeElement);\n    }\n\n    if (this.autoZIndex) {\n      ZIndexUtils.set('modal', this.mask.nativeElement, this.baseZIndex + this.config.zIndex.modal);\n    }\n  }\n\n  unblock() {\n    ZIndexUtils.clear(this.mask.nativeElement);\n    this.el.nativeElement.appendChild(this.mask.nativeElement);\n  }\n\n  ngOnDestroy() {\n    this.unblock();\n  }\n\n}\n\nBlockUI.ɵfac = function BlockUI_Factory(t) {\n  return new (t || BlockUI)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.PrimeNGConfig));\n};\n\nBlockUI.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BlockUI,\n  selectors: [[\"p-blockUI\"]],\n  contentQueries: function BlockUI_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function BlockUI_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mask = _t.first);\n    }\n  },\n  inputs: {\n    target: \"target\",\n    autoZIndex: \"autoZIndex\",\n    baseZIndex: \"baseZIndex\",\n    styleClass: \"styleClass\",\n    blocked: \"blocked\"\n  },\n  ngContentSelectors: _c3,\n  decls: 4,\n  vars: 9,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"mask\", \"\"], [4, \"ngTemplateOutlet\"]],\n  template: function BlockUI_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵtemplate(3, BlockUI_ng_container_3_Template, 1, 0, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1, !ctx.target))(\"ngStyle\", i0.ɵɵpureFunction1(7, _c2, ctx.blocked ? \"flex\" : \"none\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n    }\n  },\n  directives: [i2.NgClass, i2.NgStyle, i2.NgTemplateOutlet],\n  styles: [\".p-blockui{top:0;left:0;width:100%;height:100%;background-color:transparent;transition-property:background-color;display:flex;align-items:center;justify-content:center}.p-blockui,.p-blockui.p-component-overlay{position:absolute}.p-blockui-document.p-component-overlay{position:fixed}.p-blockui-leave.p-component-overlay{background-color:transparent}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BlockUI, [{\n    type: Component,\n    args: [{\n      selector: 'p-blockUI',\n      template: `\n        <div #mask [class]=\"styleClass\" [ngClass]=\"{'p-blockui-document':!target, 'p-blockui p-component-overlay': true}\" [ngStyle]=\"{display: blocked ? 'flex' : 'none'}\">\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styleUrls: ['./blockui.css']\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.PrimeNGConfig\n    }];\n  }, {\n    target: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    mask: [{\n      type: ViewChild,\n      args: ['mask']\n    }],\n    blocked: [{\n      type: Input\n    }]\n  });\n})();\n\nclass BlockUIModule {}\n\nBlockUIModule.ɵfac = function BlockUIModule_Factory(t) {\n  return new (t || BlockUIModule)();\n};\n\nBlockUIModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BlockUIModule\n});\nBlockUIModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BlockUIModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [BlockUI],\n      declarations: [BlockUI]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BlockUI, BlockUIModule }; //# sourceMappingURL=primeng-blockui.js.map","map":{"version":3,"sources":["D:/TEKCLOVER GIT MAIN/root/IWB2B/MVP/Code/Angular/node_modules/primeng/fesm2015/primeng-blockui.js"],"names":["i0","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","ContentChildren","ViewChild","NgModule","i2","CommonModule","i1","PrimeTemplate","ZIndexUtils","BlockUI","constructor","el","cd","config","autoZIndex","baseZIndex","blocked","_blocked","val","mask","nativeElement","block","unblock","ngAfterViewInit","target","getBlockableElement","ngAfterContentInit","templates","forEach","item","getType","contentTemplate","template","appendChild","style","position","document","body","set","zIndex","modal","clear","ngOnDestroy","ɵfac","ElementRef","ChangeDetectorRef","PrimeNGConfig","ɵcmp","NgClass","NgStyle","NgTemplateOutlet","type","args","selector","changeDetection","OnPush","encapsulation","None","styleUrls","styleClass","BlockUIModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'primeng/api';\nimport { PrimeTemplate } from 'primeng/api';\nimport { ZIndexUtils } from 'primeng/utils';\n\nclass BlockUI {\n    constructor(el, cd, config) {\n        this.el = el;\n        this.cd = cd;\n        this.config = config;\n        this.autoZIndex = true;\n        this.baseZIndex = 0;\n    }\n    get blocked() {\n        return this._blocked;\n    }\n    set blocked(val) {\n        this._blocked = val;\n        if (this.mask && this.mask.nativeElement) {\n            if (this._blocked)\n                this.block();\n            else\n                this.unblock();\n        }\n    }\n    ngAfterViewInit() {\n        if (this.target && !this.target.getBlockableElement) {\n            throw 'Target of BlockUI must implement BlockableUI interface';\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                    break;\n                default:\n                    this.contentTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    block() {\n        if (this.target) {\n            this.target.getBlockableElement().appendChild(this.mask.nativeElement);\n            this.target.getBlockableElement().style.position = 'relative';\n        }\n        else {\n            document.body.appendChild(this.mask.nativeElement);\n        }\n        if (this.autoZIndex) {\n            ZIndexUtils.set('modal', this.mask.nativeElement, this.baseZIndex + this.config.zIndex.modal);\n        }\n    }\n    unblock() {\n        ZIndexUtils.clear(this.mask.nativeElement);\n        this.el.nativeElement.appendChild(this.mask.nativeElement);\n    }\n    ngOnDestroy() {\n        this.unblock();\n    }\n}\nBlockUI.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: BlockUI, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.PrimeNGConfig }], target: i0.ɵɵFactoryTarget.Component });\nBlockUI.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: BlockUI, selector: \"p-blockUI\", inputs: { target: \"target\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", styleClass: \"styleClass\", blocked: \"blocked\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"mask\", first: true, predicate: [\"mask\"], descendants: true }], ngImport: i0, template: `\n        <div #mask [class]=\"styleClass\" [ngClass]=\"{'p-blockui-document':!target, 'p-blockui p-component-overlay': true}\" [ngStyle]=\"{display: blocked ? 'flex' : 'none'}\">\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n        </div>\n    `, isInline: true, styles: [\".p-blockui{top:0;left:0;width:100%;height:100%;background-color:transparent;transition-property:background-color;display:flex;align-items:center;justify-content:center}.p-blockui,.p-blockui.p-component-overlay{position:absolute}.p-blockui-document.p-component-overlay{position:fixed}.p-blockui-leave.p-component-overlay{background-color:transparent}\"], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: BlockUI, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-blockUI',\n                    template: `\n        <div #mask [class]=\"styleClass\" [ngClass]=\"{'p-blockui-document':!target, 'p-blockui p-component-overlay': true}\" [ngStyle]=\"{display: blocked ? 'flex' : 'none'}\">\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    styleUrls: ['./blockui.css']\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.PrimeNGConfig }]; }, propDecorators: { target: [{\n                type: Input\n            }], autoZIndex: [{\n                type: Input\n            }], baseZIndex: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], mask: [{\n                type: ViewChild,\n                args: ['mask']\n            }], blocked: [{\n                type: Input\n            }] } });\nclass BlockUIModule {\n}\nBlockUIModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: BlockUIModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBlockUIModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: BlockUIModule, declarations: [BlockUI], imports: [CommonModule], exports: [BlockUI] });\nBlockUIModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: BlockUIModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: BlockUIModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [BlockUI],\n                    declarations: [BlockUI]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockUI, BlockUIModule };\n//# sourceMappingURL=primeng-blockui.js.map\n"]},"metadata":{},"sourceType":"module"}