{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, HostListener, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { ZIndexUtils } from 'primeng/utils';\nimport * as i3 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\nconst _c0 = [\"input\"];\n\nfunction Password_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i\", 4);\n    i0.ɵɵlistener(\"click\", function Password_i_3_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onMaskToggle();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.toggleIconClass());\n  }\n}\n\nfunction Password_div_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Password_div_4_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Password_div_4_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Password_div_4_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.contentTemplate);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"width\": a0\n  };\n};\n\nfunction Password_div_4_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"div\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"div\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r9.strengthClass())(\"ngStyle\", i0.ɵɵpureFunction1(3, _c1, ctx_r9.meter ? ctx_r9.meter.width : \"\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r9.infoText);\n  }\n}\n\nfunction Password_div_4_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c2 = function (a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nconst _c3 = function (a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nfunction Password_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4, 5);\n    i0.ɵɵlistener(\"click\", function Password_div_4_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onOverlayClick($event);\n    })(\"@overlayAnimation.start\", function Password_div_4_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.onAnimationStart($event);\n    })(\"@overlayAnimation.done\", function Password_div_4_Template_div_animation_overlayAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.onAnimationEnd($event);\n    });\n    i0.ɵɵtemplate(2, Password_div_4_ng_container_2_Template, 1, 0, \"ng-container\", 6);\n    i0.ɵɵtemplate(3, Password_div_4_ng_container_3_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵtemplate(4, Password_div_4_ng_template_4_Template, 4, 5, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(6, Password_div_4_ng_container_6_Template, 1, 0, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r8 = i0.ɵɵreference(5);\n\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", \"p-password-panel p-component\")(\"@overlayAnimation\", i0.ɵɵpureFunction1(9, _c3, i0.ɵɵpureFunction2(6, _c2, ctx_r2.showTransitionOptions, ctx_r2.hideTransitionOptions)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.contentTemplate)(\"ngIfElse\", _r8);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.footerTemplate);\n  }\n}\n\nclass PasswordDirective {\n  constructor(el, zone) {\n    this.el = el;\n    this.zone = zone;\n    this.promptLabel = 'Enter a password';\n    this.weakLabel = 'Weak';\n    this.mediumLabel = 'Medium';\n    this.strongLabel = 'Strong';\n    this.feedback = true;\n  }\n\n  set showPassword(show) {\n    this.el.nativeElement.type = show ? 'text' : 'password';\n  }\n\n  ngDoCheck() {\n    this.updateFilledState();\n  }\n\n  onInput(e) {\n    this.updateFilledState();\n  }\n\n  updateFilledState() {\n    this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n  }\n\n  createPanel() {\n    this.panel = document.createElement('div');\n    this.panel.className = 'p-password-panel p-component p-password-panel-overlay p-connected-overlay';\n    this.meter = document.createElement('div');\n    this.meter.className = 'p-password-meter';\n    this.info = document.createElement('div');\n    this.info.className = 'p-password-info';\n    this.info.textContent = this.promptLabel;\n    this.panel.appendChild(this.meter);\n    this.panel.appendChild(this.info);\n    this.panel.style.minWidth = DomHandler.getOuterWidth(this.el.nativeElement) + 'px';\n    document.body.appendChild(this.panel);\n  }\n\n  showOverlay() {\n    if (this.feedback) {\n      if (!this.panel) {\n        this.createPanel();\n      }\n\n      this.panel.style.zIndex = String(++DomHandler.zindex);\n      this.panel.style.display = 'block';\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          DomHandler.addClass(this.panel, 'p-connected-overlay-visible');\n          this.bindScrollListener();\n          this.bindDocumentResizeListener();\n        }, 1);\n      });\n      DomHandler.absolutePosition(this.panel, this.el.nativeElement);\n    }\n  }\n\n  hideOverlay() {\n    if (this.feedback && this.panel) {\n      DomHandler.addClass(this.panel, 'p-connected-overlay-hidden');\n      DomHandler.removeClass(this.panel, 'p-connected-overlay-visible');\n      this.unbindScrollListener();\n      this.unbindDocumentResizeListener();\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.ngOnDestroy();\n        }, 150);\n      });\n    }\n  }\n\n  onFocus() {\n    this.showOverlay();\n  }\n\n  onBlur() {\n    this.hideOverlay();\n  }\n\n  onKeyup(e) {\n    if (this.feedback) {\n      let value = e.target.value,\n          label = null,\n          meterPos = null;\n\n      if (value.length === 0) {\n        label = this.promptLabel;\n        meterPos = '0px 0px';\n      } else {\n        var score = this.testStrength(value);\n\n        if (score < 30) {\n          label = this.weakLabel;\n          meterPos = '0px -10px';\n        } else if (score >= 30 && score < 80) {\n          label = this.mediumLabel;\n          meterPos = '0px -20px';\n        } else if (score >= 80) {\n          label = this.strongLabel;\n          meterPos = '0px -30px';\n        }\n      }\n\n      if (!this.panel || !DomHandler.hasClass(this.panel, 'p-connected-overlay-visible')) {\n        this.showOverlay();\n      }\n\n      this.meter.style.backgroundPosition = meterPos;\n      this.info.textContent = label;\n    }\n  }\n\n  testStrength(str) {\n    let grade = 0;\n    let val;\n    val = str.match('[0-9]');\n    grade += this.normalize(val ? val.length : 1 / 4, 1) * 25;\n    val = str.match('[a-zA-Z]');\n    grade += this.normalize(val ? val.length : 1 / 2, 3) * 10;\n    val = str.match('[!@#$%^&*?_~.,;=]');\n    grade += this.normalize(val ? val.length : 1 / 6, 1) * 35;\n    val = str.match('[A-Z]');\n    grade += this.normalize(val ? val.length : 1 / 6, 1) * 30;\n    grade *= str.length / 8;\n    return grade > 100 ? 100 : grade;\n  }\n\n  normalize(x, y) {\n    let diff = x - y;\n    if (diff <= 0) return x / y;else return 1 + 0.5 * (x / (x + y / 4));\n  }\n\n  get disabled() {\n    return this.el.nativeElement.disabled;\n  }\n\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.el.nativeElement, () => {\n        if (DomHandler.hasClass(this.panel, 'p-connected-overlay-visible')) {\n          this.hideOverlay();\n        }\n      });\n    }\n\n    this.scrollHandler.bindScrollListener();\n  }\n\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n\n  bindDocumentResizeListener() {\n    this.documentResizeListener = this.onWindowResize.bind(this);\n    window.addEventListener('resize', this.documentResizeListener);\n  }\n\n  unbindDocumentResizeListener() {\n    if (this.documentResizeListener) {\n      window.removeEventListener('resize', this.documentResizeListener);\n      this.documentResizeListener = null;\n    }\n  }\n\n  onWindowResize() {\n    this.hideOverlay();\n  }\n\n  ngOnDestroy() {\n    if (this.panel) {\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n\n      this.unbindDocumentResizeListener();\n      document.body.removeChild(this.panel);\n      this.panel = null;\n      this.meter = null;\n      this.info = null;\n    }\n  }\n\n}\n\nPasswordDirective.ɵfac = function PasswordDirective_Factory(t) {\n  return new (t || PasswordDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nPasswordDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: PasswordDirective,\n  selectors: [[\"\", \"pPassword\", \"\"]],\n  hostVars: 6,\n  hostBindings: function PasswordDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"input\", function PasswordDirective_input_HostBindingHandler($event) {\n        return ctx.onInput($event);\n      })(\"focus\", function PasswordDirective_focus_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function PasswordDirective_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      })(\"keyup\", function PasswordDirective_keyup_HostBindingHandler($event) {\n        return ctx.onKeyup($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-inputtext\", true)(\"p-component\", true)(\"p-filled\", ctx.filled);\n    }\n  },\n  inputs: {\n    promptLabel: \"promptLabel\",\n    weakLabel: \"weakLabel\",\n    mediumLabel: \"mediumLabel\",\n    strongLabel: \"strongLabel\",\n    feedback: \"feedback\",\n    showPassword: \"showPassword\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PasswordDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[pPassword]',\n      host: {\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    promptLabel: [{\n      type: Input\n    }],\n    weakLabel: [{\n      type: Input\n    }],\n    mediumLabel: [{\n      type: Input\n    }],\n    strongLabel: [{\n      type: Input\n    }],\n    feedback: [{\n      type: Input\n    }],\n    showPassword: [{\n      type: Input\n    }],\n    onInput: [{\n      type: HostListener,\n      args: ['input', ['$event']]\n    }],\n    onFocus: [{\n      type: HostListener,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    onKeyup: [{\n      type: HostListener,\n      args: ['keyup', ['$event']]\n    }]\n  });\n})();\n\nconst Password_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Password),\n  multi: true\n};\n\nclass Password {\n  constructor(cd, config, el, overlayService) {\n    this.cd = cd;\n    this.config = config;\n    this.el = el;\n    this.overlayService = overlayService;\n    this.mediumRegex = '^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})';\n    this.strongRegex = '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})';\n    this.feedback = true;\n    this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    this.hideTransitionOptions = '.1s linear';\n    this.overlayVisible = false;\n    this.focused = false;\n    this.unmasked = false;\n    this.value = null;\n\n    this.onModelChange = () => {};\n\n    this.onModelTouched = () => {};\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'content':\n          this.contentTemplate = item.template;\n          break;\n\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n\n        default:\n          this.contentTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.infoText = this.promptText();\n    this.mediumCheckRegExp = new RegExp(this.mediumRegex);\n    this.strongCheckRegExp = new RegExp(this.strongRegex);\n    this.translationSubscription = this.config.translationObserver.subscribe(() => {\n      this.updateUI(this.value || \"\");\n    });\n  }\n\n  onAnimationStart(event) {\n    switch (event.toState) {\n      case 'visible':\n        this.overlay = event.element;\n        ZIndexUtils.set('overlay', this.overlay, this.config.zIndex.overlay);\n        this.appendContainer();\n        this.alignOverlay();\n        this.bindScrollListener();\n        this.bindResizeListener();\n        break;\n\n      case 'void':\n        this.unbindScrollListener();\n        this.unbindResizeListener();\n        this.overlay = null;\n        break;\n    }\n  }\n\n  onAnimationEnd(event) {\n    switch (event.toState) {\n      case 'void':\n        ZIndexUtils.clear(event.element);\n        break;\n    }\n  }\n\n  appendContainer() {\n    if (this.appendTo) {\n      if (this.appendTo === 'body') document.body.appendChild(this.overlay);else document.getElementById(this.appendTo).appendChild(this.overlay);\n    }\n  }\n\n  alignOverlay() {\n    if (this.appendTo) {\n      this.overlay.style.minWidth = DomHandler.getOuterWidth(this.input.nativeElement) + 'px';\n      DomHandler.absolutePosition(this.overlay, this.input.nativeElement);\n    } else {\n      DomHandler.relativePosition(this.overlay, this.input.nativeElement);\n    }\n  }\n\n  onInput(event) {\n    this.value = event.target.value;\n    this.onModelChange(this.value);\n    this.onModelTouched();\n  }\n\n  onFocus() {\n    this.focused = true;\n\n    if (this.feedback) {\n      this.overlayVisible = true;\n    }\n  }\n\n  onBlur() {\n    this.focused = false;\n\n    if (this.feedback) {\n      this.overlayVisible = false;\n    }\n  }\n\n  onKeyUp(event) {\n    if (this.feedback) {\n      let value = event.target.value;\n      this.updateUI(value);\n\n      if (!this.overlayVisible) {\n        this.overlayVisible = true;\n      }\n    }\n  }\n\n  updateUI(value) {\n    let label = null;\n    let meter = null;\n\n    switch (this.testStrength(value)) {\n      case 1:\n        label = this.weakText();\n        meter = {\n          strength: 'weak',\n          width: '33.33%'\n        };\n        break;\n\n      case 2:\n        label = this.mediumText();\n        meter = {\n          strength: 'medium',\n          width: '66.66%'\n        };\n        break;\n\n      case 3:\n        label = this.strongText();\n        meter = {\n          strength: 'strong',\n          width: '100%'\n        };\n        break;\n\n      default:\n        label = this.promptText();\n        meter = null;\n        break;\n    }\n\n    this.meter = meter;\n    this.infoText = label;\n  }\n\n  onMaskToggle() {\n    this.unmasked = !this.unmasked;\n  }\n\n  onOverlayClick(event) {\n    this.overlayService.add({\n      originalEvent: event,\n      target: this.el.nativeElement\n    });\n  }\n\n  testStrength(str) {\n    let level = 0;\n    if (this.strongCheckRegExp.test(str)) level = 3;else if (this.mediumCheckRegExp.test(str)) level = 2;else if (str.length) level = 1;\n    return level;\n  }\n\n  writeValue(value) {\n    if (value === undefined) this.value = null;else this.value = value;\n    if (this.feedback) this.updateUI(this.value || \"\");\n    this.cd.markForCheck();\n  }\n\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(val) {\n    this.disabled = val;\n  }\n\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.input.nativeElement, () => {\n        if (this.overlayVisible) {\n          this.overlayVisible = false;\n        }\n      });\n    }\n\n    this.scrollHandler.bindScrollListener();\n  }\n\n  bindResizeListener() {\n    if (!this.resizeListener) {\n      this.resizeListener = () => {\n        if (this.overlayVisible) {\n          this.overlayVisible = false;\n        }\n      };\n\n      window.addEventListener('resize', this.resizeListener);\n    }\n  }\n\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n\n  unbindResizeListener() {\n    if (this.resizeListener) {\n      window.removeEventListener('resize', this.resizeListener);\n      this.resizeListener = null;\n    }\n  }\n\n  unbindOutsideClickListener() {\n    if (this.outsideClickListener) {\n      document.removeEventListener('click', this.outsideClickListener);\n      this.outsideClickListener = null;\n    }\n  }\n\n  containerClass() {\n    return {\n      'p-password p-component p-inputwrapper': true,\n      'p-input-icon-right': this.toggleMask\n    };\n  }\n\n  inputFieldClass() {\n    return {\n      'p-password-input': true,\n      'p-disabled': this.disabled\n    };\n  }\n\n  toggleIconClass() {\n    return this.unmasked ? 'pi pi-eye-slash' : 'pi pi-eye';\n  }\n\n  strengthClass() {\n    return `p-password-strength ${this.meter ? this.meter.strength : ''}`;\n  }\n\n  filled() {\n    return this.value != null && this.value.toString().length > 0;\n  }\n\n  promptText() {\n    return this.promptLabel || this.getTranslation(TranslationKeys.PASSWORD_PROMPT);\n  }\n\n  weakText() {\n    return this.weakLabel || this.getTranslation(TranslationKeys.WEAK);\n  }\n\n  mediumText() {\n    return this.mediumLabel || this.getTranslation(TranslationKeys.MEDIUM);\n  }\n\n  strongText() {\n    return this.strongLabel || this.getTranslation(TranslationKeys.STRONG);\n  }\n\n  restoreAppend() {\n    if (this.overlay && this.appendTo) {\n      if (this.appendTo === 'body') document.body.removeChild(this.overlay);else document.getElementById(this.appendTo).removeChild(this.overlay);\n    }\n  }\n\n  inputType() {\n    return this.unmasked ? 'text' : 'password';\n  }\n\n  getTranslation(option) {\n    return this.config.getTranslation(option);\n  }\n\n  ngOnDestroy() {\n    if (this.overlay) {\n      ZIndexUtils.clear(this.overlay);\n      this.overlay = null;\n    }\n\n    this.restoreAppend();\n    this.unbindResizeListener();\n\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n\n    if (this.translationSubscription) {\n      this.translationSubscription.unsubscribe();\n    }\n  }\n\n}\n\nPassword.ɵfac = function Password_Factory(t) {\n  return new (t || Password)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.PrimeNGConfig), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.OverlayService));\n};\n\nPassword.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Password,\n  selectors: [[\"p-password\"]],\n  contentQueries: function Password_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Password_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function Password_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled())(\"p-inputwrapper-focus\", ctx.focused);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    promptLabel: \"promptLabel\",\n    mediumRegex: \"mediumRegex\",\n    strongRegex: \"strongRegex\",\n    weakLabel: \"weakLabel\",\n    mediumLabel: \"mediumLabel\",\n    strongLabel: \"strongLabel\",\n    inputId: \"inputId\",\n    feedback: \"feedback\",\n    appendTo: \"appendTo\",\n    toggleMask: \"toggleMask\",\n    inputStyleClass: \"inputStyleClass\",\n    styleClass: \"styleClass\",\n    style: \"style\",\n    inputStyle: \"inputStyle\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    placeholder: \"placeholder\"\n  },\n  features: [i0.ɵɵProvidersFeature([Password_VALUE_ACCESSOR])],\n  decls: 5,\n  vars: 14,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"pInputText\", \"\", 3, \"ngClass\", \"ngStyle\", \"value\", \"input\", \"focus\", \"blur\", \"keyup\"], [\"input\", \"\"], [3, \"ngClass\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"click\"], [\"overlay\", \"\"], [4, \"ngTemplateOutlet\"], [4, \"ngIf\", \"ngIfElse\"], [\"content\", \"\"], [1, \"p-password-meter\"], [\"className\", \"p-password-info\"]],\n  template: function Password_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"input\", 1, 2);\n      i0.ɵɵlistener(\"input\", function Password_Template_input_input_1_listener($event) {\n        return ctx.onInput($event);\n      })(\"focus\", function Password_Template_input_focus_1_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function Password_Template_input_blur_1_listener() {\n        return ctx.onBlur();\n      })(\"keyup\", function Password_Template_input_keyup_1_listener($event) {\n        return ctx.onKeyUp($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, Password_i_3_Template, 1, 1, \"i\", 3);\n      i0.ɵɵtemplate(4, Password_div_4_Template, 7, 11, \"div\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", ctx.containerClass())(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMap(ctx.inputStyleClass);\n      i0.ɵɵproperty(\"ngClass\", ctx.inputFieldClass())(\"ngStyle\", ctx.inputStyle)(\"value\", ctx.value);\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"type\", ctx.inputType())(\"placeholder\", ctx.placeholder);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.toggleMask);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.overlayVisible);\n    }\n  },\n  directives: [i2.NgClass, i2.NgStyle, i3.InputText, i2.NgIf, i2.NgTemplateOutlet],\n  styles: [\".p-password{position:relative;display:inline-flex}.p-password-panel{position:absolute;top:0;left:0}.p-password .p-password-panel{min-width:100%}.p-password-meter{height:10px}.p-password-strength{height:100%;width:0;transition:width 1s ease-in-out}.p-fluid .p-password{display:flex}\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('overlayAnimation', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scaleY(0.8)'\n    }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Password, [{\n    type: Component,\n    args: [{\n      selector: 'p-password',\n      template: `\n        <div [ngClass]=\"containerClass()\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input #input [attr.id]=\"inputId\" pInputText [ngClass]=\"inputFieldClass()\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [attr.type]=\"inputType()\" [attr.placeholder]=\"placeholder\" [value]=\"value\" (input)=\"onInput($event)\" (focus)=\"onFocus()\"\n                (blur)=\"onBlur()\" (keyup)=\"onKeyUp($event)\" />\n            <i *ngIf=\"toggleMask\" [ngClass]=\"toggleIconClass()\" (click)=\"onMaskToggle()\"></i>\n            <div #overlay *ngIf=\"overlayVisible\" [ngClass]=\"'p-password-panel p-component'\" (click)=\"onOverlayClick($event)\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onAnimationStart($event)\" (@overlayAnimation.done)=\"onAnimationEnd($event)\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <ng-container *ngIf=\"contentTemplate; else content\">\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                </ng-container>\n                <ng-template #content>\n                    <div class=\"p-password-meter\">\n                        <div [ngClass]=\"strengthClass()\" [ngStyle]=\"{'width': meter ? meter.width : ''}\"></div>\n                    </div>\n                    <div className=\"p-password-info\">{{infoText}}</div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </div>\n    `,\n      animations: [trigger('overlayAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n        opacity: 0\n      }))])])],\n      host: {\n        '[class.p-inputwrapper-filled]': 'filled()',\n        '[class.p-inputwrapper-focus]': 'focused'\n      },\n      providers: [Password_VALUE_ACCESSOR],\n      styleUrls: ['./password.css'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.PrimeNGConfig\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1.OverlayService\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    promptLabel: [{\n      type: Input\n    }],\n    mediumRegex: [{\n      type: Input\n    }],\n    strongRegex: [{\n      type: Input\n    }],\n    weakLabel: [{\n      type: Input\n    }],\n    mediumLabel: [{\n      type: Input\n    }],\n    strongLabel: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    feedback: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    toggleMask: [{\n      type: Input\n    }],\n    inputStyleClass: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    inputStyle: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    input: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nclass PasswordModule {}\n\nPasswordModule.ɵfac = function PasswordModule_Factory(t) {\n  return new (t || PasswordModule)();\n};\n\nPasswordModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PasswordModule\n});\nPasswordModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, InputTextModule], SharedModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PasswordModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, InputTextModule],\n      exports: [PasswordDirective, Password, SharedModule],\n      declarations: [PasswordDirective, Password]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Password, PasswordDirective, PasswordModule, Password_VALUE_ACCESSOR }; //# sourceMappingURL=primeng-password.js.map","map":{"version":3,"sources":["D:/TEKCLOVER GIT MAIN/root/IWB2B/MVP/Code/Angular/node_modules/primeng/fesm2015/primeng-password.js"],"names":["i0","Directive","Input","HostListener","forwardRef","Component","ChangeDetectionStrategy","ViewEncapsulation","ViewChild","ContentChildren","NgModule","i2","CommonModule","trigger","transition","style","animate","NG_VALUE_ACCESSOR","DomHandler","ConnectedOverlayScrollHandler","i1","TranslationKeys","PrimeTemplate","SharedModule","ZIndexUtils","i3","InputTextModule","PasswordDirective","constructor","el","zone","promptLabel","weakLabel","mediumLabel","strongLabel","feedback","showPassword","show","nativeElement","type","ngDoCheck","updateFilledState","onInput","e","filled","value","length","createPanel","panel","document","createElement","className","meter","info","textContent","appendChild","minWidth","getOuterWidth","body","showOverlay","zIndex","String","zindex","display","runOutsideAngular","setTimeout","addClass","bindScrollListener","bindDocumentResizeListener","absolutePosition","hideOverlay","removeClass","unbindScrollListener","unbindDocumentResizeListener","ngOnDestroy","onFocus","onBlur","onKeyup","target","label","meterPos","score","testStrength","hasClass","backgroundPosition","str","grade","val","match","normalize","x","y","diff","disabled","scrollHandler","documentResizeListener","onWindowResize","bind","window","addEventListener","removeEventListener","destroy","removeChild","ɵfac","ElementRef","NgZone","ɵdir","args","selector","host","Password_VALUE_ACCESSOR","provide","useExisting","Password","multi","cd","config","overlayService","mediumRegex","strongRegex","showTransitionOptions","hideTransitionOptions","overlayVisible","focused","unmasked","onModelChange","onModelTouched","ngAfterContentInit","templates","forEach","item","getType","contentTemplate","template","headerTemplate","footerTemplate","ngOnInit","infoText","promptText","mediumCheckRegExp","RegExp","strongCheckRegExp","translationSubscription","translationObserver","subscribe","updateUI","onAnimationStart","event","toState","overlay","element","set","appendContainer","alignOverlay","bindResizeListener","unbindResizeListener","onAnimationEnd","clear","appendTo","getElementById","input","relativePosition","onKeyUp","weakText","strength","width","mediumText","strongText","onMaskToggle","onOverlayClick","add","originalEvent","level","test","writeValue","undefined","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","resizeListener","unbindOutsideClickListener","outsideClickListener","containerClass","toggleMask","inputFieldClass","toggleIconClass","strengthClass","toString","getTranslation","PASSWORD_PROMPT","WEAK","MEDIUM","STRONG","restoreAppend","inputType","option","unsubscribe","ChangeDetectorRef","PrimeNGConfig","OverlayService","ɵcmp","NgClass","NgStyle","InputText","NgIf","NgTemplateOutlet","opacity","transform","animations","providers","styleUrls","changeDetection","OnPush","encapsulation","None","inputId","inputStyleClass","styleClass","inputStyle","placeholder","PasswordModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Input, HostListener, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { ZIndexUtils } from 'primeng/utils';\nimport * as i3 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\n\nclass PasswordDirective {\n    constructor(el, zone) {\n        this.el = el;\n        this.zone = zone;\n        this.promptLabel = 'Enter a password';\n        this.weakLabel = 'Weak';\n        this.mediumLabel = 'Medium';\n        this.strongLabel = 'Strong';\n        this.feedback = true;\n    }\n    set showPassword(show) {\n        this.el.nativeElement.type = show ? 'text' : 'password';\n    }\n    ngDoCheck() {\n        this.updateFilledState();\n    }\n    onInput(e) {\n        this.updateFilledState();\n    }\n    updateFilledState() {\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n    }\n    createPanel() {\n        this.panel = document.createElement('div');\n        this.panel.className = 'p-password-panel p-component p-password-panel-overlay p-connected-overlay';\n        this.meter = document.createElement('div');\n        this.meter.className = 'p-password-meter';\n        this.info = document.createElement('div');\n        this.info.className = 'p-password-info';\n        this.info.textContent = this.promptLabel;\n        this.panel.appendChild(this.meter);\n        this.panel.appendChild(this.info);\n        this.panel.style.minWidth = DomHandler.getOuterWidth(this.el.nativeElement) + 'px';\n        document.body.appendChild(this.panel);\n    }\n    showOverlay() {\n        if (this.feedback) {\n            if (!this.panel) {\n                this.createPanel();\n            }\n            this.panel.style.zIndex = String(++DomHandler.zindex);\n            this.panel.style.display = 'block';\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    DomHandler.addClass(this.panel, 'p-connected-overlay-visible');\n                    this.bindScrollListener();\n                    this.bindDocumentResizeListener();\n                }, 1);\n            });\n            DomHandler.absolutePosition(this.panel, this.el.nativeElement);\n        }\n    }\n    hideOverlay() {\n        if (this.feedback && this.panel) {\n            DomHandler.addClass(this.panel, 'p-connected-overlay-hidden');\n            DomHandler.removeClass(this.panel, 'p-connected-overlay-visible');\n            this.unbindScrollListener();\n            this.unbindDocumentResizeListener();\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    this.ngOnDestroy();\n                }, 150);\n            });\n        }\n    }\n    onFocus() {\n        this.showOverlay();\n    }\n    onBlur() {\n        this.hideOverlay();\n    }\n    onKeyup(e) {\n        if (this.feedback) {\n            let value = e.target.value, label = null, meterPos = null;\n            if (value.length === 0) {\n                label = this.promptLabel;\n                meterPos = '0px 0px';\n            }\n            else {\n                var score = this.testStrength(value);\n                if (score < 30) {\n                    label = this.weakLabel;\n                    meterPos = '0px -10px';\n                }\n                else if (score >= 30 && score < 80) {\n                    label = this.mediumLabel;\n                    meterPos = '0px -20px';\n                }\n                else if (score >= 80) {\n                    label = this.strongLabel;\n                    meterPos = '0px -30px';\n                }\n            }\n            if (!this.panel || !DomHandler.hasClass(this.panel, 'p-connected-overlay-visible')) {\n                this.showOverlay();\n            }\n            this.meter.style.backgroundPosition = meterPos;\n            this.info.textContent = label;\n        }\n    }\n    testStrength(str) {\n        let grade = 0;\n        let val;\n        val = str.match('[0-9]');\n        grade += this.normalize(val ? val.length : 1 / 4, 1) * 25;\n        val = str.match('[a-zA-Z]');\n        grade += this.normalize(val ? val.length : 1 / 2, 3) * 10;\n        val = str.match('[!@#$%^&*?_~.,;=]');\n        grade += this.normalize(val ? val.length : 1 / 6, 1) * 35;\n        val = str.match('[A-Z]');\n        grade += this.normalize(val ? val.length : 1 / 6, 1) * 30;\n        grade *= str.length / 8;\n        return grade > 100 ? 100 : grade;\n    }\n    normalize(x, y) {\n        let diff = x - y;\n        if (diff <= 0)\n            return x / y;\n        else\n            return 1 + 0.5 * (x / (x + y / 4));\n    }\n    get disabled() {\n        return this.el.nativeElement.disabled;\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.el.nativeElement, () => {\n                if (DomHandler.hasClass(this.panel, 'p-connected-overlay-visible')) {\n                    this.hideOverlay();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n    onWindowResize() {\n        this.hideOverlay();\n    }\n    ngOnDestroy() {\n        if (this.panel) {\n            if (this.scrollHandler) {\n                this.scrollHandler.destroy();\n                this.scrollHandler = null;\n            }\n            this.unbindDocumentResizeListener();\n            document.body.removeChild(this.panel);\n            this.panel = null;\n            this.meter = null;\n            this.info = null;\n        }\n    }\n}\nPasswordDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PasswordDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nPasswordDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: PasswordDirective, selector: \"[pPassword]\", inputs: { promptLabel: \"promptLabel\", weakLabel: \"weakLabel\", mediumLabel: \"mediumLabel\", strongLabel: \"strongLabel\", feedback: \"feedback\", showPassword: \"showPassword\" }, host: { listeners: { \"input\": \"onInput($event)\", \"focus\": \"onFocus()\", \"blur\": \"onBlur()\", \"keyup\": \"onKeyup($event)\" }, properties: { \"class.p-inputtext\": \"true\", \"class.p-component\": \"true\", \"class.p-filled\": \"filled\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PasswordDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pPassword]',\n                    host: {\n                        '[class.p-inputtext]': 'true',\n                        '[class.p-component]': 'true',\n                        '[class.p-filled]': 'filled'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { promptLabel: [{\n                type: Input\n            }], weakLabel: [{\n                type: Input\n            }], mediumLabel: [{\n                type: Input\n            }], strongLabel: [{\n                type: Input\n            }], feedback: [{\n                type: Input\n            }], showPassword: [{\n                type: Input\n            }], onInput: [{\n                type: HostListener,\n                args: ['input', ['$event']]\n            }], onFocus: [{\n                type: HostListener,\n                args: ['focus']\n            }], onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onKeyup: [{\n                type: HostListener,\n                args: ['keyup', ['$event']]\n            }] } });\nconst Password_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Password),\n    multi: true\n};\nclass Password {\n    constructor(cd, config, el, overlayService) {\n        this.cd = cd;\n        this.config = config;\n        this.el = el;\n        this.overlayService = overlayService;\n        this.mediumRegex = '^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})';\n        this.strongRegex = '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})';\n        this.feedback = true;\n        this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n        this.hideTransitionOptions = '.1s linear';\n        this.overlayVisible = false;\n        this.focused = false;\n        this.unmasked = false;\n        this.value = null;\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                default:\n                    this.contentTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    ngOnInit() {\n        this.infoText = this.promptText();\n        this.mediumCheckRegExp = new RegExp(this.mediumRegex);\n        this.strongCheckRegExp = new RegExp(this.strongRegex);\n        this.translationSubscription = this.config.translationObserver.subscribe(() => {\n            this.updateUI(this.value || \"\");\n        });\n    }\n    onAnimationStart(event) {\n        switch (event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n                ZIndexUtils.set('overlay', this.overlay, this.config.zIndex.overlay);\n                this.appendContainer();\n                this.alignOverlay();\n                this.bindScrollListener();\n                this.bindResizeListener();\n                break;\n            case 'void':\n                this.unbindScrollListener();\n                this.unbindResizeListener();\n                this.overlay = null;\n                break;\n        }\n    }\n    onAnimationEnd(event) {\n        switch (event.toState) {\n            case 'void':\n                ZIndexUtils.clear(event.element);\n                break;\n        }\n    }\n    appendContainer() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                document.getElementById(this.appendTo).appendChild(this.overlay);\n        }\n    }\n    alignOverlay() {\n        if (this.appendTo) {\n            this.overlay.style.minWidth = DomHandler.getOuterWidth(this.input.nativeElement) + 'px';\n            DomHandler.absolutePosition(this.overlay, this.input.nativeElement);\n        }\n        else {\n            DomHandler.relativePosition(this.overlay, this.input.nativeElement);\n        }\n    }\n    onInput(event) {\n        this.value = event.target.value;\n        this.onModelChange(this.value);\n        this.onModelTouched();\n    }\n    onFocus() {\n        this.focused = true;\n        if (this.feedback) {\n            this.overlayVisible = true;\n        }\n    }\n    onBlur() {\n        this.focused = false;\n        if (this.feedback) {\n            this.overlayVisible = false;\n        }\n    }\n    onKeyUp(event) {\n        if (this.feedback) {\n            let value = event.target.value;\n            this.updateUI(value);\n            if (!this.overlayVisible) {\n                this.overlayVisible = true;\n            }\n        }\n    }\n    updateUI(value) {\n        let label = null;\n        let meter = null;\n        switch (this.testStrength(value)) {\n            case 1:\n                label = this.weakText();\n                meter = {\n                    strength: 'weak',\n                    width: '33.33%'\n                };\n                break;\n            case 2:\n                label = this.mediumText();\n                meter = {\n                    strength: 'medium',\n                    width: '66.66%'\n                };\n                break;\n            case 3:\n                label = this.strongText();\n                meter = {\n                    strength: 'strong',\n                    width: '100%'\n                };\n                break;\n            default:\n                label = this.promptText();\n                meter = null;\n                break;\n        }\n        this.meter = meter;\n        this.infoText = label;\n    }\n    onMaskToggle() {\n        this.unmasked = !this.unmasked;\n    }\n    onOverlayClick(event) {\n        this.overlayService.add({\n            originalEvent: event,\n            target: this.el.nativeElement\n        });\n    }\n    testStrength(str) {\n        let level = 0;\n        if (this.strongCheckRegExp.test(str))\n            level = 3;\n        else if (this.mediumCheckRegExp.test(str))\n            level = 2;\n        else if (str.length)\n            level = 1;\n        return level;\n    }\n    writeValue(value) {\n        if (value === undefined)\n            this.value = null;\n        else\n            this.value = value;\n        if (this.feedback)\n            this.updateUI(this.value || \"\");\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.input.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.overlayVisible = false;\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    bindResizeListener() {\n        if (!this.resizeListener) {\n            this.resizeListener = () => {\n                if (this.overlayVisible) {\n                    this.overlayVisible = false;\n                }\n            };\n            window.addEventListener('resize', this.resizeListener);\n        }\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    unbindResizeListener() {\n        if (this.resizeListener) {\n            window.removeEventListener('resize', this.resizeListener);\n            this.resizeListener = null;\n        }\n    }\n    unbindOutsideClickListener() {\n        if (this.outsideClickListener) {\n            document.removeEventListener('click', this.outsideClickListener);\n            this.outsideClickListener = null;\n        }\n    }\n    containerClass() {\n        return { 'p-password p-component p-inputwrapper': true,\n            'p-input-icon-right': this.toggleMask\n        };\n    }\n    inputFieldClass() {\n        return { 'p-password-input': true,\n            'p-disabled': this.disabled\n        };\n    }\n    toggleIconClass() {\n        return this.unmasked ? 'pi pi-eye-slash' : 'pi pi-eye';\n    }\n    strengthClass() {\n        return `p-password-strength ${this.meter ? this.meter.strength : ''}`;\n    }\n    filled() {\n        return (this.value != null && this.value.toString().length > 0);\n    }\n    promptText() {\n        return this.promptLabel || this.getTranslation(TranslationKeys.PASSWORD_PROMPT);\n    }\n    weakText() {\n        return this.weakLabel || this.getTranslation(TranslationKeys.WEAK);\n    }\n    mediumText() {\n        return this.mediumLabel || this.getTranslation(TranslationKeys.MEDIUM);\n    }\n    strongText() {\n        return this.strongLabel || this.getTranslation(TranslationKeys.STRONG);\n    }\n    restoreAppend() {\n        if (this.overlay && this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.removeChild(this.overlay);\n            else\n                document.getElementById(this.appendTo).removeChild(this.overlay);\n        }\n    }\n    inputType() {\n        return this.unmasked ? 'text' : 'password';\n    }\n    getTranslation(option) {\n        return this.config.getTranslation(option);\n    }\n    ngOnDestroy() {\n        if (this.overlay) {\n            ZIndexUtils.clear(this.overlay);\n            this.overlay = null;\n        }\n        this.restoreAppend();\n        this.unbindResizeListener();\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n        if (this.translationSubscription) {\n            this.translationSubscription.unsubscribe();\n        }\n    }\n}\nPassword.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Password, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.PrimeNGConfig }, { token: i0.ElementRef }, { token: i1.OverlayService }], target: i0.ɵɵFactoryTarget.Component });\nPassword.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: Password, selector: \"p-password\", inputs: { disabled: \"disabled\", promptLabel: \"promptLabel\", mediumRegex: \"mediumRegex\", strongRegex: \"strongRegex\", weakLabel: \"weakLabel\", mediumLabel: \"mediumLabel\", strongLabel: \"strongLabel\", inputId: \"inputId\", feedback: \"feedback\", appendTo: \"appendTo\", toggleMask: \"toggleMask\", inputStyleClass: \"inputStyleClass\", styleClass: \"styleClass\", style: \"style\", inputStyle: \"inputStyle\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\", placeholder: \"placeholder\" }, host: { properties: { \"class.p-inputwrapper-filled\": \"filled()\", \"class.p-inputwrapper-focus\": \"focused\" } }, providers: [Password_VALUE_ACCESSOR], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"input\", first: true, predicate: [\"input\"], descendants: true }], ngImport: i0, template: `\n        <div [ngClass]=\"containerClass()\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input #input [attr.id]=\"inputId\" pInputText [ngClass]=\"inputFieldClass()\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [attr.type]=\"inputType()\" [attr.placeholder]=\"placeholder\" [value]=\"value\" (input)=\"onInput($event)\" (focus)=\"onFocus()\"\n                (blur)=\"onBlur()\" (keyup)=\"onKeyUp($event)\" />\n            <i *ngIf=\"toggleMask\" [ngClass]=\"toggleIconClass()\" (click)=\"onMaskToggle()\"></i>\n            <div #overlay *ngIf=\"overlayVisible\" [ngClass]=\"'p-password-panel p-component'\" (click)=\"onOverlayClick($event)\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onAnimationStart($event)\" (@overlayAnimation.done)=\"onAnimationEnd($event)\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <ng-container *ngIf=\"contentTemplate; else content\">\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                </ng-container>\n                <ng-template #content>\n                    <div class=\"p-password-meter\">\n                        <div [ngClass]=\"strengthClass()\" [ngStyle]=\"{'width': meter ? meter.width : ''}\"></div>\n                    </div>\n                    <div className=\"p-password-info\">{{infoText}}</div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </div>\n    `, isInline: true, styles: [\".p-password{position:relative;display:inline-flex}.p-password-panel{position:absolute;top:0;left:0}.p-password .p-password-panel{min-width:100%}.p-password-meter{height:10px}.p-password-strength{height:100%;width:0;transition:width 1s ease-in-out}.p-fluid .p-password{display:flex}\"], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i3.InputText, selector: \"[pInputText]\" }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                animate('{{showTransitionParams}}')\n            ]),\n            transition(':leave', [\n                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Password, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-password',\n                    template: `\n        <div [ngClass]=\"containerClass()\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input #input [attr.id]=\"inputId\" pInputText [ngClass]=\"inputFieldClass()\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [attr.type]=\"inputType()\" [attr.placeholder]=\"placeholder\" [value]=\"value\" (input)=\"onInput($event)\" (focus)=\"onFocus()\"\n                (blur)=\"onBlur()\" (keyup)=\"onKeyUp($event)\" />\n            <i *ngIf=\"toggleMask\" [ngClass]=\"toggleIconClass()\" (click)=\"onMaskToggle()\"></i>\n            <div #overlay *ngIf=\"overlayVisible\" [ngClass]=\"'p-password-panel p-component'\" (click)=\"onOverlayClick($event)\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onAnimationStart($event)\" (@overlayAnimation.done)=\"onAnimationEnd($event)\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <ng-container *ngIf=\"contentTemplate; else content\">\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                </ng-container>\n                <ng-template #content>\n                    <div class=\"p-password-meter\">\n                        <div [ngClass]=\"strengthClass()\" [ngStyle]=\"{'width': meter ? meter.width : ''}\"></div>\n                    </div>\n                    <div className=\"p-password-info\">{{infoText}}</div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </div>\n    `,\n                    animations: [\n                        trigger('overlayAnimation', [\n                            transition(':enter', [\n                                style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                                animate('{{showTransitionParams}}')\n                            ]),\n                            transition(':leave', [\n                                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n                            ])\n                        ])\n                    ],\n                    host: {\n                        '[class.p-inputwrapper-filled]': 'filled()',\n                        '[class.p-inputwrapper-focus]': 'focused'\n                    },\n                    providers: [Password_VALUE_ACCESSOR],\n                    styleUrls: ['./password.css'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.PrimeNGConfig }, { type: i0.ElementRef }, { type: i1.OverlayService }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], promptLabel: [{\n                type: Input\n            }], mediumRegex: [{\n                type: Input\n            }], strongRegex: [{\n                type: Input\n            }], weakLabel: [{\n                type: Input\n            }], mediumLabel: [{\n                type: Input\n            }], strongLabel: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], feedback: [{\n                type: Input\n            }], appendTo: [{\n                type: Input\n            }], toggleMask: [{\n                type: Input\n            }], inputStyleClass: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], inputStyle: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], input: [{\n                type: ViewChild,\n                args: ['input']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass PasswordModule {\n}\nPasswordModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PasswordModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPasswordModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PasswordModule, declarations: [PasswordDirective, Password], imports: [CommonModule, InputTextModule], exports: [PasswordDirective, Password, SharedModule] });\nPasswordModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PasswordModule, imports: [[CommonModule, InputTextModule], SharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PasswordModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, InputTextModule],\n                    exports: [PasswordDirective, Password, SharedModule],\n                    declarations: [PasswordDirective, Password]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Password, PasswordDirective, PasswordModule, Password_VALUE_ACCESSOR };\n//# sourceMappingURL=primeng-password.js.map\n"]},"metadata":{},"sourceType":"module"}