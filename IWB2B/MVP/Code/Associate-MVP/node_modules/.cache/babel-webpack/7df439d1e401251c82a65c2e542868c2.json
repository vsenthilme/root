{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Input, EventEmitter, Output, ContentChildren, NgModule } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { Subject } from 'rxjs';\nconst _c0 = [\"pOrganizationChartNode\", \"\"];\n\nfunction OrganizationChartNode_tbody_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.node.label);\n  }\n}\n\nfunction OrganizationChartNode_tbody_0_div_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction OrganizationChartNode_tbody_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_div_5_ng_container_1_Template, 1, 0, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.chart.getTemplateForNode(ctx_r2.node))(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r2.node));\n  }\n}\n\nconst _c2 = function (a0, a1) {\n  return {\n    \"pi-chevron-down\": a0,\n    \"pi-chevron-up\": a1\n  };\n};\n\nfunction OrganizationChartNode_tbody_0_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 8);\n    i0.ɵɵlistener(\"click\", function OrganizationChartNode_tbody_0_a_6_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.toggleNode($event, ctx_r8.node);\n    })(\"keydown.enter\", function OrganizationChartNode_tbody_0_a_6_Template_a_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.toggleNode($event, ctx_r10.node);\n    });\n    i0.ɵɵelement(1, \"i\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(1, _c2, ctx_r3.node.expanded, !ctx_r3.node.expanded));\n  }\n}\n\nfunction OrganizationChartNode_tbody_0_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelement(2, \"div\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r4.colspan);\n  }\n}\n\nconst _c3 = function (a0) {\n  return {\n    \"p-organizationchart-line-top\": a0\n  };\n};\n\nfunction OrganizationChartNode_tbody_0_ng_container_12_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 11);\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"td\", 12);\n    i0.ɵɵtext(3, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const first_r13 = ctx.first;\n    const last_r14 = ctx.last;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c3, !first_r13));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c3, !last_r14));\n  }\n}\n\nfunction OrganizationChartNode_tbody_0_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_ng_container_12_ng_template_1_Template, 4, 6, \"ng-template\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.node.children);\n  }\n}\n\nfunction OrganizationChartNode_tbody_0_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 13);\n    i0.ɵɵelement(1, \"table\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const child_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"node\", child_r15);\n  }\n}\n\nconst _c4 = function (a1, a2) {\n  return {\n    \"p-organizationchart-node-content\": true,\n    \"p-organizationchart-selectable-node\": a1,\n    \"p-highlight\": a2\n  };\n};\n\nfunction OrganizationChartNode_tbody_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵelementStart(3, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function OrganizationChartNode_tbody_0_Template_div_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.onNodeClick($event, ctx_r16.node);\n    });\n    i0.ɵɵtemplate(4, OrganizationChartNode_tbody_0_div_4_Template, 2, 1, \"div\", 0);\n    i0.ɵɵtemplate(5, OrganizationChartNode_tbody_0_div_5_Template, 2, 4, \"div\", 0);\n    i0.ɵɵtemplate(6, OrganizationChartNode_tbody_0_a_6_Template, 2, 4, \"a\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"tr\", 3);\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵelement(9, \"div\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"tr\", 3);\n    i0.ɵɵtemplate(11, OrganizationChartNode_tbody_0_ng_container_11_Template, 3, 1, \"ng-container\", 0);\n    i0.ɵɵtemplate(12, OrganizationChartNode_tbody_0_ng_container_12_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"tr\", 5);\n    i0.ɵɵtemplate(14, OrganizationChartNode_tbody_0_td_14_Template, 2, 1, \"td\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"colspan\", ctx_r0.colspan);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r0.node.styleClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(17, _c4, ctx_r0.chart.selectionMode && ctx_r0.node.selectable !== false, ctx_r0.isSelected()));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.chart.getTemplateForNode(ctx_r0.node));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.chart.getTemplateForNode(ctx_r0.node));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.leaf);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", !ctx_r0.leaf && ctx_r0.node.expanded ? \"p-organizationchart-node-visible\" : \"p-organizationchart-node-hidden\")(\"@childState\", \"in\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r0.colspan);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", !ctx_r0.leaf && ctx_r0.node.expanded ? \"p-organizationchart-node-visible\" : \"p-organizationchart-node-hidden\")(\"@childState\", \"in\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.node.children && ctx_r0.node.children.length === 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.node.children && ctx_r0.node.children.length > 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", !ctx_r0.leaf && ctx_r0.node.expanded ? \"p-organizationchart-node-visible\" : \"p-organizationchart-node-hidden\")(\"@childState\", \"in\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.node.children);\n  }\n}\n\nfunction OrganizationChart_table_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"table\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"node\", ctx_r0.root);\n  }\n}\n\nconst _c5 = function (a1) {\n  return {\n    \"p-organizationchart p-component\": true,\n    \"p-organizationchart-preservespace\": a1\n  };\n};\n\nclass OrganizationChartNode {\n  constructor(chart, cd) {\n    this.cd = cd;\n    this.chart = chart;\n    this.subscription = this.chart.selectionSource$.subscribe(() => {\n      this.cd.markForCheck();\n    });\n  }\n\n  get leaf() {\n    return this.node.leaf == false ? false : !(this.node.children && this.node.children.length);\n  }\n\n  get colspan() {\n    return this.node.children && this.node.children.length ? this.node.children.length * 2 : null;\n  }\n\n  onNodeClick(event, node) {\n    this.chart.onNodeClick(event, node);\n  }\n\n  toggleNode(event, node) {\n    node.expanded = !node.expanded;\n    if (node.expanded) this.chart.onNodeExpand.emit({\n      originalEvent: event,\n      node: this.node\n    });else this.chart.onNodeCollapse.emit({\n      originalEvent: event,\n      node: this.node\n    });\n    event.preventDefault();\n  }\n\n  isSelected() {\n    return this.chart.isSelected(this.node);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n\nOrganizationChartNode.ɵfac = function OrganizationChartNode_Factory(t) {\n  return new (t || OrganizationChartNode)(i0.ɵɵdirectiveInject(forwardRef(() => OrganizationChart)), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nOrganizationChartNode.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: OrganizationChartNode,\n  selectors: [[\"\", \"pOrganizationChartNode\", \"\"]],\n  inputs: {\n    node: \"node\",\n    root: \"root\",\n    first: \"first\",\n    last: \"last\"\n  },\n  attrs: _c0,\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"ngClass\", \"click\"], [\"tabindex\", \"0\", \"class\", \"p-node-toggler\", 3, \"click\", \"keydown.enter\", 4, \"ngIf\"], [1, \"p-organizationchart-lines\", 3, \"ngClass\"], [1, \"p-organizationchart-line-down\"], [1, \"p-organizationchart-nodes\", 3, \"ngClass\"], [\"colspan\", \"2\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"tabindex\", \"0\", 1, \"p-node-toggler\", 3, \"click\", \"keydown.enter\"], [1, \"p-node-toggler-icon\", \"pi\", 3, \"ngClass\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-organizationchart-line-left\", 3, \"ngClass\"], [1, \"p-organizationchart-line-right\", 3, \"ngClass\"], [\"colspan\", \"2\"], [\"pOrganizationChartNode\", \"\", 1, \"p-organizationchart-table\", 3, \"node\"]],\n  template: function OrganizationChartNode_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, OrganizationChartNode_tbody_0_Template, 15, 20, \"tbody\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.node);\n    }\n  },\n  directives: [i1.NgIf, i1.NgClass, i1.NgForOf, i1.NgTemplateOutlet, OrganizationChartNode],\n  styles: [\".p-organizationchart-table{border-spacing:0;border-collapse:separate;margin:0 auto}.p-organizationchart-table>tbody>tr>td{text-align:center;vertical-align:top;padding:0 .75rem}.p-organizationchart-node-content{display:inline-block;position:relative}.p-organizationchart-node-content .p-node-toggler{position:absolute;bottom:-.75rem;margin-left:-.75rem;z-index:2;left:50%;-webkit-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;width:1.5rem;height:1.5rem}.p-organizationchart-node-content .p-node-toggler .p-node-toggler-icon{position:relative;top:.25rem}.p-organizationchart-line-down{margin:0 auto;height:20px;width:1px}.p-organizationchart-line-left,.p-organizationchart-line-right{border-radius:0}.p-organizationchart-selectable-node{cursor:pointer}.p-organizationchart .p-organizationchart-node-hidden{display:none}.p-organizationchart-preservespace .p-organizationchart-node-hidden{visibility:hidden;display:inherit}\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('childState', [state('in', style({\n      opacity: 1\n    })), transition('void => *', [style({\n      opacity: 0\n    }), animate(150)]), transition('* => void', [animate(150, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationChartNode, [{\n    type: Component,\n    args: [{\n      selector: '[pOrganizationChartNode]',\n      template: `\n        <tbody *ngIf=\"node\">\n            <tr>\n                <td [attr.colspan]=\"colspan\">\n                    <div [class]=\"node.styleClass\" [ngClass]=\"{'p-organizationchart-node-content': true, 'p-organizationchart-selectable-node': chart.selectionMode && node.selectable !== false,'p-highlight':isSelected()}\"\n                        (click)=\"onNodeClick($event,node)\">\n                        <div *ngIf=\"!chart.getTemplateForNode(node)\">{{node.label}}</div>\n                        <div *ngIf=\"chart.getTemplateForNode(node)\">\n                            <ng-container *ngTemplateOutlet=\"chart.getTemplateForNode(node); context: {$implicit: node}\"></ng-container>\n                        </div>\n                        <a *ngIf=\"!leaf\" tabindex=\"0\" class=\"p-node-toggler\" (click)=\"toggleNode($event, node)\" (keydown.enter)=\"toggleNode($event, node)\">\n                            <i class=\"p-node-toggler-icon pi\" [ngClass]=\"{'pi-chevron-down': node.expanded, 'pi-chevron-up': !node.expanded}\"></i>\n                        </a>\n                    </div>\n                </td>\n            </tr>\n            <tr [ngClass]=\"!leaf&&node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-lines\" [@childState]=\"'in'\">\n                <td [attr.colspan]=\"colspan\">\n                    <div class=\"p-organizationchart-line-down\"></div>\n                </td>\n            </tr>\n            <tr [ngClass]=\"!leaf&&node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-lines\" [@childState]=\"'in'\">\n                <ng-container *ngIf=\"node.children && node.children.length === 1\">\n                    <td [attr.colspan]=\"colspan\">\n                        <div class=\"p-organizationchart-line-down\"></div>\n                    </td>\n                </ng-container>\n                <ng-container *ngIf=\"node.children && node.children.length > 1\">\n                    <ng-template ngFor let-child [ngForOf]=\"node.children\" let-first=\"first\" let-last=\"last\">\n                        <td class=\"p-organizationchart-line-left\" [ngClass]=\"{'p-organizationchart-line-top':!first}\">&nbsp;</td>\n                        <td class=\"p-organizationchart-line-right\" [ngClass]=\"{'p-organizationchart-line-top':!last}\">&nbsp;</td>\n                    </ng-template>\n                </ng-container>\n            </tr>\n            <tr [ngClass]=\"!leaf&&node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-nodes\" [@childState]=\"'in'\">\n                <td *ngFor=\"let child of node.children\" colspan=\"2\">\n                    <table class=\"p-organizationchart-table\" pOrganizationChartNode [node]=\"child\"></table>\n                </td>\n            </tr>\n        </tbody>\n    `,\n      animations: [trigger('childState', [state('in', style({\n        opacity: 1\n      })), transition('void => *', [style({\n        opacity: 0\n      }), animate(150)]), transition('* => void', [animate(150, style({\n        opacity: 0\n      }))])])],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styleUrls: ['./organizationchart.css']\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => OrganizationChart)]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    node: [{\n      type: Input\n    }],\n    root: [{\n      type: Input\n    }],\n    first: [{\n      type: Input\n    }],\n    last: [{\n      type: Input\n    }]\n  });\n})();\n\nclass OrganizationChart {\n  constructor(el, cd) {\n    this.el = el;\n    this.cd = cd;\n    this.preserveSpace = true;\n    this.selectionChange = new EventEmitter();\n    this.onNodeSelect = new EventEmitter();\n    this.onNodeUnselect = new EventEmitter();\n    this.onNodeExpand = new EventEmitter();\n    this.onNodeCollapse = new EventEmitter();\n    this.selectionSource = new Subject();\n    this.selectionSource$ = this.selectionSource.asObservable();\n  }\n\n  get selection() {\n    return this._selection;\n  }\n\n  set selection(val) {\n    this._selection = val;\n    if (this.initialized) this.selectionSource.next();\n  }\n\n  get root() {\n    return this.value && this.value.length ? this.value[0] : null;\n  }\n\n  ngAfterContentInit() {\n    if (this.templates.length) {\n      this.templateMap = {};\n    }\n\n    this.templates.forEach(item => {\n      this.templateMap[item.getType()] = item.template;\n    });\n    this.initialized = true;\n  }\n\n  getTemplateForNode(node) {\n    if (this.templateMap) return node.type ? this.templateMap[node.type] : this.templateMap['default'];else return null;\n  }\n\n  onNodeClick(event, node) {\n    let eventTarget = event.target;\n\n    if (eventTarget.className && (eventTarget.className.indexOf('p-node-toggler') !== -1 || eventTarget.className.indexOf('p-node-toggler-icon') !== -1)) {\n      return;\n    } else if (this.selectionMode) {\n      if (node.selectable === false) {\n        return;\n      }\n\n      let index = this.findIndexInSelection(node);\n      let selected = index >= 0;\n\n      if (this.selectionMode === 'single') {\n        if (selected) {\n          this.selection = null;\n          this.onNodeUnselect.emit({\n            originalEvent: event,\n            node: node\n          });\n        } else {\n          this.selection = node;\n          this.onNodeSelect.emit({\n            originalEvent: event,\n            node: node\n          });\n        }\n      } else if (this.selectionMode === 'multiple') {\n        if (selected) {\n          this.selection = this.selection.filter((val, i) => i != index);\n          this.onNodeUnselect.emit({\n            originalEvent: event,\n            node: node\n          });\n        } else {\n          this.selection = [...(this.selection || []), node];\n          this.onNodeSelect.emit({\n            originalEvent: event,\n            node: node\n          });\n        }\n      }\n\n      this.selectionChange.emit(this.selection);\n      this.selectionSource.next();\n    }\n  }\n\n  findIndexInSelection(node) {\n    let index = -1;\n\n    if (this.selectionMode && this.selection) {\n      if (this.selectionMode === 'single') {\n        index = this.selection == node ? 0 : -1;\n      } else if (this.selectionMode === 'multiple') {\n        for (let i = 0; i < this.selection.length; i++) {\n          if (this.selection[i] == node) {\n            index = i;\n            break;\n          }\n        }\n      }\n    }\n\n    return index;\n  }\n\n  isSelected(node) {\n    return this.findIndexInSelection(node) != -1;\n  }\n\n}\n\nOrganizationChart.ɵfac = function OrganizationChart_Factory(t) {\n  return new (t || OrganizationChart)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nOrganizationChart.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: OrganizationChart,\n  selectors: [[\"p-organizationChart\"]],\n  contentQueries: function OrganizationChart_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    selectionMode: \"selectionMode\",\n    preserveSpace: \"preserveSpace\",\n    selection: \"selection\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\",\n    onNodeSelect: \"onNodeSelect\",\n    onNodeUnselect: \"onNodeUnselect\",\n    onNodeExpand: \"onNodeExpand\",\n    onNodeCollapse: \"onNodeCollapse\"\n  },\n  decls: 2,\n  vars: 7,\n  consts: [[3, \"ngStyle\", \"ngClass\"], [\"class\", \"p-organizationchart-table\", \"pOrganizationChartNode\", \"\", 3, \"node\", 4, \"ngIf\"], [\"pOrganizationChartNode\", \"\", 1, \"p-organizationchart-table\", 3, \"node\"]],\n  template: function OrganizationChart_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, OrganizationChart_table_1_Template, 1, 1, \"table\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", i0.ɵɵpureFunction1(5, _c5, ctx.preserveSpace));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.root);\n    }\n  },\n  directives: [i1.NgStyle, i1.NgClass, i1.NgIf, OrganizationChartNode],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationChart, [{\n    type: Component,\n    args: [{\n      selector: 'p-organizationChart',\n      template: `\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{'p-organizationchart p-component': true, 'p-organizationchart-preservespace': preserveSpace}\">\n            <table class=\"p-organizationchart-table\" pOrganizationChartNode [node]=\"root\" *ngIf=\"root\"></table>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    selectionMode: [{\n      type: Input\n    }],\n    preserveSpace: [{\n      type: Input\n    }],\n    selection: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    onNodeSelect: [{\n      type: Output\n    }],\n    onNodeUnselect: [{\n      type: Output\n    }],\n    onNodeExpand: [{\n      type: Output\n    }],\n    onNodeCollapse: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nclass OrganizationChartModule {}\n\nOrganizationChartModule.ɵfac = function OrganizationChartModule_Factory(t) {\n  return new (t || OrganizationChartModule)();\n};\n\nOrganizationChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: OrganizationChartModule\n});\nOrganizationChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule], SharedModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [OrganizationChart, SharedModule],\n      declarations: [OrganizationChart, OrganizationChartNode]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { OrganizationChart, OrganizationChartModule, OrganizationChartNode }; //# sourceMappingURL=primeng-organizationchart.js.map","map":{"version":3,"sources":["D:/TEKCLOVER GIT MAIN/root/IWB2B/MVP/Code/Associate-MVP/node_modules/primeng/fesm2015/primeng-organizationchart.js"],"names":["i0","forwardRef","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","Input","EventEmitter","Output","ContentChildren","NgModule","trigger","state","style","transition","animate","i1","CommonModule","PrimeTemplate","SharedModule","Subject","OrganizationChartNode","constructor","chart","cd","subscription","selectionSource$","subscribe","markForCheck","leaf","node","children","length","colspan","onNodeClick","event","toggleNode","expanded","onNodeExpand","emit","originalEvent","onNodeCollapse","preventDefault","isSelected","ngOnDestroy","unsubscribe","ɵfac","OrganizationChart","ChangeDetectorRef","ɵcmp","NgIf","NgClass","NgForOf","NgTemplateOutlet","opacity","type","args","selector","template","animations","encapsulation","None","changeDetection","OnPush","styleUrls","undefined","decorators","root","first","last","el","preserveSpace","selectionChange","onNodeSelect","onNodeUnselect","selectionSource","asObservable","selection","_selection","val","initialized","next","value","ngAfterContentInit","templates","templateMap","forEach","item","getType","getTemplateForNode","eventTarget","target","className","indexOf","selectionMode","selectable","index","findIndexInSelection","selected","filter","i","ElementRef","NgStyle","styleClass","OrganizationChartModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Input, EventEmitter, Output, ContentChildren, NgModule } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { Subject } from 'rxjs';\n\nclass OrganizationChartNode {\n    constructor(chart, cd) {\n        this.cd = cd;\n        this.chart = chart;\n        this.subscription = this.chart.selectionSource$.subscribe(() => {\n            this.cd.markForCheck();\n        });\n    }\n    get leaf() {\n        return this.node.leaf == false ? false : !(this.node.children && this.node.children.length);\n    }\n    get colspan() {\n        return (this.node.children && this.node.children.length) ? this.node.children.length * 2 : null;\n    }\n    onNodeClick(event, node) {\n        this.chart.onNodeClick(event, node);\n    }\n    toggleNode(event, node) {\n        node.expanded = !node.expanded;\n        if (node.expanded)\n            this.chart.onNodeExpand.emit({ originalEvent: event, node: this.node });\n        else\n            this.chart.onNodeCollapse.emit({ originalEvent: event, node: this.node });\n        event.preventDefault();\n    }\n    isSelected() {\n        return this.chart.isSelected(this.node);\n    }\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\nOrganizationChartNode.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationChartNode, deps: [{ token: forwardRef(() => OrganizationChart) }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nOrganizationChartNode.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: OrganizationChartNode, selector: \"[pOrganizationChartNode]\", inputs: { node: \"node\", root: \"root\", first: \"first\", last: \"last\" }, ngImport: i0, template: `\n        <tbody *ngIf=\"node\">\n            <tr>\n                <td [attr.colspan]=\"colspan\">\n                    <div [class]=\"node.styleClass\" [ngClass]=\"{'p-organizationchart-node-content': true, 'p-organizationchart-selectable-node': chart.selectionMode && node.selectable !== false,'p-highlight':isSelected()}\"\n                        (click)=\"onNodeClick($event,node)\">\n                        <div *ngIf=\"!chart.getTemplateForNode(node)\">{{node.label}}</div>\n                        <div *ngIf=\"chart.getTemplateForNode(node)\">\n                            <ng-container *ngTemplateOutlet=\"chart.getTemplateForNode(node); context: {$implicit: node}\"></ng-container>\n                        </div>\n                        <a *ngIf=\"!leaf\" tabindex=\"0\" class=\"p-node-toggler\" (click)=\"toggleNode($event, node)\" (keydown.enter)=\"toggleNode($event, node)\">\n                            <i class=\"p-node-toggler-icon pi\" [ngClass]=\"{'pi-chevron-down': node.expanded, 'pi-chevron-up': !node.expanded}\"></i>\n                        </a>\n                    </div>\n                </td>\n            </tr>\n            <tr [ngClass]=\"!leaf&&node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-lines\" [@childState]=\"'in'\">\n                <td [attr.colspan]=\"colspan\">\n                    <div class=\"p-organizationchart-line-down\"></div>\n                </td>\n            </tr>\n            <tr [ngClass]=\"!leaf&&node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-lines\" [@childState]=\"'in'\">\n                <ng-container *ngIf=\"node.children && node.children.length === 1\">\n                    <td [attr.colspan]=\"colspan\">\n                        <div class=\"p-organizationchart-line-down\"></div>\n                    </td>\n                </ng-container>\n                <ng-container *ngIf=\"node.children && node.children.length > 1\">\n                    <ng-template ngFor let-child [ngForOf]=\"node.children\" let-first=\"first\" let-last=\"last\">\n                        <td class=\"p-organizationchart-line-left\" [ngClass]=\"{'p-organizationchart-line-top':!first}\">&nbsp;</td>\n                        <td class=\"p-organizationchart-line-right\" [ngClass]=\"{'p-organizationchart-line-top':!last}\">&nbsp;</td>\n                    </ng-template>\n                </ng-container>\n            </tr>\n            <tr [ngClass]=\"!leaf&&node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-nodes\" [@childState]=\"'in'\">\n                <td *ngFor=\"let child of node.children\" colspan=\"2\">\n                    <table class=\"p-organizationchart-table\" pOrganizationChartNode [node]=\"child\"></table>\n                </td>\n            </tr>\n        </tbody>\n    `, isInline: true, styles: [\".p-organizationchart-table{border-spacing:0;border-collapse:separate;margin:0 auto}.p-organizationchart-table>tbody>tr>td{text-align:center;vertical-align:top;padding:0 .75rem}.p-organizationchart-node-content{display:inline-block;position:relative}.p-organizationchart-node-content .p-node-toggler{position:absolute;bottom:-.75rem;margin-left:-.75rem;z-index:2;left:50%;-webkit-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;width:1.5rem;height:1.5rem}.p-organizationchart-node-content .p-node-toggler .p-node-toggler-icon{position:relative;top:.25rem}.p-organizationchart-line-down{margin:0 auto;height:20px;width:1px}.p-organizationchart-line-left,.p-organizationchart-line-right{border-radius:0}.p-organizationchart-selectable-node{cursor:pointer}.p-organizationchart .p-organizationchart-node-hidden{display:none}.p-organizationchart-preservespace .p-organizationchart-node-hidden{visibility:hidden;display:inherit}\"], components: [{ type: OrganizationChartNode, selector: \"[pOrganizationChartNode]\", inputs: [\"node\", \"root\", \"first\", \"last\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('childState', [\n            state('in', style({ opacity: 1 })),\n            transition('void => *', [\n                style({ opacity: 0 }),\n                animate(150)\n            ]),\n            transition('* => void', [\n                animate(150, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationChartNode, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[pOrganizationChartNode]',\n                    template: `\n        <tbody *ngIf=\"node\">\n            <tr>\n                <td [attr.colspan]=\"colspan\">\n                    <div [class]=\"node.styleClass\" [ngClass]=\"{'p-organizationchart-node-content': true, 'p-organizationchart-selectable-node': chart.selectionMode && node.selectable !== false,'p-highlight':isSelected()}\"\n                        (click)=\"onNodeClick($event,node)\">\n                        <div *ngIf=\"!chart.getTemplateForNode(node)\">{{node.label}}</div>\n                        <div *ngIf=\"chart.getTemplateForNode(node)\">\n                            <ng-container *ngTemplateOutlet=\"chart.getTemplateForNode(node); context: {$implicit: node}\"></ng-container>\n                        </div>\n                        <a *ngIf=\"!leaf\" tabindex=\"0\" class=\"p-node-toggler\" (click)=\"toggleNode($event, node)\" (keydown.enter)=\"toggleNode($event, node)\">\n                            <i class=\"p-node-toggler-icon pi\" [ngClass]=\"{'pi-chevron-down': node.expanded, 'pi-chevron-up': !node.expanded}\"></i>\n                        </a>\n                    </div>\n                </td>\n            </tr>\n            <tr [ngClass]=\"!leaf&&node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-lines\" [@childState]=\"'in'\">\n                <td [attr.colspan]=\"colspan\">\n                    <div class=\"p-organizationchart-line-down\"></div>\n                </td>\n            </tr>\n            <tr [ngClass]=\"!leaf&&node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-lines\" [@childState]=\"'in'\">\n                <ng-container *ngIf=\"node.children && node.children.length === 1\">\n                    <td [attr.colspan]=\"colspan\">\n                        <div class=\"p-organizationchart-line-down\"></div>\n                    </td>\n                </ng-container>\n                <ng-container *ngIf=\"node.children && node.children.length > 1\">\n                    <ng-template ngFor let-child [ngForOf]=\"node.children\" let-first=\"first\" let-last=\"last\">\n                        <td class=\"p-organizationchart-line-left\" [ngClass]=\"{'p-organizationchart-line-top':!first}\">&nbsp;</td>\n                        <td class=\"p-organizationchart-line-right\" [ngClass]=\"{'p-organizationchart-line-top':!last}\">&nbsp;</td>\n                    </ng-template>\n                </ng-container>\n            </tr>\n            <tr [ngClass]=\"!leaf&&node.expanded ? 'p-organizationchart-node-visible' : 'p-organizationchart-node-hidden'\" class=\"p-organizationchart-nodes\" [@childState]=\"'in'\">\n                <td *ngFor=\"let child of node.children\" colspan=\"2\">\n                    <table class=\"p-organizationchart-table\" pOrganizationChartNode [node]=\"child\"></table>\n                </td>\n            </tr>\n        </tbody>\n    `,\n                    animations: [\n                        trigger('childState', [\n                            state('in', style({ opacity: 1 })),\n                            transition('void => *', [\n                                style({ opacity: 0 }),\n                                animate(150)\n                            ]),\n                            transition('* => void', [\n                                animate(150, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styleUrls: ['./organizationchart.css']\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => OrganizationChart)]\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { node: [{\n                type: Input\n            }], root: [{\n                type: Input\n            }], first: [{\n                type: Input\n            }], last: [{\n                type: Input\n            }] } });\nclass OrganizationChart {\n    constructor(el, cd) {\n        this.el = el;\n        this.cd = cd;\n        this.preserveSpace = true;\n        this.selectionChange = new EventEmitter();\n        this.onNodeSelect = new EventEmitter();\n        this.onNodeUnselect = new EventEmitter();\n        this.onNodeExpand = new EventEmitter();\n        this.onNodeCollapse = new EventEmitter();\n        this.selectionSource = new Subject();\n        this.selectionSource$ = this.selectionSource.asObservable();\n    }\n    get selection() {\n        return this._selection;\n    }\n    set selection(val) {\n        this._selection = val;\n        if (this.initialized)\n            this.selectionSource.next();\n    }\n    get root() {\n        return this.value && this.value.length ? this.value[0] : null;\n    }\n    ngAfterContentInit() {\n        if (this.templates.length) {\n            this.templateMap = {};\n        }\n        this.templates.forEach((item) => {\n            this.templateMap[item.getType()] = item.template;\n        });\n        this.initialized = true;\n    }\n    getTemplateForNode(node) {\n        if (this.templateMap)\n            return node.type ? this.templateMap[node.type] : this.templateMap['default'];\n        else\n            return null;\n    }\n    onNodeClick(event, node) {\n        let eventTarget = event.target;\n        if (eventTarget.className && (eventTarget.className.indexOf('p-node-toggler') !== -1 || eventTarget.className.indexOf('p-node-toggler-icon') !== -1)) {\n            return;\n        }\n        else if (this.selectionMode) {\n            if (node.selectable === false) {\n                return;\n            }\n            let index = this.findIndexInSelection(node);\n            let selected = (index >= 0);\n            if (this.selectionMode === 'single') {\n                if (selected) {\n                    this.selection = null;\n                    this.onNodeUnselect.emit({ originalEvent: event, node: node });\n                }\n                else {\n                    this.selection = node;\n                    this.onNodeSelect.emit({ originalEvent: event, node: node });\n                }\n            }\n            else if (this.selectionMode === 'multiple') {\n                if (selected) {\n                    this.selection = this.selection.filter((val, i) => i != index);\n                    this.onNodeUnselect.emit({ originalEvent: event, node: node });\n                }\n                else {\n                    this.selection = [...this.selection || [], node];\n                    this.onNodeSelect.emit({ originalEvent: event, node: node });\n                }\n            }\n            this.selectionChange.emit(this.selection);\n            this.selectionSource.next();\n        }\n    }\n    findIndexInSelection(node) {\n        let index = -1;\n        if (this.selectionMode && this.selection) {\n            if (this.selectionMode === 'single') {\n                index = (this.selection == node) ? 0 : -1;\n            }\n            else if (this.selectionMode === 'multiple') {\n                for (let i = 0; i < this.selection.length; i++) {\n                    if (this.selection[i] == node) {\n                        index = i;\n                        break;\n                    }\n                }\n            }\n        }\n        return index;\n    }\n    isSelected(node) {\n        return this.findIndexInSelection(node) != -1;\n    }\n}\nOrganizationChart.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationChart, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nOrganizationChart.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: OrganizationChart, selector: \"p-organizationChart\", inputs: { value: \"value\", style: \"style\", styleClass: \"styleClass\", selectionMode: \"selectionMode\", preserveSpace: \"preserveSpace\", selection: \"selection\" }, outputs: { selectionChange: \"selectionChange\", onNodeSelect: \"onNodeSelect\", onNodeUnselect: \"onNodeUnselect\", onNodeExpand: \"onNodeExpand\", onNodeCollapse: \"onNodeCollapse\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{'p-organizationchart p-component': true, 'p-organizationchart-preservespace': preserveSpace}\">\n            <table class=\"p-organizationchart-table\" pOrganizationChartNode [node]=\"root\" *ngIf=\"root\"></table>\n        </div>\n    `, isInline: true, components: [{ type: OrganizationChartNode, selector: \"[pOrganizationChartNode]\", inputs: [\"node\", \"root\", \"first\", \"last\"] }], directives: [{ type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationChart, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-organizationChart',\n                    template: `\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{'p-organizationchart p-component': true, 'p-organizationchart-preservespace': preserveSpace}\">\n            <table class=\"p-organizationchart-table\" pOrganizationChartNode [node]=\"root\" *ngIf=\"root\"></table>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { value: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], selectionMode: [{\n                type: Input\n            }], preserveSpace: [{\n                type: Input\n            }], selection: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], onNodeSelect: [{\n                type: Output\n            }], onNodeUnselect: [{\n                type: Output\n            }], onNodeExpand: [{\n                type: Output\n            }], onNodeCollapse: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass OrganizationChartModule {\n}\nOrganizationChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOrganizationChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationChartModule, declarations: [OrganizationChart, OrganizationChartNode], imports: [CommonModule], exports: [OrganizationChart, SharedModule] });\nOrganizationChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationChartModule, imports: [[CommonModule], SharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [OrganizationChart, SharedModule],\n                    declarations: [OrganizationChart, OrganizationChartNode]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OrganizationChart, OrganizationChartModule, OrganizationChartNode };\n//# sourceMappingURL=primeng-organizationchart.js.map\n"]},"metadata":{},"sourceType":"module"}