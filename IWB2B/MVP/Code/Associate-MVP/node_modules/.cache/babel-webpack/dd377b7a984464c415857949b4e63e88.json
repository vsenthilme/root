{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, Directive, HostListener, Optional, NgModule } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i9 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i1 from 'primeng/api';\nimport { FilterOperator, FilterMatchMode, PrimeTemplate, TranslationKeys, SharedModule } from 'primeng/api';\nimport * as i2 from 'primeng/paginator';\nimport { PaginatorModule } from 'primeng/paginator';\nimport * as i8 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i11 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport * as i6 from 'primeng/tristatecheckbox';\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\nimport * as i7 from 'primeng/calendar';\nimport { CalendarModule } from 'primeng/calendar';\nimport * as i5 from 'primeng/inputnumber';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport * as i10 from 'primeng/dropdown';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils, ZIndexUtils } from 'primeng/utils';\nimport { Subject } from 'rxjs';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport { trigger, transition, style, animate } from '@angular/animations';\nconst _c0 = [\"container\"];\nconst _c1 = [\"resizeHelper\"];\nconst _c2 = [\"reorderIndicatorUp\"];\nconst _c3 = [\"reorderIndicatorDown\"];\nconst _c4 = [\"wrapper\"];\nconst _c5 = [\"table\"];\nconst _c6 = [\"tableHeader\"];\n\nfunction Table_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"i\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(\"p-datatable-loading-icon pi-spin \" + ctx_r1.loadingIcon);\n  }\n}\n\nfunction Table_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, Table_div_3_ng_container_1_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.captionTemplate);\n  }\n}\n\nfunction Table_p_paginator_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-paginator\", 17);\n    i0.ɵɵlistener(\"onPageChange\", function Table_p_paginator_4_Template_p_paginator_onPageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onPageChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rows\", ctx_r3.rows)(\"first\", ctx_r3.first)(\"totalRecords\", ctx_r3.totalRecords)(\"pageLinkSize\", ctx_r3.pageLinks)(\"alwaysShow\", ctx_r3.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r3.rowsPerPageOptions)(\"templateLeft\", ctx_r3.paginatorLeftTemplate)(\"templateRight\", ctx_r3.paginatorRightTemplate)(\"dropdownAppendTo\", ctx_r3.paginatorDropdownAppendTo)(\"dropdownScrollHeight\", ctx_r3.paginatorDropdownScrollHeight)(\"currentPageReportTemplate\", ctx_r3.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r3.showFirstLastIcon)(\"dropdownItemTemplate\", ctx_r3.paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r3.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r3.showJumpToPageDropdown)(\"showPageLinks\", ctx_r3.showPageLinks);\n  }\n}\n\nfunction Table_table_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_table_7_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_table_7_tbody_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tbody\", 25);\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r18.frozenValue)(\"frozenRows\", true)(\"pTableBody\", ctx_r18.columns)(\"pTableBodyTemplate\", ctx_r18.frozenBodyTemplate)(\"frozen\", true);\n  }\n}\n\nfunction Table_table_7_tfoot_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c7 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction Table_table_7_tfoot_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tfoot\", 26);\n    i0.ɵɵtemplate(1, Table_table_7_tfoot_7_ng_container_1_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r19.footerGroupedTemplate || ctx_r19.footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c7, ctx_r19.columns));\n  }\n}\n\nfunction Table_table_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 18, 19);\n    i0.ɵɵtemplate(2, Table_table_7_ng_container_2_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementStart(3, \"thead\", 21);\n    i0.ɵɵtemplate(4, Table_table_7_ng_container_4_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, Table_table_7_tbody_5_Template, 1, 5, \"tbody\", 22);\n    i0.ɵɵelement(6, \"tbody\", 23);\n    i0.ɵɵtemplate(7, Table_table_7_tfoot_7_Template, 2, 4, \"tfoot\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r5.tableStyleClass)(\"ngStyle\", ctx_r5.tableStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(11, _c7, ctx_r5.columns));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.headerGroupedTemplate || ctx_r5.headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(13, _c7, ctx_r5.columns));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.frozenValue || ctx_r5.frozenBodyTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r5.dataToRender)(\"pTableBody\", ctx_r5.columns)(\"pTableBodyTemplate\", ctx_r5.bodyTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.footerGroupedTemplate || ctx_r5.footerTemplate);\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_tbody_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tbody\", 25);\n  }\n\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r25.frozenValue)(\"frozenRows\", true)(\"pTableBody\", ctx_r25.columns)(\"pTableBodyTemplate\", ctx_r25.bodyTemplate)(\"frozen\", true);\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_tfoot_9_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_tfoot_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tfoot\", 26);\n    i0.ɵɵtemplate(1, Table_cdk_virtual_scroll_viewport_8_tfoot_9_ng_container_1_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r26.footerGroupedTemplate || ctx_r26.footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c7, ctx_r26.columns));\n  }\n}\n\nfunction Table_cdk_virtual_scroll_viewport_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 27);\n    i0.ɵɵlistener(\"scrolledIndexChange\", function Table_cdk_virtual_scroll_viewport_8_Template_cdk_virtual_scroll_viewport_scrolledIndexChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.onScrollIndexChange($event);\n    });\n    i0.ɵɵelementStart(1, \"table\", 18, 19);\n    i0.ɵɵtemplate(3, Table_cdk_virtual_scroll_viewport_8_ng_container_3_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementStart(4, \"thead\", 21, 28);\n    i0.ɵɵtemplate(6, Table_cdk_virtual_scroll_viewport_8_ng_container_6_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, Table_cdk_virtual_scroll_viewport_8_tbody_7_Template, 1, 5, \"tbody\", 22);\n    i0.ɵɵelement(8, \"tbody\", 23);\n    i0.ɵɵtemplate(9, Table_cdk_virtual_scroll_viewport_8_tfoot_9_Template, 2, 4, \"tfoot\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r6.scrollHeight !== \"flex\" ? ctx_r6.scrollHeight : undefined);\n    i0.ɵɵproperty(\"itemSize\", ctx_r6.virtualRowHeight)(\"minBufferPx\", ctx_r6.minBufferPx)(\"maxBufferPx\", ctx_r6.maxBufferPx);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r6.tableStyleClass)(\"ngStyle\", ctx_r6.tableStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(16, _c7, ctx_r6.columns));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.headerGroupedTemplate || ctx_r6.headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(18, _c7, ctx_r6.columns));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.frozenValue || ctx_r6.frozenBodyTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r6.dataToRender)(\"pTableBody\", ctx_r6.columns)(\"pTableBodyTemplate\", ctx_r6.bodyTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.footerGroupedTemplate || ctx_r6.footerTemplate);\n  }\n}\n\nfunction Table_p_paginator_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-paginator\", 29);\n    i0.ɵɵlistener(\"onPageChange\", function Table_p_paginator_9_Template_p_paginator_onPageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.onPageChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rows\", ctx_r7.rows)(\"first\", ctx_r7.first)(\"totalRecords\", ctx_r7.totalRecords)(\"pageLinkSize\", ctx_r7.pageLinks)(\"alwaysShow\", ctx_r7.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r7.rowsPerPageOptions)(\"templateLeft\", ctx_r7.paginatorLeftTemplate)(\"templateRight\", ctx_r7.paginatorRightTemplate)(\"dropdownAppendTo\", ctx_r7.paginatorDropdownAppendTo)(\"dropdownScrollHeight\", ctx_r7.paginatorDropdownScrollHeight)(\"currentPageReportTemplate\", ctx_r7.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r7.showFirstLastIcon)(\"dropdownItemTemplate\", ctx_r7.paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r7.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r7.showJumpToPageDropdown)(\"showPageLinks\", ctx_r7.showPageLinks);\n  }\n}\n\nfunction Table_div_10_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, Table_div_10_ng_container_1_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r8.summaryTemplate);\n  }\n}\n\nfunction Table_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 31, 32);\n  }\n}\n\nfunction Table_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 33, 34);\n  }\n}\n\nfunction Table_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 35, 36);\n  }\n}\n\nconst _c8 = function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n  return {\n    \"p-datatable p-component\": true,\n    \"p-datatable-hoverable-rows\": a1,\n    \"p-datatable-auto-layout\": a2,\n    \"p-datatable-resizable\": a3,\n    \"p-datatable-resizable-fit\": a4,\n    \"p-datatable-scrollable\": a5,\n    \"p-datatable-scrollable-vertical\": a6,\n    \"p-datatable-scrollable-horizontal\": a7,\n    \"p-datatable-scrollable-both\": a8,\n    \"p-datatable-flex-scrollable\": a9,\n    \"p-datatable-responsive-stack\": a10,\n    \"p-datatable-responsive-scroll\": a11,\n    \"p-datatable-responsive\": a12,\n    \"p-datatable-grouped-header\": a13,\n    \"p-datatable-grouped-footer\": a14\n  };\n};\n\nconst _c9 = function (a0) {\n  return {\n    height: a0\n  };\n};\n\nconst _c10 = [\"pTableBody\", \"\"];\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c11 = function (a0, a1, a2, a3, a4) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    editing: a3,\n    frozen: a4\n  };\n};\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    const rowData_r7 = ctx_r14.$implicit;\n    const rowIndex_r8 = ctx_r14.index;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.dt.groupHeaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(2, _c11, rowData_r7, ctx_r9.dt.paginator ? ctx_r9.dt.first + rowIndex_r8 : rowIndex_r8, ctx_r9.columns, ctx_r9.dt.editMode === \"row\" && ctx_r9.dt.isRowEditing(rowData_r7), ctx_r9.frozen));\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext();\n    const rowData_r7 = ctx_r16.$implicit;\n    const rowIndex_r8 = ctx_r16.index;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r10.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(2, _c11, rowData_r7, ctx_r10.dt.paginator ? ctx_r10.dt.first + rowIndex_r8 : rowIndex_r8, ctx_r10.columns, ctx_r10.dt.editMode === \"row\" && ctx_r10.dt.isRowEditing(rowData_r7), ctx_r10.frozen));\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c12 = function (a0, a1, a2, a3, a4, a5, a6) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    editing: a3,\n    frozen: a4,\n    rowgroup: a5,\n    rowspan: a6\n  };\n};\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext();\n    const rowData_r7 = ctx_r18.$implicit;\n    const rowIndex_r8 = ctx_r18.index;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r11.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction7(2, _c12, rowData_r7, ctx_r11.dt.paginator ? ctx_r11.dt.first + rowIndex_r8 : rowIndex_r8, ctx_r11.columns, ctx_r11.dt.editMode === \"row\" && ctx_r11.dt.isRowEditing(rowData_r7), ctx_r11.frozen, ctx_r11.shouldRenderRowspan(ctx_r11.value, rowData_r7, rowIndex_r8), ctx_r11.calculateRowGroupSize(ctx_r11.value, rowData_r7, rowIndex_r8)));\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext();\n    const rowData_r7 = ctx_r20.$implicit;\n    const rowIndex_r8 = ctx_r20.index;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r12.dt.groupFooterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(2, _c11, rowData_r7, ctx_r12.dt.paginator ? ctx_r12.dt.first + rowIndex_r8 : rowIndex_r8, ctx_r12.columns, ctx_r12.dt.editMode === \"row\" && ctx_r12.dt.isRowEditing(rowData_r7), ctx_r12.frozen));\n  }\n}\n\nfunction TableBody_ng_container_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_0_ng_template_1_ng_container_0_Template, 2, 8, \"ng-container\", 2);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_ng_container_1_Template, 2, 8, \"ng-container\", 0);\n    i0.ɵɵtemplate(2, TableBody_ng_container_0_ng_template_1_ng_container_2_Template, 2, 10, \"ng-container\", 0);\n    i0.ɵɵtemplate(3, TableBody_ng_container_0_ng_template_1_ng_container_3_Template, 2, 8, \"ng-container\", 2);\n  }\n\n  if (rf & 2) {\n    const rowData_r7 = ctx.$implicit;\n    const rowIndex_r8 = ctx.index;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.dt.groupHeaderTemplate && ctx_r6.dt.rowGroupMode === \"subheader\" && ctx_r6.shouldRenderRowGroupHeader(ctx_r6.value, rowData_r7, rowIndex_r8));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.dt.rowGroupMode !== \"rowspan\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.dt.rowGroupMode === \"rowspan\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.dt.groupFooterTemplate && ctx_r6.dt.rowGroupMode === \"subheader\" && ctx_r6.shouldRenderRowGroupFooter(ctx_r6.value, rowData_r7, rowIndex_r8));\n  }\n}\n\nfunction TableBody_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_Template, 4, 4, \"ng-template\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.value)(\"ngForTrackBy\", ctx_r0.dt.rowTrackBy);\n  }\n}\n\nfunction TableBody_ng_container_1_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_1_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 4);\n  }\n\n  if (rf & 2) {\n    const rowData_r22 = ctx.$implicit;\n    const rowIndex_r23 = ctx.index;\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", rowData_r22 ? ctx_r21.template : ctx_r21.dt.loadingBodyTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(2, _c11, rowData_r22, ctx_r21.dt.paginator ? ctx_r21.dt.first + rowIndex_r23 : rowIndex_r23, ctx_r21.columns, ctx_r21.dt.editMode === \"row\" && ctx_r21.dt.isRowEditing(rowData_r22), ctx_r21.frozen));\n  }\n}\n\nfunction TableBody_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_1_ng_template_1_Template, 1, 8, \"ng-template\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", ctx_r1.value)(\"cdkVirtualForTrackBy\", ctx_r1.dt.rowTrackBy)(\"cdkVirtualForTemplateCacheSize\", 0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c13 = function (a0, a1, a2, a3, a4, a5) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    expanded: a3,\n    editing: a4,\n    frozen: a5\n  };\n};\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext();\n    const rowData_r26 = ctx_r32.$implicit;\n    const rowIndex_r27 = ctx_r32.index;\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r28.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(2, _c13, rowData_r26, ctx_r28.dt.paginator ? ctx_r28.dt.first + rowIndex_r27 : rowIndex_r27, ctx_r28.columns, ctx_r28.dt.isRowExpanded(rowData_r26), ctx_r28.dt.editMode === \"row\" && ctx_r28.dt.isRowEditing(rowData_r26), ctx_r28.frozen));\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r34 = i0.ɵɵnextContext();\n    const rowData_r26 = ctx_r34.$implicit;\n    const rowIndex_r27 = ctx_r34.index;\n    const ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r29.dt.groupHeaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(2, _c13, rowData_r26, ctx_r29.dt.paginator ? ctx_r29.dt.first + rowIndex_r27 : rowIndex_r27, ctx_r29.columns, ctx_r29.dt.isRowExpanded(rowData_r26), ctx_r29.dt.editMode === \"row\" && ctx_r29.dt.isRowEditing(rowData_r26), ctx_r29.frozen));\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r38 = i0.ɵɵnextContext(2);\n    const rowData_r26 = ctx_r38.$implicit;\n    const rowIndex_r27 = ctx_r38.index;\n    const ctx_r36 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r36.dt.groupFooterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(2, _c13, rowData_r26, ctx_r36.dt.paginator ? ctx_r36.dt.first + rowIndex_r27 : rowIndex_r27, ctx_r36.columns, ctx_r36.dt.isRowExpanded(rowData_r26), ctx_r36.dt.editMode === \"row\" && ctx_r36.dt.isRowEditing(rowData_r26), ctx_r36.frozen));\n  }\n}\n\nconst _c14 = function (a0, a1, a2, a3) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    frozen: a3\n  };\n};\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵtemplate(2, TableBody_ng_container_2_ng_template_1_ng_container_2_ng_container_2_Template, 2, 9, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext();\n    const rowData_r26 = ctx_r39.$implicit;\n    const rowIndex_r27 = ctx_r39.index;\n    const ctx_r30 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r30.dt.expandedRowTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction4(3, _c14, rowData_r26, ctx_r30.dt.paginator ? ctx_r30.dt.first + rowIndex_r27 : rowIndex_r27, ctx_r30.columns, ctx_r30.frozen));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r30.dt.groupFooterTemplate && ctx_r30.dt.rowGroupMode === \"subheader\" && ctx_r30.shouldRenderRowGroupFooter(ctx_r30.value, rowData_r26, rowIndex_r27));\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_2_ng_template_1_ng_container_0_Template, 2, 9, \"ng-container\", 0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_1_Template, 2, 9, \"ng-container\", 2);\n    i0.ɵɵtemplate(2, TableBody_ng_container_2_ng_template_1_ng_container_2_Template, 3, 8, \"ng-container\", 0);\n  }\n\n  if (rf & 2) {\n    const rowData_r26 = ctx.$implicit;\n    const rowIndex_r27 = ctx.index;\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r25.dt.groupHeaderTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.dt.groupHeaderTemplate && ctx_r25.dt.rowGroupMode === \"subheader\" && ctx_r25.shouldRenderRowGroupHeader(ctx_r25.value, rowData_r26, rowIndex_r27));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.dt.isRowExpanded(rowData_r26));\n  }\n}\n\nfunction TableBody_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_Template, 3, 3, \"ng-template\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.value)(\"ngForTrackBy\", ctx_r2.dt.rowTrackBy);\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_3_ng_template_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext();\n    const rowData_r41 = ctx_r46.$implicit;\n    const rowIndex_r42 = ctx_r46.index;\n    const ctx_r44 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r44.dt.frozenExpandedRowTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction4(2, _c14, rowData_r41, ctx_r44.dt.paginator ? ctx_r44.dt.first + rowIndex_r42 : rowIndex_r42, ctx_r44.columns, ctx_r44.frozen));\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_3_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵtemplate(1, TableBody_ng_container_3_ng_template_1_ng_container_1_Template, 2, 7, \"ng-container\", 0);\n  }\n\n  if (rf & 2) {\n    const rowData_r41 = ctx.$implicit;\n    const rowIndex_r42 = ctx.index;\n    const ctx_r40 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r40.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(3, _c13, rowData_r41, ctx_r40.dt.paginator ? ctx_r40.dt.first + rowIndex_r42 : rowIndex_r42, ctx_r40.columns, ctx_r40.dt.isRowExpanded(rowData_r41), ctx_r40.dt.editMode === \"row\" && ctx_r40.dt.isRowEditing(rowData_r41), ctx_r40.frozen));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r40.dt.isRowExpanded(rowData_r41));\n  }\n}\n\nfunction TableBody_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_3_ng_template_1_Template, 2, 10, \"ng-template\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.value)(\"ngForTrackBy\", ctx_r3.dt.rowTrackBy);\n  }\n}\n\nfunction TableBody_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c15 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    frozen: a1\n  };\n};\n\nfunction TableBody_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_4_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.dt.loadingBodyTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c15, ctx_r4.columns, ctx_r4.frozen));\n  }\n}\n\nfunction TableBody_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_5_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.dt.emptyMessageTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c15, ctx_r5.columns, ctx_r5.frozen));\n  }\n}\n\nfunction SortIcon_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getMultiSortMetaIndex() + 1);\n  }\n}\n\nconst _c16 = function (a0, a1, a2) {\n  return {\n    \"pi-sort-amount-up-alt\": a0,\n    \"pi-sort-amount-down\": a1,\n    \"pi-sort-alt\": a2\n  };\n};\n\nfunction CellEditor_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction CellEditor_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CellEditor_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.inputTemplate);\n  }\n}\n\nfunction CellEditor_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction CellEditor_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CellEditor_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.outputTemplate);\n  }\n}\n\nconst _c17 = [\"box\"];\n\nconst _c18 = function (a1, a2) {\n  return {\n    \"p-radiobutton-box p-component\": true,\n    \"p-highlight\": a1,\n    \"p-disabled\": a2\n  };\n};\n\nconst _c19 = function (a1, a2) {\n  return {\n    \"p-checkbox-box p-component\": true,\n    \"p-highlight\": a1,\n    \"p-disabled\": a2\n  };\n};\n\nconst _c20 = function (a0) {\n  return {\n    \"pi pi-check\": a0\n  };\n};\n\nconst _c21 = function (a1, a2) {\n  return {\n    \"p-checkbox-box\": true,\n    \"p-highlight\": a1,\n    \"p-disabled\": a2\n  };\n};\n\nfunction ColumnFilterFormElement_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c22 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    filterCallback: a1\n  };\n};\n\nfunction ColumnFilterFormElement_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ColumnFilterFormElement_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.filterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c22, ctx_r0.filterConstraint.value, ctx_r0.filterCallback));\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 7);\n    i0.ɵɵlistener(\"input\", function ColumnFilterFormElement_ng_template_1_input_1_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.onModelChange($event.target.value);\n    })(\"keydown.enter\", function ColumnFilterFormElement_ng_template_1_input_1_Template_input_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.onTextInputEnterKeyDown($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r4.filterConstraint == null ? null : ctx_r4.filterConstraint.value);\n    i0.ɵɵattribute(\"placeholder\", ctx_r4.placeholder);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-inputNumber\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template_p_inputNumber_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.onModelChange($event);\n    })(\"onKeyDown\", function ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template_p_inputNumber_onKeyDown_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.onNumericInputKeyDown($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.filterConstraint == null ? null : ctx_r5.filterConstraint.value)(\"showButtons\", true)(\"minFractionDigits\", ctx_r5.minFractionDigits)(\"maxFractionDigits\", ctx_r5.maxFractionDigits)(\"prefix\", ctx_r5.prefix)(\"suffix\", ctx_r5.suffix)(\"placeholder\", ctx_r5.placeholder)(\"mode\", ctx_r5.currency ? \"currency\" : \"decimal\")(\"locale\", ctx_r5.locale)(\"localeMatcher\", ctx_r5.localeMatcher)(\"currency\", ctx_r5.currency)(\"currencyDisplay\", ctx_r5.currencyDisplay)(\"useGrouping\", ctx_r5.useGrouping);\n    i0.ɵɵattribute(\"placeholder\", ctx_r5.placeholder);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_p_triStateCheckbox_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-triStateCheckbox\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilterFormElement_ng_template_1_p_triStateCheckbox_3_Template_p_triStateCheckbox_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.onModelChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.filterConstraint == null ? null : ctx_r6.filterConstraint.value);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_p_calendar_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-calendar\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilterFormElement_ng_template_1_p_calendar_4_Template_p_calendar_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.onModelChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r7.filterConstraint == null ? null : ctx_r7.filterConstraint.value);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, ColumnFilterFormElement_ng_template_1_input_1_Template, 1, 2, \"input\", 4);\n    i0.ɵɵtemplate(2, ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template, 1, 14, \"p-inputNumber\", 5);\n    i0.ɵɵtemplate(3, ColumnFilterFormElement_ng_template_1_p_triStateCheckbox_3_Template, 1, 1, \"p-triStateCheckbox\", 6);\n    i0.ɵɵtemplate(4, ColumnFilterFormElement_ng_template_1_p_calendar_4_Template, 1, 1, \"p-calendar\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r2.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"numeric\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"boolean\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"date\");\n  }\n}\n\nconst _c23 = [\"icon\"];\n\nfunction ColumnFilter_p_columnFilterFormElement_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-columnFilterFormElement\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"type\", ctx_r0.type)(\"field\", ctx_r0.field)(\"filterConstraint\", ctx_r0.dt.filters[ctx_r0.field])(\"filterTemplate\", ctx_r0.filterTemplate)(\"placeholder\", ctx_r0.placeholder)(\"minFractionDigits\", ctx_r0.minFractionDigits)(\"maxFractionDigits\", ctx_r0.maxFractionDigits)(\"prefix\", ctx_r0.prefix)(\"suffix\", ctx_r0.suffix)(\"locale\", ctx_r0.locale)(\"localeMatcher\", ctx_r0.localeMatcher)(\"currency\", ctx_r0.currency)(\"currencyDisplay\", ctx_r0.currencyDisplay)(\"useGrouping\", ctx_r0.useGrouping);\n  }\n}\n\nconst _c24 = function (a0, a1) {\n  return {\n    \"p-column-filter-menu-button-open\": a0,\n    \"p-column-filter-menu-button-active\": a1\n  };\n};\n\nfunction ColumnFilter_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 6, 7);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.toggleMenu();\n    })(\"keydown\", function ColumnFilter_button_2_Template_button_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onToggleButtonKeyDown($event);\n    });\n    i0.ɵɵelement(2, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c24, ctx_r1.overlayVisible, ctx_r1.hasFilter()));\n    i0.ɵɵattribute(\"aria-expanded\", ctx_r1.overlayVisible);\n  }\n}\n\nconst _c25 = function (a0) {\n  return {\n    \"p-hidden-space\": a0\n  };\n};\n\nfunction ColumnFilter_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9, 7);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.clearFilter();\n    });\n    i0.ɵɵelement(2, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c25, !ctx_r2.hasRowFilter()));\n  }\n}\n\nfunction ColumnFilter_div_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c26 = function (a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\n\nfunction ColumnFilter_div_4_ul_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 19);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ul_2_li_1_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const matchMode_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(3);\n      return ctx_r19.onRowMatchModeChange(matchMode_r17.value);\n    })(\"keydown\", function ColumnFilter_div_4_ul_2_li_1_Template_li_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext(3);\n      return ctx_r21.onRowMatchModeKeyDown($event);\n    })(\"keydown.enter\", function ColumnFilter_div_4_ul_2_li_1_Template_li_keydown_enter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const matchMode_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(3);\n      return ctx_r22.onRowMatchModeChange(matchMode_r17.value);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const matchMode_r17 = ctx.$implicit;\n    const i_r18 = ctx.index;\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c26, ctx_r16.isRowMatchModeSelected(matchMode_r17.value)));\n    i0.ɵɵattribute(\"tabindex\", i_r18 === 0 ? \"0\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(matchMode_r17.label);\n  }\n}\n\nfunction ColumnFilter_div_4_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ul\", 15);\n    i0.ɵɵtemplate(1, ColumnFilter_div_4_ul_2_li_1_Template, 2, 5, \"li\", 16);\n    i0.ɵɵelement(2, \"li\", 17);\n    i0.ɵɵelementStart(3, \"li\", 18);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ul_2_Template_li_click_3_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return ctx_r23.onRowClearItemClick();\n    })(\"keydown\", function ColumnFilter_div_4_ul_2_Template_li_keydown_3_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.onRowMatchModeKeyDown($event);\n    })(\"keydown.enter\", function ColumnFilter_div_4_ul_2_Template_li_keydown_enter_3_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return ctx_r26.onRowClearItemClick();\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.matchModes);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r12.noFilterLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵelementStart(1, \"p-dropdown\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilter_div_4_ng_template_3_div_0_Template_p_dropdown_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext(3);\n      return ctx_r32.onOperatorChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"options\", ctx_r27.operatorOptions)(\"ngModel\", ctx_r27.operator);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_2_p_dropdown_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-dropdown\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilter_div_4_ng_template_3_div_2_p_dropdown_1_Template_p_dropdown_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const fieldConstraint_r34 = i0.ɵɵnextContext().$implicit;\n      const ctx_r38 = i0.ɵɵnextContext(3);\n      return ctx_r38.onMenuMatchModeChange($event, fieldConstraint_r34);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fieldConstraint_r34 = i0.ɵɵnextContext().$implicit;\n    const ctx_r36 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"options\", ctx_r36.matchModes)(\"ngModel\", fieldConstraint_r34.matchMode);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_2_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_div_2_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r44);\n      const fieldConstraint_r34 = i0.ɵɵnextContext().$implicit;\n      const ctx_r42 = i0.ɵɵnextContext(3);\n      return ctx_r42.removeConstraint(fieldConstraint_r34);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r37 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"label\", ctx_r37.removeRuleButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, ColumnFilter_div_4_ng_template_3_div_2_p_dropdown_1_Template, 1, 2, \"p-dropdown\", 30);\n    i0.ɵɵelement(2, \"p-columnFilterFormElement\", 31);\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtemplate(4, ColumnFilter_div_4_ng_template_3_div_2_button_4_Template, 1, 1, \"button\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fieldConstraint_r34 = ctx.$implicit;\n    const ctx_r28 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.showMatchModes && ctx_r28.matchModes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r28.type)(\"field\", ctx_r28.field)(\"filterConstraint\", fieldConstraint_r34)(\"filterTemplate\", ctx_r28.filterTemplate)(\"placeholder\", ctx_r28.placeholder)(\"minFractionDigits\", ctx_r28.minFractionDigits)(\"maxFractionDigits\", ctx_r28.maxFractionDigits)(\"prefix\", ctx_r28.prefix)(\"suffix\", ctx_r28.suffix)(\"locale\", ctx_r28.locale)(\"localeMatcher\", ctx_r28.localeMatcher)(\"currency\", ctx_r28.currency)(\"currencyDisplay\", ctx_r28.currencyDisplay)(\"useGrouping\", ctx_r28.useGrouping);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.showRemoveIcon);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelementStart(1, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_div_3_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext(3);\n      return ctx_r45.addConstraint();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", ctx_r29.addRuleButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r47 = i0.ɵɵnextContext(3);\n      return ctx_r47.clearFilter();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r30 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"label\", ctx_r30.clearButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r50 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r50);\n      const ctx_r49 = i0.ɵɵnextContext(3);\n      return ctx_r49.applyFilter();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"label\", ctx_r31.applyButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ColumnFilter_div_4_ng_template_3_div_0_Template, 2, 2, \"div\", 20);\n    i0.ɵɵelementStart(1, \"div\", 21);\n    i0.ɵɵtemplate(2, ColumnFilter_div_4_ng_template_3_div_2_Template, 5, 16, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ColumnFilter_div_4_ng_template_3_div_3_Template, 2, 1, \"div\", 23);\n    i0.ɵɵelementStart(4, \"div\", 24);\n    i0.ɵɵtemplate(5, ColumnFilter_div_4_ng_template_3_button_5_Template, 1, 1, \"button\", 25);\n    i0.ɵɵtemplate(6, ColumnFilter_div_4_ng_template_3_button_6_Template, 1, 1, \"button\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.isShowOperator);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r14.fieldConstraints);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.isShowAddConstraint);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.showClearButton);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.showApplyButton);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c27 = function (a1) {\n  return {\n    \"p-column-filter-overlay p-component p-fluid\": true,\n    \"p-column-filter-overlay-menu\": a1\n  };\n};\n\nfunction ColumnFilter_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return ctx_r51.onContentClick();\n    })(\"@overlayAnimation.start\", function ColumnFilter_div_4_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r53 = i0.ɵɵnextContext();\n      return ctx_r53.onOverlayAnimationStart($event);\n    })(\"@overlayAnimation.done\", function ColumnFilter_div_4_Template_div_animation_overlayAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r54 = i0.ɵɵnextContext();\n      return ctx_r54.onOverlayAnimationEnd($event);\n    })(\"keydown.escape\", function ColumnFilter_div_4_Template_div_keydown_escape_0_listener() {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r55 = i0.ɵɵnextContext();\n      return ctx_r55.onEscape();\n    });\n    i0.ɵɵtemplate(1, ColumnFilter_div_4_ng_container_1_Template, 1, 0, \"ng-container\", 12);\n    i0.ɵɵtemplate(2, ColumnFilter_div_4_ul_2_Template, 5, 2, \"ul\", 13);\n    i0.ɵɵtemplate(3, ColumnFilter_div_4_ng_template_3_Template, 7, 5, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, ColumnFilter_div_4_ng_container_5_Template, 1, 0, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r13 = i0.ɵɵreference(4);\n\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c27, ctx_r3.display === \"menu\"))(\"@overlayAnimation\", \"visible\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(10, _c7, ctx_r3.field));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.display === \"row\")(\"ngIfElse\", _r13);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(12, _c7, ctx_r3.field));\n  }\n}\n\nconst _c28 = function (a0, a1) {\n  return {\n    \"p-column-filter-row\": a0,\n    \"p-column-filter-menu\": a1\n  };\n};\n\nclass TableService {\n  constructor() {\n    this.sortSource = new Subject();\n    this.selectionSource = new Subject();\n    this.contextMenuSource = new Subject();\n    this.valueSource = new Subject();\n    this.totalRecordsSource = new Subject();\n    this.columnsSource = new Subject();\n    this.resetSource = new Subject();\n    this.sortSource$ = this.sortSource.asObservable();\n    this.selectionSource$ = this.selectionSource.asObservable();\n    this.contextMenuSource$ = this.contextMenuSource.asObservable();\n    this.valueSource$ = this.valueSource.asObservable();\n    this.totalRecordsSource$ = this.totalRecordsSource.asObservable();\n    this.columnsSource$ = this.columnsSource.asObservable();\n    this.resetSource$ = this.resetSource.asObservable();\n  }\n\n  onSort(sortMeta) {\n    this.sortSource.next(sortMeta);\n  }\n\n  onSelectionChange() {\n    this.selectionSource.next();\n  }\n\n  onResetChange() {\n    this.resetSource.next();\n  }\n\n  onContextMenu(data) {\n    this.contextMenuSource.next(data);\n  }\n\n  onValueChange(value) {\n    this.valueSource.next(value);\n  }\n\n  onTotalRecordsChange(value) {\n    this.totalRecordsSource.next(value);\n  }\n\n  onColumnsChange(columns) {\n    this.columnsSource.next(columns);\n  }\n\n}\n\nTableService.ɵfac = function TableService_Factory(t) {\n  return new (t || TableService)();\n};\n\nTableService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TableService,\n  factory: TableService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass Table {\n  constructor(el, zone, tableService, cd, filterService, overlayService) {\n    this.el = el;\n    this.zone = zone;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.filterService = filterService;\n    this.overlayService = overlayService;\n    this.pageLinks = 5;\n    this.alwaysShowPaginator = true;\n    this.paginatorPosition = 'bottom';\n    this.paginatorDropdownScrollHeight = '200px';\n    this.currentPageReportTemplate = '{currentPage} of {totalPages}';\n    this.showFirstLastIcon = true;\n    this.showPageLinks = true;\n    this.defaultSortOrder = 1;\n    this.sortMode = 'single';\n    this.resetPageOnSort = true;\n    this.selectionChange = new EventEmitter();\n    this.contextMenuSelectionChange = new EventEmitter();\n    this.contextMenuSelectionMode = \"separate\";\n\n    this.rowTrackBy = (index, item) => item;\n\n    this.lazy = false;\n    this.lazyLoadOnInit = true;\n    this.compareSelectionBy = 'deepEquals';\n    this.csvSeparator = ',';\n    this.exportFilename = 'download';\n    this.filters = {};\n    this.filterDelay = 300;\n    this.expandedRowKeys = {};\n    this.editingRowKeys = {};\n    this.rowExpandMode = 'multiple';\n    this.scrollDirection = \"vertical\";\n    this.virtualScrollDelay = 250;\n    this.virtualRowHeight = 28;\n    this.columnResizeMode = 'fit';\n    this.loadingIcon = 'pi pi-spinner';\n    this.showLoader = true;\n    this.showInitialSortBadge = true;\n    this.stateStorage = 'session';\n    this.editMode = 'cell';\n    this.responsiveLayout = 'stack';\n    this.breakpoint = '960px';\n    this.onRowSelect = new EventEmitter();\n    this.onRowUnselect = new EventEmitter();\n    this.onPage = new EventEmitter();\n    this.onSort = new EventEmitter();\n    this.onFilter = new EventEmitter();\n    this.onLazyLoad = new EventEmitter();\n    this.onRowExpand = new EventEmitter();\n    this.onRowCollapse = new EventEmitter();\n    this.onContextMenuSelect = new EventEmitter();\n    this.onColResize = new EventEmitter();\n    this.onColReorder = new EventEmitter();\n    this.onRowReorder = new EventEmitter();\n    this.onEditInit = new EventEmitter();\n    this.onEditComplete = new EventEmitter();\n    this.onEditCancel = new EventEmitter();\n    this.onHeaderCheckboxToggle = new EventEmitter();\n    this.sortFunction = new EventEmitter();\n    this.firstChange = new EventEmitter();\n    this.rowsChange = new EventEmitter();\n    this.onStateSave = new EventEmitter();\n    this.onStateRestore = new EventEmitter();\n    this._value = [];\n    this._totalRecords = 0;\n    this._first = 0;\n    this.selectionKeys = {};\n    this._sortOrder = 1;\n    this.columnResizing = false;\n    this.rowGroupHeaderStyleObject = {};\n    this.id = UniqueComponentId();\n  }\n\n  ngOnInit() {\n    if (this.lazy && this.lazyLoadOnInit) {\n      if (!this.virtualScroll) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      }\n\n      if (this.restoringFilter) {\n        this.restoringFilter = false;\n      }\n    }\n\n    if (this.responsiveLayout === 'stack' && !this.scrollable) {\n      this.createResponsiveStyle();\n    }\n\n    this.initialized = true;\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'caption':\n          this.captionTemplate = item.template;\n          break;\n\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'headergrouped':\n          this.headerGroupedTemplate = item.template;\n          break;\n\n        case 'body':\n          this.bodyTemplate = item.template;\n          break;\n\n        case 'loadingbody':\n          this.loadingBodyTemplate = item.template;\n          break;\n\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n\n        case 'footergrouped':\n          this.footerGroupedTemplate = item.template;\n          break;\n\n        case 'summary':\n          this.summaryTemplate = item.template;\n          break;\n\n        case 'colgroup':\n          this.colGroupTemplate = item.template;\n          break;\n\n        case 'rowexpansion':\n          this.expandedRowTemplate = item.template;\n          break;\n\n        case 'groupheader':\n          this.groupHeaderTemplate = item.template;\n          break;\n\n        case 'rowspan':\n          this.rowspanTemplate = item.template;\n          break;\n\n        case 'groupfooter':\n          this.groupFooterTemplate = item.template;\n          break;\n\n        case 'frozenrows':\n          this.frozenRowsTemplate = item.template;\n          break;\n\n        case 'frozenheader':\n          this.frozenHeaderTemplate = item.template;\n          break;\n\n        case 'frozenbody':\n          this.frozenBodyTemplate = item.template;\n          break;\n\n        case 'frozenfooter':\n          this.frozenFooterTemplate = item.template;\n          break;\n\n        case 'frozencolgroup':\n          this.frozenColGroupTemplate = item.template;\n          break;\n\n        case 'frozenrowexpansion':\n          this.frozenExpandedRowTemplate = item.template;\n          break;\n\n        case 'emptymessage':\n          this.emptyMessageTemplate = item.template;\n          break;\n\n        case 'paginatorleft':\n          this.paginatorLeftTemplate = item.template;\n          break;\n\n        case 'paginatorright':\n          this.paginatorRightTemplate = item.template;\n          break;\n\n        case 'paginatordropdownitem':\n          this.paginatorDropdownItemTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    if (this.isStateful() && this.resizableColumns) {\n      this.restoreColumnWidths();\n    }\n\n    if (this.scrollable && (this.scrollDirection !== 'vertical' || this.rowGroupMode === 'subheader')) {\n      this.updateScrollWidth();\n    }\n\n    if (this.scrollable && this.virtualScroll) {\n      this.virtualScrollSubscription = this.virtualScrollBody.renderedRangeStream.subscribe(range => {\n        let top = range.start * this.virtualRowHeight * -1;\n        this.tableHeaderViewChild.nativeElement.style.top = top + 'px';\n      });\n    }\n  }\n\n  ngOnChanges(simpleChange) {\n    if (simpleChange.value) {\n      if (this.isStateful() && !this.stateRestored) {\n        this.restoreState();\n      }\n\n      this._value = simpleChange.value.currentValue;\n\n      if (!this.lazy) {\n        this.totalRecords = this._value ? this._value.length : 0;\n        if (this.sortMode == 'single' && this.sortField) this.sortSingle();else if (this.sortMode == 'multiple' && this.multiSortMeta) this.sortMultiple();else if (this.hasFilter()) //sort already filters\n          this._filter();\n      }\n\n      this.tableService.onValueChange(simpleChange.value.currentValue);\n\n      if (this.scrollable && (this.scrollDirection !== 'vertical' || this.rowGroupMode === 'subheader')) {\n        this.updateScrollWidth();\n      }\n    }\n\n    if (simpleChange.columns) {\n      this._columns = simpleChange.columns.currentValue;\n      this.tableService.onColumnsChange(simpleChange.columns.currentValue);\n\n      if (this._columns && this.isStateful() && this.reorderableColumns && !this.columnOrderStateRestored) {\n        this.restoreColumnOrder();\n      }\n\n      if (this.scrollable && (this.scrollDirection !== 'vertical' || this.rowGroupMode === 'subheader')) {\n        this.updateScrollWidth();\n      }\n    }\n\n    if (simpleChange.sortField) {\n      this._sortField = simpleChange.sortField.currentValue; //avoid triggering lazy load prior to lazy initialization at onInit\n\n      if (!this.lazy || this.initialized) {\n        if (this.sortMode === 'single') {\n          this.sortSingle();\n        }\n      }\n    }\n\n    if (simpleChange.sortOrder) {\n      this._sortOrder = simpleChange.sortOrder.currentValue; //avoid triggering lazy load prior to lazy initialization at onInit\n\n      if (!this.lazy || this.initialized) {\n        if (this.sortMode === 'single') {\n          this.sortSingle();\n        }\n      }\n    }\n\n    if (simpleChange.multiSortMeta) {\n      this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\n\n      if (this.sortMode === 'multiple' && (this.initialized || !this.lazy && !this.virtualScroll)) {\n        this.sortMultiple();\n      }\n    }\n\n    if (simpleChange.selection) {\n      this._selection = simpleChange.selection.currentValue;\n\n      if (!this.preventSelectionSetterPropagation) {\n        this.updateSelectionKeys();\n        this.tableService.onSelectionChange();\n      }\n\n      this.preventSelectionSetterPropagation = false;\n    }\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = val;\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  set columns(cols) {\n    this._columns = cols;\n  }\n\n  get first() {\n    return this._first;\n  }\n\n  set first(val) {\n    this._first = val;\n  }\n\n  get rows() {\n    return this._rows;\n  }\n\n  set rows(val) {\n    this._rows = val;\n  }\n\n  get totalRecords() {\n    return this._totalRecords;\n  }\n\n  set totalRecords(val) {\n    this._totalRecords = val;\n    this.tableService.onTotalRecordsChange(this._totalRecords);\n  }\n\n  get sortField() {\n    return this._sortField;\n  }\n\n  set sortField(val) {\n    this._sortField = val;\n  }\n\n  get sortOrder() {\n    return this._sortOrder;\n  }\n\n  set sortOrder(val) {\n    this._sortOrder = val;\n  }\n\n  get multiSortMeta() {\n    return this._multiSortMeta;\n  }\n\n  set multiSortMeta(val) {\n    this._multiSortMeta = val;\n  }\n\n  get selection() {\n    return this._selection;\n  }\n\n  set selection(val) {\n    this._selection = val;\n  }\n\n  get dataToRender() {\n    let data = this.filteredValue || this.value;\n    return data ? this.paginator && !this.lazy ? data.slice(this.first, this.first + this.rows) : data : [];\n  }\n\n  updateSelectionKeys() {\n    if (this.dataKey && this._selection) {\n      this.selectionKeys = {};\n\n      if (Array.isArray(this._selection)) {\n        for (let data of this._selection) {\n          this.selectionKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n        }\n      } else {\n        this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection, this.dataKey))] = 1;\n      }\n    }\n  }\n\n  onPageChange(event) {\n    this.first = event.first;\n    this.rows = event.rows;\n\n    if (this.lazy) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    }\n\n    this.onPage.emit({\n      first: this.first,\n      rows: this.rows\n    });\n    this.firstChange.emit(this.first);\n    this.rowsChange.emit(this.rows);\n    this.tableService.onValueChange(this.value);\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n\n    this.anchorRowIndex = null;\n\n    if (this.scrollable) {\n      this.resetScrollTop();\n    }\n  }\n\n  sort(event) {\n    let originalEvent = event.originalEvent;\n\n    if (this.sortMode === 'single') {\n      this._sortOrder = this.sortField === event.field ? this.sortOrder * -1 : this.defaultSortOrder;\n      this._sortField = event.field;\n\n      if (this.resetPageOnSort) {\n        this._first = 0;\n        this.firstChange.emit(this._first);\n\n        if (this.scrollable) {\n          this.resetScrollTop();\n        }\n      }\n\n      this.sortSingle();\n    }\n\n    if (this.sortMode === 'multiple') {\n      let metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n      let sortMeta = this.getSortMeta(event.field);\n\n      if (sortMeta) {\n        if (!metaKey) {\n          this._multiSortMeta = [{\n            field: event.field,\n            order: sortMeta.order * -1\n          }];\n\n          if (this.resetPageOnSort) {\n            this._first = 0;\n            this.firstChange.emit(this._first);\n\n            if (this.scrollable) {\n              this.resetScrollTop();\n            }\n          }\n        } else {\n          sortMeta.order = sortMeta.order * -1;\n        }\n      } else {\n        if (!metaKey || !this.multiSortMeta) {\n          this._multiSortMeta = [];\n\n          if (this.resetPageOnSort) {\n            this._first = 0;\n            this.firstChange.emit(this._first);\n          }\n        }\n\n        this._multiSortMeta.push({\n          field: event.field,\n          order: this.defaultSortOrder\n        });\n      }\n\n      this.sortMultiple();\n    }\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n\n    this.anchorRowIndex = null;\n  }\n\n  sortSingle() {\n    if (this.sortField && this.sortOrder) {\n      if (this.restoringSort) {\n        this.restoringSort = false;\n      }\n\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      } else if (this.value) {\n        if (this.customSort) {\n          this.sortFunction.emit({\n            data: this.value,\n            mode: this.sortMode,\n            field: this.sortField,\n            order: this.sortOrder\n          });\n        } else {\n          this.value.sort((data1, data2) => {\n            let value1 = ObjectUtils.resolveFieldData(data1, this.sortField);\n            let value2 = ObjectUtils.resolveFieldData(data2, this.sortField);\n            let result = null;\n            if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2);else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n            return this.sortOrder * result;\n          });\n          this._value = [...this.value];\n        }\n\n        if (this.hasFilter()) {\n          this._filter();\n        }\n      }\n\n      let sortMeta = {\n        field: this.sortField,\n        order: this.sortOrder\n      };\n      this.onSort.emit(sortMeta);\n      this.tableService.onSort(sortMeta);\n    }\n  }\n\n  sortMultiple() {\n    if (this.multiSortMeta) {\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      } else if (this.value) {\n        if (this.customSort) {\n          this.sortFunction.emit({\n            data: this.value,\n            mode: this.sortMode,\n            multiSortMeta: this.multiSortMeta\n          });\n        } else {\n          this.value.sort((data1, data2) => {\n            return this.multisortField(data1, data2, this.multiSortMeta, 0);\n          });\n          this._value = [...this.value];\n        }\n\n        if (this.hasFilter()) {\n          this._filter();\n        }\n      }\n\n      this.onSort.emit({\n        multisortmeta: this.multiSortMeta\n      });\n      this.tableService.onSort(this.multiSortMeta);\n    }\n  }\n\n  multisortField(data1, data2, multiSortMeta, index) {\n    let value1 = ObjectUtils.resolveFieldData(data1, multiSortMeta[index].field);\n    let value2 = ObjectUtils.resolveFieldData(data2, multiSortMeta[index].field);\n    let result = null;\n    if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 == 'string' || value1 instanceof String) {\n      if (value1.localeCompare && value1 != value2) {\n        return multiSortMeta[index].order * value1.localeCompare(value2);\n      }\n    } else {\n      result = value1 < value2 ? -1 : 1;\n    }\n\n    if (value1 == value2) {\n      return multiSortMeta.length - 1 > index ? this.multisortField(data1, data2, multiSortMeta, index + 1) : 0;\n    }\n\n    return multiSortMeta[index].order * result;\n  }\n\n  getSortMeta(field) {\n    if (this.multiSortMeta && this.multiSortMeta.length) {\n      for (let i = 0; i < this.multiSortMeta.length; i++) {\n        if (this.multiSortMeta[i].field === field) {\n          return this.multiSortMeta[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  isSorted(field) {\n    if (this.sortMode === 'single') {\n      return this.sortField && this.sortField === field;\n    } else if (this.sortMode === 'multiple') {\n      let sorted = false;\n\n      if (this.multiSortMeta) {\n        for (let i = 0; i < this.multiSortMeta.length; i++) {\n          if (this.multiSortMeta[i].field == field) {\n            sorted = true;\n            break;\n          }\n        }\n      }\n\n      return sorted;\n    }\n  }\n\n  handleRowClick(event) {\n    let target = event.originalEvent.target;\n    let targetNode = target.nodeName;\n    let parentNode = target.parentElement && target.parentElement.nodeName;\n\n    if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || parentNode == 'INPUT' || parentNode == 'BUTTON' || parentNode == 'A' || DomHandler.hasClass(event.originalEvent.target, 'p-clickable')) {\n      return;\n    }\n\n    if (this.selectionMode) {\n      this.preventSelectionSetterPropagation = true;\n\n      if (this.isMultipleSelectionMode() && event.originalEvent.shiftKey && this.anchorRowIndex != null) {\n        DomHandler.clearSelection();\n\n        if (this.rangeRowIndex != null) {\n          this.clearSelectionRange(event.originalEvent);\n        }\n\n        this.rangeRowIndex = event.rowIndex;\n        this.selectRange(event.originalEvent, event.rowIndex);\n      } else {\n        let rowData = event.rowData;\n        let selected = this.isSelected(rowData);\n        let metaSelection = this.rowTouched ? false : this.metaKeySelection;\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n        this.anchorRowIndex = event.rowIndex;\n        this.rangeRowIndex = event.rowIndex;\n\n        if (metaSelection) {\n          let metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;\n\n          if (selected && metaKey) {\n            if (this.isSingleSelectionMode()) {\n              this._selection = null;\n              this.selectionKeys = {};\n              this.selectionChange.emit(null);\n            } else {\n              let selectionIndex = this.findIndexInSelection(rowData);\n              this._selection = this.selection.filter((val, i) => i != selectionIndex);\n              this.selectionChange.emit(this.selection);\n\n              if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n              }\n            }\n\n            this.onRowUnselect.emit({\n              originalEvent: event.originalEvent,\n              data: rowData,\n              type: 'row'\n            });\n          } else {\n            if (this.isSingleSelectionMode()) {\n              this._selection = rowData;\n              this.selectionChange.emit(rowData);\n\n              if (dataKeyValue) {\n                this.selectionKeys = {};\n                this.selectionKeys[dataKeyValue] = 1;\n              }\n            } else if (this.isMultipleSelectionMode()) {\n              if (metaKey) {\n                this._selection = this.selection || [];\n              } else {\n                this._selection = [];\n                this.selectionKeys = {};\n              }\n\n              this._selection = [...this.selection, rowData];\n              this.selectionChange.emit(this.selection);\n\n              if (dataKeyValue) {\n                this.selectionKeys[dataKeyValue] = 1;\n              }\n            }\n\n            this.onRowSelect.emit({\n              originalEvent: event.originalEvent,\n              data: rowData,\n              type: 'row',\n              index: event.rowIndex\n            });\n          }\n        } else {\n          if (this.selectionMode === 'single') {\n            if (selected) {\n              this._selection = null;\n              this.selectionKeys = {};\n              this.selectionChange.emit(this.selection);\n              this.onRowUnselect.emit({\n                originalEvent: event.originalEvent,\n                data: rowData,\n                type: 'row',\n                index: event.rowIndex\n              });\n            } else {\n              this._selection = rowData;\n              this.selectionChange.emit(this.selection);\n              this.onRowSelect.emit({\n                originalEvent: event.originalEvent,\n                data: rowData,\n                type: 'row',\n                index: event.rowIndex\n              });\n\n              if (dataKeyValue) {\n                this.selectionKeys = {};\n                this.selectionKeys[dataKeyValue] = 1;\n              }\n            }\n          } else if (this.selectionMode === 'multiple') {\n            if (selected) {\n              let selectionIndex = this.findIndexInSelection(rowData);\n              this._selection = this.selection.filter((val, i) => i != selectionIndex);\n              this.selectionChange.emit(this.selection);\n              this.onRowUnselect.emit({\n                originalEvent: event.originalEvent,\n                data: rowData,\n                type: 'row',\n                index: event.rowIndex\n              });\n\n              if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n              }\n            } else {\n              this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n              this.selectionChange.emit(this.selection);\n              this.onRowSelect.emit({\n                originalEvent: event.originalEvent,\n                data: rowData,\n                type: 'row',\n                index: event.rowIndex\n              });\n\n              if (dataKeyValue) {\n                this.selectionKeys[dataKeyValue] = 1;\n              }\n            }\n          }\n        }\n      }\n\n      this.tableService.onSelectionChange();\n\n      if (this.isStateful()) {\n        this.saveState();\n      }\n    }\n\n    this.rowTouched = false;\n  }\n\n  handleRowTouchEnd(event) {\n    this.rowTouched = true;\n  }\n\n  handleRowRightClick(event) {\n    if (this.contextMenu) {\n      const rowData = event.rowData;\n\n      if (this.contextMenuSelectionMode === 'separate') {\n        this.contextMenuSelection = rowData;\n        this.contextMenuSelectionChange.emit(rowData);\n        this.onContextMenuSelect.emit({\n          originalEvent: event.originalEvent,\n          data: rowData,\n          index: event.rowIndex\n        });\n        this.contextMenu.show(event.originalEvent);\n        this.tableService.onContextMenu(rowData);\n      } else if (this.contextMenuSelectionMode === 'joint') {\n        this.preventSelectionSetterPropagation = true;\n        let selected = this.isSelected(rowData);\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n\n        if (!selected) {\n          if (this.isSingleSelectionMode()) {\n            this.selection = rowData;\n            this.selectionChange.emit(rowData);\n\n            if (dataKeyValue) {\n              this.selectionKeys = {};\n              this.selectionKeys[dataKeyValue] = 1;\n            }\n          } else if (this.isMultipleSelectionMode()) {\n            this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n            this.selectionChange.emit(this.selection);\n\n            if (dataKeyValue) {\n              this.selectionKeys[dataKeyValue] = 1;\n            }\n          }\n        }\n\n        this.tableService.onSelectionChange();\n        this.contextMenu.show(event.originalEvent);\n        this.onContextMenuSelect.emit({\n          originalEvent: event,\n          data: rowData,\n          index: event.rowIndex\n        });\n      }\n    }\n  }\n\n  selectRange(event, rowIndex) {\n    let rangeStart, rangeEnd;\n\n    if (this.anchorRowIndex > rowIndex) {\n      rangeStart = rowIndex;\n      rangeEnd = this.anchorRowIndex;\n    } else if (this.anchorRowIndex < rowIndex) {\n      rangeStart = this.anchorRowIndex;\n      rangeEnd = rowIndex;\n    } else {\n      rangeStart = rowIndex;\n      rangeEnd = rowIndex;\n    }\n\n    if (this.lazy && this.paginator) {\n      rangeStart -= this.first;\n      rangeEnd -= this.first;\n    }\n\n    let rangeRowsData = [];\n\n    for (let i = rangeStart; i <= rangeEnd; i++) {\n      let rangeRowData = this.filteredValue ? this.filteredValue[i] : this.value[i];\n\n      if (!this.isSelected(rangeRowData)) {\n        rangeRowsData.push(rangeRowData);\n        this._selection = [...this.selection, rangeRowData];\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n\n        if (dataKeyValue) {\n          this.selectionKeys[dataKeyValue] = 1;\n        }\n      }\n    }\n\n    this.selectionChange.emit(this.selection);\n    this.onRowSelect.emit({\n      originalEvent: event,\n      data: rangeRowsData,\n      type: 'row'\n    });\n  }\n\n  clearSelectionRange(event) {\n    let rangeStart, rangeEnd;\n\n    if (this.rangeRowIndex > this.anchorRowIndex) {\n      rangeStart = this.anchorRowIndex;\n      rangeEnd = this.rangeRowIndex;\n    } else if (this.rangeRowIndex < this.anchorRowIndex) {\n      rangeStart = this.rangeRowIndex;\n      rangeEnd = this.anchorRowIndex;\n    } else {\n      rangeStart = this.rangeRowIndex;\n      rangeEnd = this.rangeRowIndex;\n    }\n\n    for (let i = rangeStart; i <= rangeEnd; i++) {\n      let rangeRowData = this.value[i];\n      let selectionIndex = this.findIndexInSelection(rangeRowData);\n      this._selection = this.selection.filter((val, i) => i != selectionIndex);\n      let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n\n      if (dataKeyValue) {\n        delete this.selectionKeys[dataKeyValue];\n      }\n\n      this.onRowUnselect.emit({\n        originalEvent: event,\n        data: rangeRowData,\n        type: 'row'\n      });\n    }\n  }\n\n  isSelected(rowData) {\n    if (rowData && this.selection) {\n      if (this.dataKey) {\n        return this.selectionKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined;\n      } else {\n        if (this.selection instanceof Array) return this.findIndexInSelection(rowData) > -1;else return this.equals(rowData, this.selection);\n      }\n    }\n\n    return false;\n  }\n\n  findIndexInSelection(rowData) {\n    let index = -1;\n\n    if (this.selection && this.selection.length) {\n      for (let i = 0; i < this.selection.length; i++) {\n        if (this.equals(rowData, this.selection[i])) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    return index;\n  }\n\n  toggleRowWithRadio(event, rowData) {\n    this.preventSelectionSetterPropagation = true;\n\n    if (this.selection != rowData) {\n      this._selection = rowData;\n      this.selectionChange.emit(this.selection);\n      this.onRowSelect.emit({\n        originalEvent: event.originalEvent,\n        index: event.rowIndex,\n        data: rowData,\n        type: 'radiobutton'\n      });\n\n      if (this.dataKey) {\n        this.selectionKeys = {};\n        this.selectionKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] = 1;\n      }\n    } else {\n      this._selection = null;\n      this.selectionChange.emit(this.selection);\n      this.onRowUnselect.emit({\n        originalEvent: event.originalEvent,\n        index: event.rowIndex,\n        data: rowData,\n        type: 'radiobutton'\n      });\n    }\n\n    this.tableService.onSelectionChange();\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n  }\n\n  toggleRowWithCheckbox(event, rowData) {\n    this.selection = this.selection || [];\n    let selected = this.isSelected(rowData);\n    let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n    this.preventSelectionSetterPropagation = true;\n\n    if (selected) {\n      let selectionIndex = this.findIndexInSelection(rowData);\n      this._selection = this.selection.filter((val, i) => i != selectionIndex);\n      this.selectionChange.emit(this.selection);\n      this.onRowUnselect.emit({\n        originalEvent: event.originalEvent,\n        index: event.rowIndex,\n        data: rowData,\n        type: 'checkbox'\n      });\n\n      if (dataKeyValue) {\n        delete this.selectionKeys[dataKeyValue];\n      }\n    } else {\n      this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n      this.selectionChange.emit(this.selection);\n      this.onRowSelect.emit({\n        originalEvent: event.originalEvent,\n        index: event.rowIndex,\n        data: rowData,\n        type: 'checkbox'\n      });\n\n      if (dataKeyValue) {\n        this.selectionKeys[dataKeyValue] = 1;\n      }\n    }\n\n    this.tableService.onSelectionChange();\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n  }\n\n  toggleRowsWithCheckbox(event, check) {\n    this._selection = check ? this.filteredValue ? this.filteredValue.slice() : this.value.slice() : [];\n    this.preventSelectionSetterPropagation = true;\n    this.updateSelectionKeys();\n    this.selectionChange.emit(this._selection);\n    this.tableService.onSelectionChange();\n    this.onHeaderCheckboxToggle.emit({\n      originalEvent: event,\n      checked: check\n    });\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n  }\n\n  equals(data1, data2) {\n    return this.compareSelectionBy === 'equals' ? data1 === data2 : ObjectUtils.equals(data1, data2, this.dataKey);\n  }\n  /* Legacy Filtering for custom elements */\n\n\n  filter(value, field, matchMode) {\n    if (this.filterTimeout) {\n      clearTimeout(this.filterTimeout);\n    }\n\n    if (!this.isFilterBlank(value)) {\n      this.filters[field] = {\n        value: value,\n        matchMode: matchMode\n      };\n    } else if (this.filters[field]) {\n      delete this.filters[field];\n    }\n\n    this.filterTimeout = setTimeout(() => {\n      this._filter();\n\n      this.filterTimeout = null;\n    }, this.filterDelay);\n    this.anchorRowIndex = null;\n  }\n\n  filterGlobal(value, matchMode) {\n    this.filter(value, 'global', matchMode);\n  }\n\n  isFilterBlank(filter) {\n    if (filter !== null && filter !== undefined) {\n      if (typeof filter === 'string' && filter.trim().length == 0 || filter instanceof Array && filter.length == 0) return true;else return false;\n    }\n\n    return true;\n  }\n\n  _filter() {\n    if (!this.restoringFilter) {\n      this.first = 0;\n      this.firstChange.emit(this.first);\n    }\n\n    if (this.lazy) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    } else {\n      if (!this.value) {\n        return;\n      }\n\n      if (!this.hasFilter()) {\n        this.filteredValue = null;\n\n        if (this.paginator) {\n          this.totalRecords = this.value ? this.value.length : 0;\n        }\n      } else {\n        let globalFilterFieldsArray;\n\n        if (this.filters['global']) {\n          if (!this.columns && !this.globalFilterFields) throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');else globalFilterFieldsArray = this.globalFilterFields || this.columns;\n        }\n\n        this.filteredValue = [];\n\n        for (let i = 0; i < this.value.length; i++) {\n          let localMatch = true;\n          let globalMatch = false;\n          let localFiltered = false;\n\n          for (let prop in this.filters) {\n            if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n              localFiltered = true;\n              let filterField = prop;\n              let filterMeta = this.filters[filterField];\n\n              if (Array.isArray(filterMeta)) {\n                for (let meta of filterMeta) {\n                  localMatch = this.executeLocalFilter(filterField, this.value[i], meta);\n\n                  if (meta.operator === FilterOperator.OR && localMatch || meta.operator === FilterOperator.AND && !localMatch) {\n                    break;\n                  }\n                }\n              } else {\n                localMatch = this.executeLocalFilter(filterField, this.value[i], filterMeta);\n              }\n\n              if (!localMatch) {\n                break;\n              }\n            }\n          }\n\n          if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n            for (let j = 0; j < globalFilterFieldsArray.length; j++) {\n              let globalFilterField = globalFilterFieldsArray[j].field || globalFilterFieldsArray[j];\n              globalMatch = this.filterService.filters[this.filters['global'].matchMode](ObjectUtils.resolveFieldData(this.value[i], globalFilterField), this.filters['global'].value, this.filterLocale);\n\n              if (globalMatch) {\n                break;\n              }\n            }\n          }\n\n          let matches;\n\n          if (this.filters['global']) {\n            matches = localFiltered ? localFiltered && localMatch && globalMatch : globalMatch;\n          } else {\n            matches = localFiltered && localMatch;\n          }\n\n          if (matches) {\n            this.filteredValue.push(this.value[i]);\n          }\n        }\n\n        if (this.filteredValue.length === this.value.length) {\n          this.filteredValue = null;\n        }\n\n        if (this.paginator) {\n          this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;\n        }\n      }\n    }\n\n    this.onFilter.emit({\n      filters: this.filters,\n      filteredValue: this.filteredValue || this.value\n    });\n    this.tableService.onValueChange(this.value);\n\n    if (this.isStateful() && !this.restoringFilter) {\n      this.saveState();\n    }\n\n    if (this.restoringFilter) {\n      this.restoringFilter = false;\n    }\n\n    this.cd.markForCheck();\n\n    if (this.scrollable) {\n      this.resetScrollTop();\n    }\n  }\n\n  executeLocalFilter(field, rowData, filterMeta) {\n    let filterValue = filterMeta.value;\n    let filterMatchMode = filterMeta.matchMode || FilterMatchMode.STARTS_WITH;\n    let dataFieldValue = ObjectUtils.resolveFieldData(rowData, field);\n    let filterConstraint = this.filterService.filters[filterMatchMode];\n    return filterConstraint(dataFieldValue, filterValue, this.filterLocale);\n  }\n\n  hasFilter() {\n    let empty = true;\n\n    for (let prop in this.filters) {\n      if (this.filters.hasOwnProperty(prop)) {\n        empty = false;\n        break;\n      }\n    }\n\n    return !empty;\n  }\n\n  createLazyLoadMetadata() {\n    return {\n      first: this.first,\n      rows: this.rows,\n      sortField: this.sortField,\n      sortOrder: this.sortOrder,\n      filters: this.filters,\n      globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n      multiSortMeta: this.multiSortMeta\n    };\n  }\n\n  clear() {\n    this._sortField = null;\n    this._sortOrder = this.defaultSortOrder;\n    this._multiSortMeta = null;\n    this.tableService.onSort(null);\n    this.filteredValue = null;\n    this.tableService.onResetChange();\n    this.first = 0;\n    this.firstChange.emit(this.first);\n\n    if (this.lazy) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    } else {\n      this.totalRecords = this._value ? this._value.length : 0;\n    }\n  }\n\n  reset() {\n    this.clear();\n  }\n\n  exportCSV(options) {\n    let data;\n    let csv = '';\n    let columns = this.frozenColumns ? [...this.frozenColumns, ...this.columns] : this.columns;\n\n    if (options && options.selectionOnly) {\n      data = this.selection || [];\n    } else {\n      data = this.filteredValue || this.value;\n\n      if (this.frozenValue) {\n        data = data ? [...this.frozenValue, ...data] : this.frozenValue;\n      }\n    } //headers\n\n\n    for (let i = 0; i < columns.length; i++) {\n      let column = columns[i];\n\n      if (column.exportable !== false && column.field) {\n        csv += '\"' + (column.header || column.field) + '\"';\n\n        if (i < columns.length - 1) {\n          csv += this.csvSeparator;\n        }\n      }\n    } //body\n\n\n    data.forEach((record, i) => {\n      csv += '\\n';\n\n      for (let i = 0; i < columns.length; i++) {\n        let column = columns[i];\n\n        if (column.exportable !== false && column.field) {\n          let cellData = ObjectUtils.resolveFieldData(record, column.field);\n\n          if (cellData != null) {\n            if (this.exportFunction) {\n              cellData = this.exportFunction({\n                data: cellData,\n                field: column.field\n              });\n            } else cellData = String(cellData).replace(/\"/g, '\"\"');\n          } else cellData = '';\n\n          csv += '\"' + cellData + '\"';\n\n          if (i < columns.length - 1) {\n            csv += this.csvSeparator;\n          }\n        }\n      }\n    });\n    let blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8;'\n    });\n\n    if (window.navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(blob, this.exportFilename + '.csv');\n    } else {\n      let link = document.createElement(\"a\");\n      link.style.display = 'none';\n      document.body.appendChild(link);\n\n      if (link.download !== undefined) {\n        link.setAttribute('href', URL.createObjectURL(blob));\n        link.setAttribute('download', this.exportFilename + '.csv');\n        link.click();\n      } else {\n        csv = 'data:text/csv;charset=utf-8,' + csv;\n        window.open(encodeURI(csv));\n      }\n\n      document.body.removeChild(link);\n    }\n  }\n\n  resetScrollTop() {\n    if (this.virtualScroll) this.scrollToVirtualIndex(0);else this.scrollTo({\n      top: 0\n    });\n  }\n\n  scrollToVirtualIndex(index) {\n    if (this.virtualScrollBody) {\n      this.virtualScrollBody.scrollToIndex(index);\n    }\n  }\n\n  onScrollIndexChange(index) {\n    if (this.lazy) {\n      if (this.virtualScrollTimeout) {\n        clearTimeout(this.virtualScrollTimeout);\n      }\n\n      this.virtualScrollTimeout = setTimeout(() => {\n        let page = Math.floor(index / this.rows);\n        let virtualScrollOffset = page === 0 ? 0 : (page - 1) * this.rows;\n        let virtualScrollChunkSize = page === 0 ? this.rows * 2 : this.rows * 3;\n\n        if (page !== this.virtualPage) {\n          this.virtualPage = page;\n          this.onLazyLoad.emit({\n            first: virtualScrollOffset,\n            rows: virtualScrollChunkSize,\n            sortField: this.sortField,\n            sortOrder: this.sortOrder,\n            filters: this.filters,\n            globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n            multiSortMeta: this.multiSortMeta\n          });\n        }\n      }, this.virtualScrollDelay);\n    }\n  }\n\n  scrollTo(options) {\n    if (this.virtualScrollBody) {\n      this.virtualScrollBody.scrollTo(options);\n    } else {\n      if (this.wrapperViewChild.nativeElement.scrollTo) {\n        this.wrapperViewChild.nativeElement.scrollTo(options);\n      } else {\n        this.wrapperViewChild.nativeElement.scrollLeft = options.left;\n        this.wrapperViewChild.nativeElement.scrollTop = options.top;\n      }\n    }\n  }\n\n  updateEditingCell(cell, data, field, index) {\n    this.editingCell = cell;\n    this.editingCellData = data;\n    this.editingCellField = field;\n    this.editingCellRowIndex = index;\n    this.bindDocumentEditListener();\n  }\n\n  isEditingCellValid() {\n    return this.editingCell && DomHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0;\n  }\n\n  bindDocumentEditListener() {\n    if (!this.documentEditListener) {\n      this.documentEditListener = event => {\n        if (this.editingCell && !this.selfClick && this.isEditingCellValid()) {\n          DomHandler.removeClass(this.editingCell, 'p-cell-editing');\n          this.editingCell = null;\n          this.onEditComplete.emit({\n            field: this.editingCellField,\n            data: this.editingCellData,\n            originalEvent: event,\n            index: this.editingCellRowIndex\n          });\n          this.editingCellField = null;\n          this.editingCellData = null;\n          this.editingCellRowIndex = null;\n          this.unbindDocumentEditListener();\n          this.cd.markForCheck();\n\n          if (this.overlaySubscription) {\n            this.overlaySubscription.unsubscribe();\n          }\n        }\n\n        this.selfClick = false;\n      };\n\n      document.addEventListener('click', this.documentEditListener);\n    }\n  }\n\n  unbindDocumentEditListener() {\n    if (this.documentEditListener) {\n      document.removeEventListener('click', this.documentEditListener);\n      this.documentEditListener = null;\n    }\n  }\n\n  initRowEdit(rowData) {\n    let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n    this.editingRowKeys[dataKeyValue] = true;\n  }\n\n  saveRowEdit(rowData, rowElement) {\n    if (DomHandler.find(rowElement, '.ng-invalid.ng-dirty').length === 0) {\n      let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n      delete this.editingRowKeys[dataKeyValue];\n    }\n  }\n\n  cancelRowEdit(rowData) {\n    let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n    delete this.editingRowKeys[dataKeyValue];\n  }\n\n  toggleRow(rowData, event) {\n    if (!this.dataKey) {\n      throw new Error('dataKey must be defined to use row expansion');\n    }\n\n    let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n\n    if (this.expandedRowKeys[dataKeyValue] != null) {\n      delete this.expandedRowKeys[dataKeyValue];\n      this.onRowCollapse.emit({\n        originalEvent: event,\n        data: rowData\n      });\n    } else {\n      if (this.rowExpandMode === 'single') {\n        this.expandedRowKeys = {};\n      }\n\n      this.expandedRowKeys[dataKeyValue] = true;\n      this.onRowExpand.emit({\n        originalEvent: event,\n        data: rowData\n      });\n    }\n\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n  }\n\n  isRowExpanded(rowData) {\n    return this.expandedRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n  }\n\n  isRowEditing(rowData) {\n    return this.editingRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n  }\n\n  isSingleSelectionMode() {\n    return this.selectionMode === 'single';\n  }\n\n  isMultipleSelectionMode() {\n    return this.selectionMode === 'multiple';\n  }\n\n  onColumnResizeBegin(event) {\n    let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n    this.resizeColumnElement = event.target.parentElement;\n    this.columnResizing = true;\n    this.lastResizerHelperX = event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft;\n    this.onColumnResize(event);\n    event.preventDefault();\n  }\n\n  onColumnResize(event) {\n    let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n    DomHandler.addClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n    this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';\n    this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n    this.resizeHelperViewChild.nativeElement.style.left = event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft + 'px';\n    this.resizeHelperViewChild.nativeElement.style.display = 'block';\n  }\n\n  onColumnResizeEnd() {\n    let delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n    let columnWidth = this.resizeColumnElement.offsetWidth;\n    let newColumnWidth = columnWidth + delta;\n    let minWidth = this.resizeColumnElement.style.minWidth || 15;\n\n    if (newColumnWidth >= minWidth) {\n      if (this.columnResizeMode === 'fit') {\n        let nextColumn = this.resizeColumnElement.nextElementSibling;\n        let nextColumnWidth = nextColumn.offsetWidth - delta;\n\n        if (newColumnWidth > 15 && nextColumnWidth > 15) {\n          if (!this.scrollable) {\n            this.resizeColumnElement.style.width = newColumnWidth + 'px';\n\n            if (nextColumn) {\n              nextColumn.style.width = nextColumnWidth + 'px';\n            }\n          } else {\n            this.resizeTableCells(newColumnWidth, nextColumnWidth);\n          }\n        }\n      } else if (this.columnResizeMode === 'expand') {\n        let tableWidth = this.tableViewChild.nativeElement.offsetWidth + delta;\n\n        if (!this.scrollable) {\n          this.tableViewChild.nativeElement.style.width = tableWidth + 'px';\n          this.resizeColumnElement.style.width = newColumnWidth + 'px';\n        } else {\n          this.resizeTableCells(newColumnWidth, null);\n          let scrollbarWidth = DomHandler.calculateScrollbarWidth(this.wrapperViewChild.nativeElement);\n          let isWrapperInViewport = this.containerViewChild.nativeElement.offsetWidth > tableWidth + scrollbarWidth;\n          this.tableViewChild.nativeElement.style.width = tableWidth + 'px';\n          this.wrapperViewChild.nativeElement.style.width = isWrapperInViewport ? tableWidth + scrollbarWidth + 'px' : 'auto';\n        }\n      }\n\n      this.onColResize.emit({\n        element: this.resizeColumnElement,\n        delta: delta\n      });\n\n      if (this.isStateful()) {\n        this.saveState();\n      }\n    }\n\n    this.resizeHelperViewChild.nativeElement.style.display = 'none';\n    DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n  }\n\n  resizeTableCells(newColumnWidth, nextColumnWidth) {\n    let colIndex = DomHandler.index(this.resizeColumnElement);\n    let widths = [];\n    let headers = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-thead > tr > th');\n    headers.forEach(header => widths.push(DomHandler.getOuterWidth(header)));\n    this.destroyStyleElement();\n    this.createStyleElement();\n    let innerHTML = '';\n    widths.forEach((width, index) => {\n      let colWidth = index === colIndex ? newColumnWidth : nextColumnWidth && index === colIndex + 1 ? nextColumnWidth : width;\n      innerHTML += `\n                #${this.id} .p-datatable-thead > tr > th:nth-child(${index + 1}) {\n                    flex: 0 0 ${colWidth}px;\n                }\n\n                #${this.id} .p-datatable-tbody > tr > td:nth-child(${index + 1}) {\n                    flex: 0 0 ${colWidth}px;\n                }\n            `;\n    });\n    this.styleElement.innerHTML = innerHTML;\n  }\n\n  onColumnDragStart(event, columnElement) {\n    this.reorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);\n    this.reorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);\n    this.draggedColumn = columnElement;\n    event.dataTransfer.setData('text', 'b'); // For firefox\n  }\n\n  onColumnDragEnter(event, dropHeader) {\n    if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n      event.preventDefault();\n      let containerOffset = DomHandler.getOffset(this.containerViewChild.nativeElement);\n      let dropHeaderOffset = DomHandler.getOffset(dropHeader);\n\n      if (this.draggedColumn != dropHeader) {\n        let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n        let dropIndex = DomHandler.indexWithinGroup(dropHeader, 'preorderablecolumn');\n        let targetLeft = dropHeaderOffset.left - containerOffset.left;\n        let targetTop = containerOffset.top - dropHeaderOffset.top;\n        let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n        this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n        this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n\n        if (event.pageX > columnCenter) {\n          this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.dropPosition = 1;\n        } else {\n          this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.dropPosition = -1;\n        }\n\n        if (dropIndex - dragIndex === 1 && this.dropPosition === -1 || dropIndex - dragIndex === -1 && this.dropPosition === 1) {\n          this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n          this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n        } else {\n          this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n          this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n        }\n      } else {\n        event.dataTransfer.dropEffect = 'none';\n      }\n    }\n  }\n\n  onColumnDragLeave(event) {\n    if (this.reorderableColumns && this.draggedColumn) {\n      event.preventDefault();\n      this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n      this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n    }\n  }\n\n  onColumnDrop(event, dropColumn) {\n    event.preventDefault();\n\n    if (this.draggedColumn) {\n      let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n      let dropIndex = DomHandler.indexWithinGroup(dropColumn, 'preorderablecolumn');\n      let allowDrop = dragIndex != dropIndex;\n\n      if (allowDrop && (dropIndex - dragIndex == 1 && this.dropPosition === -1 || dragIndex - dropIndex == 1 && this.dropPosition === 1)) {\n        allowDrop = false;\n      }\n\n      if (allowDrop && dropIndex < dragIndex && this.dropPosition === 1) {\n        dropIndex = dropIndex + 1;\n      }\n\n      if (allowDrop && dropIndex > dragIndex && this.dropPosition === -1) {\n        dropIndex = dropIndex - 1;\n      }\n\n      if (allowDrop) {\n        ObjectUtils.reorderArray(this.columns, dragIndex, dropIndex);\n        this.onColReorder.emit({\n          dragIndex: dragIndex,\n          dropIndex: dropIndex,\n          columns: this.columns\n        });\n\n        if (this.isStateful()) {\n          this.zone.runOutsideAngular(() => {\n            setTimeout(() => {\n              this.saveState();\n            });\n          });\n        }\n      }\n\n      this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n      this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n      this.draggedColumn.draggable = false;\n      this.draggedColumn = null;\n      this.dropPosition = null;\n    }\n  }\n\n  onRowDragStart(event, index) {\n    this.rowDragging = true;\n    this.draggedRowIndex = index;\n    event.dataTransfer.setData('text', 'b'); // For firefox\n  }\n\n  onRowDragOver(event, index, rowElement) {\n    if (this.rowDragging && this.draggedRowIndex !== index) {\n      let rowY = DomHandler.getOffset(rowElement).top + DomHandler.getWindowScrollTop();\n      let pageY = event.pageY;\n      let rowMidY = rowY + DomHandler.getOuterHeight(rowElement) / 2;\n      let prevRowElement = rowElement.previousElementSibling;\n\n      if (pageY < rowMidY) {\n        DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n        this.droppedRowIndex = index;\n        if (prevRowElement) DomHandler.addClass(prevRowElement, 'p-datatable-dragpoint-bottom');else DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n      } else {\n        if (prevRowElement) DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');else DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n        this.droppedRowIndex = index + 1;\n        DomHandler.addClass(rowElement, 'p-datatable-dragpoint-bottom');\n      }\n    }\n  }\n\n  onRowDragLeave(event, rowElement) {\n    let prevRowElement = rowElement.previousElementSibling;\n\n    if (prevRowElement) {\n      DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n    }\n\n    DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n    DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-top');\n  }\n\n  onRowDragEnd(event) {\n    this.rowDragging = false;\n    this.draggedRowIndex = null;\n    this.droppedRowIndex = null;\n  }\n\n  onRowDrop(event, rowElement) {\n    if (this.droppedRowIndex != null) {\n      let dropIndex = this.draggedRowIndex > this.droppedRowIndex ? this.droppedRowIndex : this.droppedRowIndex === 0 ? 0 : this.droppedRowIndex - 1;\n      ObjectUtils.reorderArray(this.value, this.draggedRowIndex, dropIndex);\n      this.onRowReorder.emit({\n        dragIndex: this.draggedRowIndex,\n        dropIndex: dropIndex\n      });\n    } //cleanup\n\n\n    this.onRowDragLeave(event, rowElement);\n    this.onRowDragEnd(event);\n  }\n\n  isEmpty() {\n    let data = this.filteredValue || this.value;\n    return data == null || data.length == 0;\n  }\n\n  getBlockableElement() {\n    return this.el.nativeElement.children[0];\n  }\n\n  getStorage() {\n    switch (this.stateStorage) {\n      case 'local':\n        return window.localStorage;\n\n      case 'session':\n        return window.sessionStorage;\n\n      default:\n        throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n    }\n  }\n\n  isStateful() {\n    return this.stateKey != null;\n  }\n\n  saveState() {\n    const storage = this.getStorage();\n    let state = {};\n\n    if (this.paginator) {\n      state.first = this.first;\n      state.rows = this.rows;\n    }\n\n    if (this.sortField) {\n      state.sortField = this.sortField;\n      state.sortOrder = this.sortOrder;\n    }\n\n    if (this.multiSortMeta) {\n      state.multiSortMeta = this.multiSortMeta;\n    }\n\n    if (this.hasFilter()) {\n      state.filters = this.filters;\n    }\n\n    if (this.resizableColumns) {\n      this.saveColumnWidths(state);\n    }\n\n    if (this.reorderableColumns) {\n      this.saveColumnOrder(state);\n    }\n\n    if (this.selection) {\n      state.selection = this.selection;\n    }\n\n    if (Object.keys(this.expandedRowKeys).length) {\n      state.expandedRowKeys = this.expandedRowKeys;\n    }\n\n    storage.setItem(this.stateKey, JSON.stringify(state));\n    this.onStateSave.emit(state);\n  }\n\n  clearState() {\n    const storage = this.getStorage();\n\n    if (this.stateKey) {\n      storage.removeItem(this.stateKey);\n    }\n  }\n\n  restoreState() {\n    const storage = this.getStorage();\n    const stateString = storage.getItem(this.stateKey);\n    const dateFormat = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/;\n\n    const reviver = function (key, value) {\n      if (typeof value === \"string\" && dateFormat.test(value)) {\n        return new Date(value);\n      }\n\n      return value;\n    };\n\n    if (stateString) {\n      let state = JSON.parse(stateString, reviver);\n\n      if (this.paginator) {\n        if (this.first !== undefined) {\n          this.first = state.first;\n          this.firstChange.emit(this.first);\n        }\n\n        if (this.rows !== undefined) {\n          this.rows = state.rows;\n          this.rowsChange.emit(this.rows);\n        }\n      }\n\n      if (state.sortField) {\n        this.restoringSort = true;\n        this._sortField = state.sortField;\n        this._sortOrder = state.sortOrder;\n      }\n\n      if (state.multiSortMeta) {\n        this.restoringSort = true;\n        this._multiSortMeta = state.multiSortMeta;\n      }\n\n      if (state.filters) {\n        this.restoringFilter = true;\n        this.filters = state.filters;\n      }\n\n      if (this.resizableColumns) {\n        this.columnWidthsState = state.columnWidths;\n        this.tableWidthState = state.tableWidth;\n        this.wrapperWidthState = state.wrapperWidth;\n      }\n\n      if (state.expandedRowKeys) {\n        this.expandedRowKeys = state.expandedRowKeys;\n      }\n\n      if (state.selection) {\n        Promise.resolve(null).then(() => this.selectionChange.emit(state.selection));\n      }\n\n      this.stateRestored = true;\n      this.onStateRestore.emit(state);\n    }\n  }\n\n  saveColumnWidths(state) {\n    let widths = [];\n    let headers = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-thead > tr > th');\n    headers.forEach(header => widths.push(DomHandler.getOuterWidth(header)));\n    state.columnWidths = widths.join(',');\n\n    if (this.columnResizeMode === 'expand') {\n      state.tableWidth = DomHandler.getOuterWidth(this.tableViewChild.nativeElement) + 'px';\n      state.wrapperWidth = this.wrapperViewChild.nativeElement.style.width;\n    }\n  }\n\n  restoreColumnWidths() {\n    if (this.columnWidthsState) {\n      let widths = this.columnWidthsState.split(',');\n\n      if (this.columnResizeMode === 'expand') {\n        if (this.tableWidthState) this.tableViewChild.nativeElement.style.width = this.tableWidthState;\n        if (this.wrapperWidthState) this.wrapperViewChild.nativeElement.style.width = this.wrapperWidthState;\n      }\n\n      this.createStyleElement();\n\n      if (this.scrollable && widths && widths.length > 0) {\n        let innerHTML = '';\n        widths.forEach((width, index) => {\n          innerHTML += `\n                            #${this.id} .p-datatable-thead > tr > th:nth-child(${index + 1}) {\n                                flex: 0 0 ${width}px;\n                            }\n\n                            #${this.id} .p-datatable-tbody > tr > td:nth-child(${index + 1}) {\n                                flex: 0 0 ${width}px;\n                            }\n                        `;\n        });\n        this.styleElement.innerHTML = innerHTML;\n      } else {\n        DomHandler.find(this.tableViewChild.nativeElement, '.p-datatable-thead > tr > th').forEach((header, index) => {\n          header.style.width = widths[index] + 'px';\n        });\n      }\n    }\n  }\n\n  saveColumnOrder(state) {\n    if (this.columns) {\n      let columnOrder = [];\n      this.columns.map(column => {\n        columnOrder.push(column.field || column.key);\n      });\n      state.columnOrder = columnOrder;\n    }\n  }\n\n  restoreColumnOrder() {\n    const storage = this.getStorage();\n    const stateString = storage.getItem(this.stateKey);\n\n    if (stateString) {\n      let state = JSON.parse(stateString);\n      let columnOrder = state.columnOrder;\n\n      if (columnOrder) {\n        let reorderedColumns = [];\n        columnOrder.map(key => {\n          let col = this.findColumnByKey(key);\n\n          if (col) {\n            reorderedColumns.push(col);\n          }\n        });\n        this.columnOrderStateRestored = true;\n        this.columns = reorderedColumns;\n      }\n    }\n  }\n\n  updateScrollWidth() {\n    if (this.tableViewChild && this.tableViewChild.nativeElement) {\n      let parentElementHeight = DomHandler.getWidth(this.tableViewChild.nativeElement.parentElement);\n\n      if (this.tableViewChild.nativeElement.scrollWidth > parentElementHeight) {\n        this.tableViewChild.nativeElement.style.width = this.tableViewChild.nativeElement.scrollWidth + 'px';\n      } else {\n        this.tableViewChild.nativeElement.style.width = parentElementHeight - DomHandler.calculateScrollbarHeight() + 'px';\n      }\n    }\n  }\n\n  findColumnByKey(key) {\n    if (this.columns) {\n      for (let col of this.columns) {\n        if (col.key === key || col.field === key) return col;else continue;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  createStyleElement() {\n    this.styleElement = document.createElement('style');\n    this.styleElement.type = 'text/css';\n    document.head.appendChild(this.styleElement);\n  }\n\n  createResponsiveStyle() {\n    if (!this.responsiveStyleElement) {\n      this.responsiveStyleElement = document.createElement('style');\n      this.responsiveStyleElement.type = 'text/css';\n      document.head.appendChild(this.responsiveStyleElement);\n      let innerHTML = `\n@media screen and (max-width: ${this.breakpoint}) {\n    #${this.id} .p-datatable-thead > tr > th,\n    #${this.id} .p-datatable-tfoot > tr > td {\n        display: none !important;\n    }\n\n    #${this.id} .p-datatable-tbody > tr > td {\n        display: flex;\n        width: 100% !important;\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    #${this.id} .p-datatable-tbody > tr > td:not(:last-child) {\n        border: 0 none;\n    }\n\n    #${this.id}.p-datatable-gridlines .p-datatable-tbody > tr > td:last-child {\n        border-top: 0;\n        border-right: 0;\n        border-left: 0;\n    }\n\n    #${this.id} .p-datatable-tbody > tr > td > .p-column-title {\n        display: block;\n    }\n}\n`;\n      this.responsiveStyleElement.innerHTML = innerHTML;\n    }\n  }\n\n  destroyResponsiveStyle() {\n    if (this.responsiveStyleElement) {\n      document.head.removeChild(this.responsiveStyleElement);\n      this.responsiveStyleElement = null;\n    }\n  }\n\n  destroyStyleElement() {\n    if (this.styleElement) {\n      document.head.removeChild(this.styleElement);\n      this.styleElement = null;\n    }\n  }\n\n  ngOnDestroy() {\n    this.unbindDocumentEditListener();\n    this.editingCell = null;\n    this.initialized = null;\n\n    if (this.virtualScrollSubscription) {\n      this.virtualScrollSubscription.unsubscribe();\n    }\n\n    this.destroyStyleElement();\n    this.destroyResponsiveStyle();\n  }\n\n}\n\nTable.ɵfac = function Table_Factory(t) {\n  return new (t || Table)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.FilterService), i0.ɵɵdirectiveInject(i1.OverlayService));\n};\n\nTable.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Table,\n  selectors: [[\"p-table\"]],\n  contentQueries: function Table_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Table_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(_c5, 5);\n      i0.ɵɵviewQuery(_c6, 5);\n      i0.ɵɵviewQuery(CdkVirtualScrollViewport, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resizeHelperViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.reorderIndicatorUpViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.reorderIndicatorDownViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wrapperViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tableViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tableHeaderViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.virtualScrollBody = _t.first);\n    }\n  },\n  inputs: {\n    frozenColumns: \"frozenColumns\",\n    frozenValue: \"frozenValue\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    tableStyle: \"tableStyle\",\n    tableStyleClass: \"tableStyleClass\",\n    paginator: \"paginator\",\n    pageLinks: \"pageLinks\",\n    rowsPerPageOptions: \"rowsPerPageOptions\",\n    alwaysShowPaginator: \"alwaysShowPaginator\",\n    paginatorPosition: \"paginatorPosition\",\n    paginatorDropdownAppendTo: \"paginatorDropdownAppendTo\",\n    paginatorDropdownScrollHeight: \"paginatorDropdownScrollHeight\",\n    currentPageReportTemplate: \"currentPageReportTemplate\",\n    showCurrentPageReport: \"showCurrentPageReport\",\n    showJumpToPageDropdown: \"showJumpToPageDropdown\",\n    showFirstLastIcon: \"showFirstLastIcon\",\n    showPageLinks: \"showPageLinks\",\n    defaultSortOrder: \"defaultSortOrder\",\n    sortMode: \"sortMode\",\n    resetPageOnSort: \"resetPageOnSort\",\n    selectionMode: \"selectionMode\",\n    contextMenuSelection: \"contextMenuSelection\",\n    contextMenuSelectionMode: \"contextMenuSelectionMode\",\n    dataKey: \"dataKey\",\n    metaKeySelection: \"metaKeySelection\",\n    rowTrackBy: \"rowTrackBy\",\n    lazy: \"lazy\",\n    lazyLoadOnInit: \"lazyLoadOnInit\",\n    compareSelectionBy: \"compareSelectionBy\",\n    csvSeparator: \"csvSeparator\",\n    exportFilename: \"exportFilename\",\n    filters: \"filters\",\n    globalFilterFields: \"globalFilterFields\",\n    filterDelay: \"filterDelay\",\n    filterLocale: \"filterLocale\",\n    expandedRowKeys: \"expandedRowKeys\",\n    editingRowKeys: \"editingRowKeys\",\n    rowExpandMode: \"rowExpandMode\",\n    scrollable: \"scrollable\",\n    scrollDirection: \"scrollDirection\",\n    rowGroupMode: \"rowGroupMode\",\n    scrollHeight: \"scrollHeight\",\n    virtualScroll: \"virtualScroll\",\n    virtualScrollDelay: \"virtualScrollDelay\",\n    virtualRowHeight: \"virtualRowHeight\",\n    frozenWidth: \"frozenWidth\",\n    responsive: \"responsive\",\n    contextMenu: \"contextMenu\",\n    resizableColumns: \"resizableColumns\",\n    columnResizeMode: \"columnResizeMode\",\n    reorderableColumns: \"reorderableColumns\",\n    loading: \"loading\",\n    loadingIcon: \"loadingIcon\",\n    showLoader: \"showLoader\",\n    rowHover: \"rowHover\",\n    customSort: \"customSort\",\n    showInitialSortBadge: \"showInitialSortBadge\",\n    autoLayout: \"autoLayout\",\n    exportFunction: \"exportFunction\",\n    stateKey: \"stateKey\",\n    stateStorage: \"stateStorage\",\n    editMode: \"editMode\",\n    groupRowsBy: \"groupRowsBy\",\n    minBufferPx: \"minBufferPx\",\n    maxBufferPx: \"maxBufferPx\",\n    responsiveLayout: \"responsiveLayout\",\n    breakpoint: \"breakpoint\",\n    value: \"value\",\n    columns: \"columns\",\n    first: \"first\",\n    rows: \"rows\",\n    totalRecords: \"totalRecords\",\n    sortField: \"sortField\",\n    sortOrder: \"sortOrder\",\n    multiSortMeta: \"multiSortMeta\",\n    selection: \"selection\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\",\n    contextMenuSelectionChange: \"contextMenuSelectionChange\",\n    onRowSelect: \"onRowSelect\",\n    onRowUnselect: \"onRowUnselect\",\n    onPage: \"onPage\",\n    onSort: \"onSort\",\n    onFilter: \"onFilter\",\n    onLazyLoad: \"onLazyLoad\",\n    onRowExpand: \"onRowExpand\",\n    onRowCollapse: \"onRowCollapse\",\n    onContextMenuSelect: \"onContextMenuSelect\",\n    onColResize: \"onColResize\",\n    onColReorder: \"onColReorder\",\n    onRowReorder: \"onRowReorder\",\n    onEditInit: \"onEditInit\",\n    onEditComplete: \"onEditComplete\",\n    onEditCancel: \"onEditCancel\",\n    onHeaderCheckboxToggle: \"onHeaderCheckboxToggle\",\n    sortFunction: \"sortFunction\",\n    firstChange: \"firstChange\",\n    rowsChange: \"rowsChange\",\n    onStateSave: \"onStateSave\",\n    onStateRestore: \"onStateRestore\"\n  },\n  features: [i0.ɵɵProvidersFeature([TableService]), i0.ɵɵNgOnChangesFeature],\n  decls: 14,\n  vars: 33,\n  consts: [[3, \"ngStyle\", \"ngClass\"], [\"container\", \"\"], [\"class\", \"p-datatable-loading-overlay p-component-overlay\", 4, \"ngIf\"], [\"class\", \"p-datatable-header\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-top\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\", 4, \"ngIf\"], [1, \"p-datatable-wrapper\", 3, \"ngStyle\"], [\"wrapper\", \"\"], [\"role\", \"table\", \"class\", \"p-datatable-table\", 3, \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [\"tabindex\", \"0\", \"class\", \"p-datatable-virtual-scrollable-body\", 3, \"itemSize\", \"height\", \"minBufferPx\", \"maxBufferPx\", \"scrolledIndexChange\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\", 4, \"ngIf\"], [\"class\", \"p-datatable-footer\", 4, \"ngIf\"], [\"class\", \"p-column-resizer-helper\", \"style\", \"display:none\", 4, \"ngIf\"], [\"class\", \"pi pi-arrow-down p-datatable-reorder-indicator-up\", \"style\", \"display:none\", 4, \"ngIf\"], [\"class\", \"pi pi-arrow-up p-datatable-reorder-indicator-down\", \"style\", \"display:none\", 4, \"ngIf\"], [1, \"p-datatable-loading-overlay\", \"p-component-overlay\"], [1, \"p-datatable-header\"], [4, \"ngTemplateOutlet\"], [\"styleClass\", \"p-paginator-top\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\"], [\"role\", \"table\", 1, \"p-datatable-table\", 3, \"ngClass\", \"ngStyle\"], [\"table\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-datatable-thead\"], [\"class\", \"p-datatable-tbody p-datatable-frozen-tbody\", 3, \"value\", \"frozenRows\", \"pTableBody\", \"pTableBodyTemplate\", \"frozen\", 4, \"ngIf\"], [1, \"p-datatable-tbody\", 3, \"value\", \"pTableBody\", \"pTableBodyTemplate\"], [\"class\", \"p-datatable-tfoot\", 4, \"ngIf\"], [1, \"p-datatable-tbody\", \"p-datatable-frozen-tbody\", 3, \"value\", \"frozenRows\", \"pTableBody\", \"pTableBodyTemplate\", \"frozen\"], [1, \"p-datatable-tfoot\"], [\"tabindex\", \"0\", 1, \"p-datatable-virtual-scrollable-body\", 3, \"itemSize\", \"minBufferPx\", \"maxBufferPx\", \"scrolledIndexChange\"], [\"tableHeader\", \"\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\"], [1, \"p-datatable-footer\"], [1, \"p-column-resizer-helper\", 2, \"display\", \"none\"], [\"resizeHelper\", \"\"], [1, \"pi\", \"pi-arrow-down\", \"p-datatable-reorder-indicator-up\", 2, \"display\", \"none\"], [\"reorderIndicatorUp\", \"\"], [1, \"pi\", \"pi-arrow-up\", \"p-datatable-reorder-indicator-down\", 2, \"display\", \"none\"], [\"reorderIndicatorDown\", \"\"]],\n  template: function Table_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, Table_div_2_Template, 2, 2, \"div\", 2);\n      i0.ɵɵtemplate(3, Table_div_3_Template, 2, 1, \"div\", 3);\n      i0.ɵɵtemplate(4, Table_p_paginator_4_Template, 1, 16, \"p-paginator\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5, 6);\n      i0.ɵɵtemplate(7, Table_table_7_Template, 8, 15, \"table\", 7);\n      i0.ɵɵtemplate(8, Table_cdk_virtual_scroll_viewport_8_Template, 10, 20, \"cdk-virtual-scroll-viewport\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, Table_p_paginator_9_Template, 1, 16, \"p-paginator\", 9);\n      i0.ɵɵtemplate(10, Table_div_10_Template, 2, 1, \"div\", 10);\n      i0.ɵɵtemplate(11, Table_div_11_Template, 2, 0, \"div\", 11);\n      i0.ɵɵtemplate(12, Table_span_12_Template, 2, 0, \"span\", 12);\n      i0.ɵɵtemplate(13, Table_span_13_Template, 2, 0, \"span\", 13);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", i0.ɵɵpureFunctionV(16, _c8, [ctx.rowHover || ctx.selectionMode, ctx.autoLayout, ctx.resizableColumns, ctx.resizableColumns && ctx.columnResizeMode === \"fit\", ctx.scrollable, ctx.scrollable && ctx.scrollDirection === \"vertical\", ctx.scrollable && ctx.scrollDirection === \"horizontal\", ctx.scrollable && ctx.scrollDirection === \"both\", ctx.scrollable && ctx.scrollHeight === \"flex\", ctx.responsiveLayout === \"stack\", ctx.responsiveLayout === \"scroll\", ctx.responsive, ctx.headerGroupedTemplate != null, ctx.footerGroupedTemplate != null]));\n      i0.ɵɵattribute(\"id\", ctx.id);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading && ctx.showLoader);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.captionTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"top\" || ctx.paginatorPosition == \"both\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(31, _c9, ctx.scrollHeight));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.virtualScroll);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.virtualScroll);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"bottom\" || ctx.paginatorPosition == \"both\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.summaryTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.resizableColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.reorderableColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.reorderableColumns);\n    }\n  },\n  directives: function () {\n    return [i4.NgStyle, i4.NgClass, i4.NgIf, i4.NgTemplateOutlet, i2.Paginator, TableBody, i3.CdkVirtualScrollViewport, i3.CdkFixedSizeVirtualScroll];\n  },\n  styles: [\".p-datatable{position:relative}.p-datatable table{border-collapse:collapse;width:100%;table-layout:fixed}.p-datatable .p-sortable-column{cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none}.p-datatable .p-sortable-column .p-column-title,.p-datatable .p-sortable-column .p-sortable-column-badge,.p-datatable .p-sortable-column .p-sortable-column-icon{vertical-align:middle}.p-datatable .p-sortable-column .p-sortable-column-badge{display:inline-flex;align-items:center;justify-content:center}.p-datatable-auto-layout>.p-datatable-wrapper{overflow-x:auto}.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-responsive-scroll>.p-datatable-wrapper{overflow-x:auto}.p-datatable-auto-layout>.p-datatable-wrapper>table,.p-datatable-responsive-scroll>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-hoverable-rows .p-selectable-row{cursor:pointer}.p-datatable-scrollable .p-datatable-wrapper{position:relative;overflow:auto}.p-datatable-scrollable .p-datatable-table,.p-datatable-scrollable .p-datatable-tbody,.p-datatable-scrollable .p-datatable-tfoot,.p-datatable-scrollable .p-datatable-thead{display:block}.p-datatable-scrollable .p-datatable-tbody>tr,.p-datatable-scrollable .p-datatable-tfoot>tr,.p-datatable-scrollable .p-datatable-thead>tr{display:flex;flex-wrap:nowrap;width:100%}.p-datatable-scrollable .p-datatable-tbody>tr>td,.p-datatable-scrollable .p-datatable-tfoot>tr>td,.p-datatable-scrollable .p-datatable-thead>tr>th{display:flex;flex:1 1 0;align-items:center}.p-datatable-scrollable .p-datatable-thead{position:sticky;top:0;z-index:1}.p-datatable-scrollable .p-datatable-frozen-tbody{position:sticky;z-index:1}.p-datatable-scrollable .p-datatable-tfoot{position:sticky;bottom:0;z-index:1}.p-datatable-scrollable .p-frozen-column{position:sticky;background:inherit}.p-datatable-scrollable th.p-frozen-column{z-index:1}.p-datatable-scrollable-both .p-datatable-tbody>tr>td,.p-datatable-scrollable-both .p-datatable-tfoot>tr>td,.p-datatable-scrollable-both .p-datatable-thead>tr>th,.p-datatable-scrollable-horizontal .p-datatable-tfoot>tr>td,.p-datatable-scrollable-horizontal .p-datatable-thead>tr>th\\n.p-datatable-scrollable-horizontal .p-datatable-tbody>tr>td{flex:0 0 auto}.p-datatable-flex-scrollable .p-datatable-wrapper{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-scrollable .p-rowgroup-header{position:sticky;z-index:1}.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot,.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead{display:table;border-collapse:collapse;width:100%;table-layout:fixed}.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot>tr,.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead>tr{display:table-row}.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot>tr>td,.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead>tr>th{display:table-cell}.p-datatable-flex-scrollable{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-flex-scrollable .p-datatable-virtual-scrollable-body{flex:1}.p-datatable-resizable>.p-datatable-wrapper{overflow-x:auto}.p-datatable-resizable .p-datatable-tbody>tr>td,.p-datatable-resizable .p-datatable-tfoot>tr>td,.p-datatable-resizable .p-datatable-thead>tr>th{overflow:hidden;white-space:nowrap}.p-datatable-resizable .p-resizable-column{background-clip:padding-box;position:relative}.p-datatable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-datatable .p-column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5rem;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.p-datatable .p-column-resizer-helper{width:1px;position:absolute;z-index:10;display:none}.p-datatable .p-row-editor-cancel,.p-datatable .p-row-editor-init,.p-datatable .p-row-editor-save,.p-datatable .p-row-toggler{display:inline-flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-datatable-reorder-indicator-down,.p-datatable-reorder-indicator-up{position:absolute;display:none}.p-datatable-reorderablerow-handle,[pReorderableColumn]{cursor:move}.p-datatable .p-datatable-loading-overlay{position:absolute;display:flex;align-items:center;justify-content:center;z-index:2}.p-column-filter-row{display:flex;align-items:center;width:100%}.p-column-filter-menu{display:inline-flex}.p-column-filter-row p-columnfilterformelement{flex:1 1 auto;width:1%}.p-column-filter-clear-button,.p-column-filter-menu-button{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-column-filter-overlay{position:absolute;top:0;left:0}.p-column-filter-row-items{margin:0;padding:0;list-style:none}.p-column-filter-row-item{cursor:pointer}.p-column-filter-add-button,.p-column-filter-remove-button{justify-content:center}.p-column-filter-add-button .p-button-label,.p-column-filter-remove-button .p-button-label{flex-grow:0}.p-column-filter-buttonbar{display:flex;align-items:center;justify-content:space-between}.p-column-filter-buttonbar .p-button{width:auto}.p-datatable .p-datatable-tbody>tr>td>.p-column-title{display:none}cdk-virtual-scroll-viewport{outline:0 none}\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Table, [{\n    type: Component,\n    args: [{\n      selector: 'p-table',\n      template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\"\n            [ngClass]=\"{'p-datatable p-component': true,\n                'p-datatable-hoverable-rows': (rowHover||selectionMode),\n                'p-datatable-auto-layout': autoLayout,\n                'p-datatable-resizable': resizableColumns,\n                'p-datatable-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\n                'p-datatable-scrollable': scrollable,\n                'p-datatable-scrollable-vertical': scrollable && scrollDirection === 'vertical',\n                'p-datatable-scrollable-horizontal': scrollable && scrollDirection === 'horizontal',\n                'p-datatable-scrollable-both': scrollable && scrollDirection === 'both',\n                'p-datatable-flex-scrollable': (scrollable && scrollHeight === 'flex'),\n                'p-datatable-responsive-stack': responsiveLayout === 'stack',\n                'p-datatable-responsive-scroll': responsiveLayout === 'scroll',\n                'p-datatable-responsive': responsive,\n                'p-datatable-grouped-header': headerGroupedTemplate != null,\n                'p-datatable-grouped-footer': footerGroupedTemplate != null}\" [attr.id]=\"id\">\n            <div class=\"p-datatable-loading-overlay p-component-overlay\" *ngIf=\"loading && showLoader\">\n                <i [class]=\"'p-datatable-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"p-datatable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div #wrapper class=\"p-datatable-wrapper\" [ngStyle]=\"{height: scrollHeight}\">\n                <table #table *ngIf=\"!virtualScroll\" role=\"table\" class=\"p-datatable-table\" [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"p-datatable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerGroupedTemplate||headerTemplate; context: {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-datatable-tbody p-datatable-frozen-tbody\" *ngIf=\"frozenValue||frozenBodyTemplate\" [value]=\"frozenValue\" [frozenRows]=\"true\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozenBodyTemplate\" [frozen]=\"true\"></tbody>\n                    <tbody class=\"p-datatable-tbody\" [value]=\"dataToRender\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                    <tfoot *ngIf=\"footerGroupedTemplate||footerTemplate\" class=\"p-datatable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerGroupedTemplate||footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n                <cdk-virtual-scroll-viewport *ngIf=\"virtualScroll\" [itemSize]=\"virtualRowHeight\" tabindex=\"0\" [style.height]=\"scrollHeight !== 'flex' ? scrollHeight : undefined\" [minBufferPx]=\"minBufferPx\" [maxBufferPx]=\"maxBufferPx\" (scrolledIndexChange)=\"onScrollIndexChange($event)\" class=\"p-datatable-virtual-scrollable-body\">\n                    <table #table role=\"table\" class=\"p-datatable-table\" [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                        <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                        <thead #tableHeader class=\"p-datatable-thead\">\n                            <ng-container *ngTemplateOutlet=\"headerGroupedTemplate||headerTemplate; context: {$implicit: columns}\"></ng-container>\n                        </thead>\n                        <tbody class=\"p-datatable-tbody p-datatable-frozen-tbody\" *ngIf=\"frozenValue||frozenBodyTemplate\" [value]=\"frozenValue\" [frozenRows]=\"true\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\" [frozen]=\"true\"></tbody>\n                        <tbody class=\"p-datatable-tbody\" [value]=\"dataToRender\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                        <tfoot *ngIf=\"footerGroupedTemplate||footerTemplate\" class=\"p-datatable-tfoot\">\n                            <ng-container *ngTemplateOutlet=\"footerGroupedTemplate||footerTemplate; context {$implicit: columns}\"></ng-container>\n                        </tfoot>\n                    </table>\n                </cdk-virtual-scroll-viewport>\n            </div>\n\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div *ngIf=\"summaryTemplate\" class=\"p-datatable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n        </div>\n    `,\n      providers: [TableService],\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      styleUrls: ['./table.css']\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: TableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.FilterService\n    }, {\n      type: i1.OverlayService\n    }];\n  }, {\n    frozenColumns: [{\n      type: Input\n    }],\n    frozenValue: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    tableStyle: [{\n      type: Input\n    }],\n    tableStyleClass: [{\n      type: Input\n    }],\n    paginator: [{\n      type: Input\n    }],\n    pageLinks: [{\n      type: Input\n    }],\n    rowsPerPageOptions: [{\n      type: Input\n    }],\n    alwaysShowPaginator: [{\n      type: Input\n    }],\n    paginatorPosition: [{\n      type: Input\n    }],\n    paginatorDropdownAppendTo: [{\n      type: Input\n    }],\n    paginatorDropdownScrollHeight: [{\n      type: Input\n    }],\n    currentPageReportTemplate: [{\n      type: Input\n    }],\n    showCurrentPageReport: [{\n      type: Input\n    }],\n    showJumpToPageDropdown: [{\n      type: Input\n    }],\n    showFirstLastIcon: [{\n      type: Input\n    }],\n    showPageLinks: [{\n      type: Input\n    }],\n    defaultSortOrder: [{\n      type: Input\n    }],\n    sortMode: [{\n      type: Input\n    }],\n    resetPageOnSort: [{\n      type: Input\n    }],\n    selectionMode: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    contextMenuSelection: [{\n      type: Input\n    }],\n    contextMenuSelectionChange: [{\n      type: Output\n    }],\n    contextMenuSelectionMode: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    metaKeySelection: [{\n      type: Input\n    }],\n    rowTrackBy: [{\n      type: Input\n    }],\n    lazy: [{\n      type: Input\n    }],\n    lazyLoadOnInit: [{\n      type: Input\n    }],\n    compareSelectionBy: [{\n      type: Input\n    }],\n    csvSeparator: [{\n      type: Input\n    }],\n    exportFilename: [{\n      type: Input\n    }],\n    filters: [{\n      type: Input\n    }],\n    globalFilterFields: [{\n      type: Input\n    }],\n    filterDelay: [{\n      type: Input\n    }],\n    filterLocale: [{\n      type: Input\n    }],\n    expandedRowKeys: [{\n      type: Input\n    }],\n    editingRowKeys: [{\n      type: Input\n    }],\n    rowExpandMode: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    scrollDirection: [{\n      type: Input\n    }],\n    rowGroupMode: [{\n      type: Input\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input\n    }],\n    virtualScrollDelay: [{\n      type: Input\n    }],\n    virtualRowHeight: [{\n      type: Input\n    }],\n    frozenWidth: [{\n      type: Input\n    }],\n    responsive: [{\n      type: Input\n    }],\n    contextMenu: [{\n      type: Input\n    }],\n    resizableColumns: [{\n      type: Input\n    }],\n    columnResizeMode: [{\n      type: Input\n    }],\n    reorderableColumns: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    loadingIcon: [{\n      type: Input\n    }],\n    showLoader: [{\n      type: Input\n    }],\n    rowHover: [{\n      type: Input\n    }],\n    customSort: [{\n      type: Input\n    }],\n    showInitialSortBadge: [{\n      type: Input\n    }],\n    autoLayout: [{\n      type: Input\n    }],\n    exportFunction: [{\n      type: Input\n    }],\n    stateKey: [{\n      type: Input\n    }],\n    stateStorage: [{\n      type: Input\n    }],\n    editMode: [{\n      type: Input\n    }],\n    groupRowsBy: [{\n      type: Input\n    }],\n    minBufferPx: [{\n      type: Input\n    }],\n    maxBufferPx: [{\n      type: Input\n    }],\n    responsiveLayout: [{\n      type: Input\n    }],\n    breakpoint: [{\n      type: Input\n    }],\n    onRowSelect: [{\n      type: Output\n    }],\n    onRowUnselect: [{\n      type: Output\n    }],\n    onPage: [{\n      type: Output\n    }],\n    onSort: [{\n      type: Output\n    }],\n    onFilter: [{\n      type: Output\n    }],\n    onLazyLoad: [{\n      type: Output\n    }],\n    onRowExpand: [{\n      type: Output\n    }],\n    onRowCollapse: [{\n      type: Output\n    }],\n    onContextMenuSelect: [{\n      type: Output\n    }],\n    onColResize: [{\n      type: Output\n    }],\n    onColReorder: [{\n      type: Output\n    }],\n    onRowReorder: [{\n      type: Output\n    }],\n    onEditInit: [{\n      type: Output\n    }],\n    onEditComplete: [{\n      type: Output\n    }],\n    onEditCancel: [{\n      type: Output\n    }],\n    onHeaderCheckboxToggle: [{\n      type: Output\n    }],\n    sortFunction: [{\n      type: Output\n    }],\n    firstChange: [{\n      type: Output\n    }],\n    rowsChange: [{\n      type: Output\n    }],\n    onStateSave: [{\n      type: Output\n    }],\n    onStateRestore: [{\n      type: Output\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    resizeHelperViewChild: [{\n      type: ViewChild,\n      args: ['resizeHelper']\n    }],\n    reorderIndicatorUpViewChild: [{\n      type: ViewChild,\n      args: ['reorderIndicatorUp']\n    }],\n    reorderIndicatorDownViewChild: [{\n      type: ViewChild,\n      args: ['reorderIndicatorDown']\n    }],\n    wrapperViewChild: [{\n      type: ViewChild,\n      args: ['wrapper']\n    }],\n    tableViewChild: [{\n      type: ViewChild,\n      args: ['table']\n    }],\n    tableHeaderViewChild: [{\n      type: ViewChild,\n      args: ['tableHeader']\n    }],\n    virtualScrollBody: [{\n      type: ViewChild,\n      args: [CdkVirtualScrollViewport]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    value: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    first: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    totalRecords: [{\n      type: Input\n    }],\n    sortField: [{\n      type: Input\n    }],\n    sortOrder: [{\n      type: Input\n    }],\n    multiSortMeta: [{\n      type: Input\n    }],\n    selection: [{\n      type: Input\n    }]\n  });\n})();\n\nclass TableBody {\n  constructor(dt, tableService, cd, el) {\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.el = el;\n    this.subscription = this.dt.tableService.valueSource$.subscribe(() => {\n      if (this.dt.virtualScroll) {\n        this.cd.detectChanges();\n      }\n    });\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = val;\n\n    if (this.frozenRows) {\n      this.updateFrozenRowStickyPosition();\n    }\n\n    if (this.dt.scrollable && this.dt.rowGroupMode === 'subheader') {\n      this.updateFrozenRowGroupHeaderStickyPosition();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.frozenRows) {\n      this.updateFrozenRowStickyPosition();\n    }\n\n    if (this.dt.scrollable && this.dt.rowGroupMode === 'subheader') {\n      this.updateFrozenRowGroupHeaderStickyPosition();\n    }\n  }\n\n  shouldRenderRowGroupHeader(value, rowData, i) {\n    let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n    let prevRowData = value[i - 1];\n\n    if (prevRowData) {\n      let previousRowFieldData = ObjectUtils.resolveFieldData(prevRowData, this.dt.groupRowsBy);\n      return currentRowFieldData !== previousRowFieldData;\n    } else {\n      return true;\n    }\n  }\n\n  shouldRenderRowGroupFooter(value, rowData, i) {\n    let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n    let nextRowData = value[i + 1];\n\n    if (nextRowData) {\n      let nextRowFieldData = ObjectUtils.resolveFieldData(nextRowData, this.dt.groupRowsBy);\n      return currentRowFieldData !== nextRowFieldData;\n    } else {\n      return true;\n    }\n  }\n\n  shouldRenderRowspan(value, rowData, i) {\n    let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n    let prevRowData = value[i - 1];\n\n    if (prevRowData) {\n      let previousRowFieldData = ObjectUtils.resolveFieldData(prevRowData, this.dt.groupRowsBy);\n      return currentRowFieldData !== previousRowFieldData;\n    } else {\n      return true;\n    }\n  }\n\n  calculateRowGroupSize(value, rowData, index) {\n    let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n    let nextRowFieldData = currentRowFieldData;\n    let groupRowSpan = 0;\n\n    while (currentRowFieldData === nextRowFieldData) {\n      groupRowSpan++;\n      let nextRowData = value[++index];\n\n      if (nextRowData) {\n        nextRowFieldData = ObjectUtils.resolveFieldData(nextRowData, this.dt.groupRowsBy);\n      } else {\n        break;\n      }\n    }\n\n    return groupRowSpan === 1 ? null : groupRowSpan;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  updateFrozenRowStickyPosition() {\n    this.el.nativeElement.style.top = DomHandler.getOuterHeight(this.el.nativeElement.previousElementSibling) + 'px';\n  }\n\n  updateFrozenRowGroupHeaderStickyPosition() {\n    if (this.el.nativeElement.previousElementSibling) {\n      let tableHeaderHeight = DomHandler.getOuterHeight(this.el.nativeElement.previousElementSibling);\n      this.dt.rowGroupHeaderStyleObject.top = tableHeaderHeight + 'px';\n    }\n  }\n\n}\n\nTableBody.ɵfac = function TableBody_Factory(t) {\n  return new (t || TableBody)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nTableBody.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TableBody,\n  selectors: [[\"\", \"pTableBody\", \"\"]],\n  inputs: {\n    columns: [\"pTableBody\", \"columns\"],\n    template: [\"pTableBodyTemplate\", \"template\"],\n    value: \"value\",\n    frozen: \"frozen\",\n    frozenRows: \"frozenRows\"\n  },\n  attrs: _c10,\n  decls: 6,\n  vars: 6,\n  consts: [[4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [\"role\", \"row\", 4, \"ngIf\"], [\"role\", \"row\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"cdkVirtualFor\", \"\", 3, \"cdkVirtualForOf\", \"cdkVirtualForTrackBy\", \"cdkVirtualForTemplateCacheSize\"]],\n  template: function TableBody_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TableBody_ng_container_0_Template, 2, 2, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, TableBody_ng_container_1_Template, 2, 3, \"ng-container\", 0);\n      i0.ɵɵtemplate(2, TableBody_ng_container_2_Template, 2, 2, \"ng-container\", 0);\n      i0.ɵɵtemplate(3, TableBody_ng_container_3_Template, 2, 2, \"ng-container\", 0);\n      i0.ɵɵtemplate(4, TableBody_ng_container_4_Template, 2, 5, \"ng-container\", 0);\n      i0.ɵɵtemplate(5, TableBody_ng_container_5_Template, 2, 5, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.dt.expandedRowTemplate && !ctx.dt.virtualScroll);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.dt.expandedRowTemplate && ctx.dt.virtualScroll);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dt.expandedRowTemplate && !(ctx.frozen && ctx.dt.frozenExpandedRowTemplate));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dt.frozenExpandedRowTemplate && ctx.frozen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dt.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dt.isEmpty() && !ctx.dt.loading);\n    }\n  },\n  directives: [i4.NgIf, i4.NgForOf, i4.NgTemplateOutlet, i3.CdkVirtualForOf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableBody, [{\n    type: Component,\n    args: [{\n      selector: '[pTableBody]',\n      template: `\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && !dt.virtualScroll\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngIf=\"dt.groupHeaderTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupHeader(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupHeaderTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.rowGroupMode !== 'rowspan'\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.rowGroupMode === 'rowspan'\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen, rowgroup: shouldRenderRowspan(value, rowData, rowIndex), rowspan: calculateRowGroupSize(value, rowData, rowIndex)}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.groupFooterTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupFooter(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupFooterTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && dt.virtualScroll\">\n            <ng-template cdkVirtualFor let-rowData let-rowIndex=\"index\" [cdkVirtualForOf]=\"value\" [cdkVirtualForTrackBy]=\"dt.rowTrackBy\" [cdkVirtualForTemplateCacheSize]=\"0\">\n                <ng-container *ngTemplateOutlet=\"rowData ? template: dt.loadingBodyTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.expandedRowTemplate && !(frozen && dt.frozenExpandedRowTemplate)\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngIf=\"!dt.groupHeaderTemplate\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.groupHeaderTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupHeader(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupHeaderTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, frozen: frozen}\"></ng-container>\n                    <ng-container *ngIf=\"dt.groupFooterTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupFooter(value, rowData, rowIndex)\" role=\"row\">\n                        <ng-container *ngTemplateOutlet=\"dt.groupFooterTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                    </ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.frozenExpandedRowTemplate && frozen\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.frozenExpandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, frozen: frozen}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.loadingBodyTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dt.isEmpty() && !dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n    `,\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    columns: [{\n      type: Input,\n      args: [\"pTableBody\"]\n    }],\n    template: [{\n      type: Input,\n      args: [\"pTableBodyTemplate\"]\n    }],\n    value: [{\n      type: Input\n    }],\n    frozen: [{\n      type: Input\n    }],\n    frozenRows: [{\n      type: Input\n    }]\n  });\n})();\n\nclass RowGroupHeader {\n  constructor(dt) {\n    this.dt = dt;\n  }\n\n  get getFrozenRowGroupHeaderStickyPosition() {\n    return this.dt.rowGroupHeaderStyleObject ? this.dt.rowGroupHeaderStyleObject.top : '';\n  }\n\n}\n\nRowGroupHeader.ɵfac = function RowGroupHeader_Factory(t) {\n  return new (t || RowGroupHeader)(i0.ɵɵdirectiveInject(Table));\n};\n\nRowGroupHeader.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: RowGroupHeader,\n  selectors: [[\"\", \"pRowGroupHeader\", \"\"]],\n  hostVars: 4,\n  hostBindings: function RowGroupHeader_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"top\", ctx.getFrozenRowGroupHeaderStickyPosition);\n      i0.ɵɵclassProp(\"p-rowgroup-header\", true);\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RowGroupHeader, [{\n    type: Directive,\n    args: [{\n      selector: '[pRowGroupHeader]',\n      host: {\n        '[class.p-rowgroup-header]': 'true',\n        '[style.top]': \"getFrozenRowGroupHeaderStickyPosition\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }];\n  }, null);\n})();\n\nclass FrozenColumn {\n  constructor(el) {\n    this.el = el;\n    this.alignFrozen = \"left\";\n    this._frozen = true;\n  }\n\n  get frozen() {\n    return this._frozen;\n  }\n\n  set frozen(val) {\n    this._frozen = val;\n    this.updateStickyPosition();\n  }\n\n  ngAfterViewInit() {\n    this.updateStickyPosition();\n  }\n\n  updateStickyPosition() {\n    if (this._frozen) {\n      if (this.alignFrozen === 'right') {\n        let right = 0;\n        let next = this.el.nativeElement.nextElementSibling;\n\n        if (next) {\n          right = DomHandler.getOuterWidth(next) + parseFloat(next.style.right);\n        }\n\n        this.el.nativeElement.style.right = right + 'px';\n      } else {\n        let left = 0;\n        let prev = this.el.nativeElement.previousElementSibling;\n\n        if (prev) {\n          left = DomHandler.getOuterWidth(prev) + parseFloat(prev.style.left);\n        }\n\n        this.el.nativeElement.style.left = left + 'px';\n      }\n\n      let filterRow = this.el.nativeElement.parentElement.nextElementSibling;\n\n      if (filterRow) {\n        let index = DomHandler.index(this.el.nativeElement);\n        filterRow.children[index].style.left = this.el.nativeElement.style.left;\n        filterRow.children[index].style.right = this.el.nativeElement.style.right;\n      }\n    }\n  }\n\n}\n\nFrozenColumn.ɵfac = function FrozenColumn_Factory(t) {\n  return new (t || FrozenColumn)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nFrozenColumn.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FrozenColumn,\n  selectors: [[\"\", \"pFrozenColumn\", \"\"]],\n  hostVars: 2,\n  hostBindings: function FrozenColumn_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-frozen-column\", ctx.frozen);\n    }\n  },\n  inputs: {\n    frozen: \"frozen\",\n    alignFrozen: \"alignFrozen\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FrozenColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[pFrozenColumn]',\n      host: {\n        '[class.p-frozen-column]': 'frozen'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    frozen: [{\n      type: Input\n    }],\n    alignFrozen: [{\n      type: Input\n    }]\n  });\n})();\n\nclass SortableColumn {\n  constructor(dt) {\n    this.dt = dt;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n        this.updateSortState();\n      });\n    }\n  }\n\n  ngOnInit() {\n    if (this.isEnabled()) {\n      this.updateSortState();\n    }\n  }\n\n  updateSortState() {\n    this.sorted = this.dt.isSorted(this.field);\n    this.sortOrder = this.sorted ? this.dt.sortOrder === 1 ? 'ascending' : 'descending' : 'none';\n  }\n\n  onClick(event) {\n    if (this.isEnabled() && !this.isFilterElement(event.target)) {\n      this.updateSortState();\n      this.dt.sort({\n        originalEvent: event,\n        field: this.field\n      });\n      DomHandler.clearSelection();\n    }\n  }\n\n  onEnterKey(event) {\n    this.onClick(event);\n  }\n\n  isEnabled() {\n    return this.pSortableColumnDisabled !== true;\n  }\n\n  isFilterElement(element) {\n    return DomHandler.hasClass(element, 'pi-filter-icon') || DomHandler.hasClass(element, 'p-column-filter-menu-button');\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nSortableColumn.ɵfac = function SortableColumn_Factory(t) {\n  return new (t || SortableColumn)(i0.ɵɵdirectiveInject(Table));\n};\n\nSortableColumn.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SortableColumn,\n  selectors: [[\"\", \"pSortableColumn\", \"\"]],\n  hostVars: 7,\n  hostBindings: function SortableColumn_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function SortableColumn_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"keydown.enter\", function SortableColumn_keydown_enter_HostBindingHandler($event) {\n        return ctx.onEnterKey($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? \"0\" : null)(\"role\", \"columnheader\")(\"aria-sort\", ctx.sortOrder);\n      i0.ɵɵclassProp(\"p-sortable-column\", ctx.isEnabled())(\"p-highlight\", ctx.sorted);\n    }\n  },\n  inputs: {\n    field: [\"pSortableColumn\", \"field\"],\n    pSortableColumnDisabled: \"pSortableColumnDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SortableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[pSortableColumn]',\n      host: {\n        '[class.p-sortable-column]': 'isEnabled()',\n        '[class.p-highlight]': 'sorted',\n        '[attr.tabindex]': 'isEnabled() ? \"0\" : null',\n        '[attr.role]': '\"columnheader\"',\n        '[attr.aria-sort]': 'sortOrder'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }];\n  }, {\n    field: [{\n      type: Input,\n      args: [\"pSortableColumn\"]\n    }],\n    pSortableColumnDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onEnterKey: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }]\n  });\n})();\n\nclass SortIcon {\n  constructor(dt, cd) {\n    this.dt = dt;\n    this.cd = cd;\n    this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n      this.updateSortState();\n    });\n  }\n\n  ngOnInit() {\n    this.updateSortState();\n  }\n\n  onClick(event) {\n    event.preventDefault();\n  }\n\n  updateSortState() {\n    if (this.dt.sortMode === 'single') {\n      this.sortOrder = this.dt.isSorted(this.field) ? this.dt.sortOrder : 0;\n    } else if (this.dt.sortMode === 'multiple') {\n      let sortMeta = this.dt.getSortMeta(this.field);\n      this.sortOrder = sortMeta ? sortMeta.order : 0;\n    }\n\n    this.cd.markForCheck();\n  }\n\n  getMultiSortMetaIndex() {\n    let multiSortMeta = this.dt._multiSortMeta;\n    let index = -1;\n\n    if (multiSortMeta && this.dt.sortMode === 'multiple' && (this.dt.showInitialSortBadge || multiSortMeta.length > 1)) {\n      for (let i = 0; i < multiSortMeta.length; i++) {\n        let meta = multiSortMeta[i];\n\n        if (meta.field === this.field || meta.field === this.field) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    return index;\n  }\n\n  isMultiSorted() {\n    return this.dt.sortMode === 'multiple' && this.getMultiSortMetaIndex() > -1;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nSortIcon.ɵfac = function SortIcon_Factory(t) {\n  return new (t || SortIcon)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nSortIcon.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SortIcon,\n  selectors: [[\"p-sortIcon\"]],\n  inputs: {\n    field: \"field\"\n  },\n  decls: 2,\n  vars: 6,\n  consts: [[1, \"p-sortable-column-icon\", \"pi\", \"pi-fw\", 3, \"ngClass\"], [\"class\", \"p-sortable-column-badge\", 4, \"ngIf\"], [1, \"p-sortable-column-badge\"]],\n  template: function SortIcon_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"i\", 0);\n      i0.ɵɵtemplate(1, SortIcon_span_1_Template, 2, 1, \"span\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(2, _c16, ctx.sortOrder === 1, ctx.sortOrder === -1, ctx.sortOrder === 0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isMultiSorted());\n    }\n  },\n  directives: [i4.NgClass, i4.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SortIcon, [{\n    type: Component,\n    args: [{\n      selector: 'p-sortIcon',\n      template: `\n        <i class=\"p-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\n        <span *ngIf=\"isMultiSorted()\" class=\"p-sortable-column-badge\">{{getMultiSortMetaIndex() + 1}}</span>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    field: [{\n      type: Input\n    }]\n  });\n})();\n\nclass SelectableRow {\n  constructor(dt, tableService) {\n    this.dt = dt;\n    this.tableService = tableService;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n        this.selected = this.dt.isSelected(this.data);\n      });\n    }\n  }\n\n  ngOnInit() {\n    if (this.isEnabled()) {\n      this.selected = this.dt.isSelected(this.data);\n    }\n  }\n\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.dt.handleRowClick({\n        originalEvent: event,\n        rowData: this.data,\n        rowIndex: this.index\n      });\n    }\n  }\n\n  onTouchEnd(event) {\n    if (this.isEnabled()) {\n      this.dt.handleRowTouchEnd(event);\n    }\n  }\n\n  onArrowDownKeyDown(event) {\n    if (!this.isEnabled()) {\n      return;\n    }\n\n    const row = event.currentTarget;\n    const nextRow = this.findNextSelectableRow(row);\n\n    if (nextRow) {\n      nextRow.focus();\n    }\n\n    event.preventDefault();\n  }\n\n  onArrowUpKeyDown(event) {\n    if (!this.isEnabled()) {\n      return;\n    }\n\n    const row = event.currentTarget;\n    const prevRow = this.findPrevSelectableRow(row);\n\n    if (prevRow) {\n      prevRow.focus();\n    }\n\n    event.preventDefault();\n  }\n\n  onEnterKeyDown(event) {\n    if (!this.isEnabled()) {\n      return;\n    }\n\n    this.dt.handleRowClick({\n      originalEvent: event,\n      rowData: this.data,\n      rowIndex: this.index\n    });\n  }\n\n  onPageDownKeyDown() {\n    if (this.dt.virtualScroll) {\n      this.dt.virtualScrollBody.elementRef.nativeElement.focus();\n    }\n  }\n\n  onSpaceKeydown() {\n    if (this.dt.virtualScroll && !this.dt.editingCell) {\n      this.dt.virtualScrollBody.elementRef.nativeElement.focus();\n    }\n  }\n\n  findNextSelectableRow(row) {\n    let nextRow = row.nextElementSibling;\n\n    if (nextRow) {\n      if (DomHandler.hasClass(nextRow, 'p-selectable-row')) return nextRow;else return this.findNextSelectableRow(nextRow);\n    } else {\n      return null;\n    }\n  }\n\n  findPrevSelectableRow(row) {\n    let prevRow = row.previousElementSibling;\n\n    if (prevRow) {\n      if (DomHandler.hasClass(prevRow, 'p-selectable-row')) return prevRow;else return this.findPrevSelectableRow(prevRow);\n    } else {\n      return null;\n    }\n  }\n\n  isEnabled() {\n    return this.pSelectableRowDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nSelectableRow.ɵfac = function SelectableRow_Factory(t) {\n  return new (t || SelectableRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService));\n};\n\nSelectableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SelectableRow,\n  selectors: [[\"\", \"pSelectableRow\", \"\"]],\n  hostVars: 5,\n  hostBindings: function SelectableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function SelectableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"touchend\", function SelectableRow_touchend_HostBindingHandler($event) {\n        return ctx.onTouchEnd($event);\n      })(\"keydown.arrowdown\", function SelectableRow_keydown_arrowdown_HostBindingHandler($event) {\n        return ctx.onArrowDownKeyDown($event);\n      })(\"keydown.arrowup\", function SelectableRow_keydown_arrowup_HostBindingHandler($event) {\n        return ctx.onArrowUpKeyDown($event);\n      })(\"keydown.enter\", function SelectableRow_keydown_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      })(\"keydown.shift.enter\", function SelectableRow_keydown_shift_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      })(\"keydown.meta.enter\", function SelectableRow_keydown_meta_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      })(\"keydown.pagedown\", function SelectableRow_keydown_pagedown_HostBindingHandler() {\n        return ctx.onPageDownKeyDown();\n      })(\"keydown.pageup\", function SelectableRow_keydown_pageup_HostBindingHandler() {\n        return ctx.onPageDownKeyDown();\n      })(\"keydown.home\", function SelectableRow_keydown_home_HostBindingHandler() {\n        return ctx.onPageDownKeyDown();\n      })(\"keydown.end\", function SelectableRow_keydown_end_HostBindingHandler() {\n        return ctx.onPageDownKeyDown();\n      })(\"keydown.space\", function SelectableRow_keydown_space_HostBindingHandler() {\n        return ctx.onSpaceKeydown();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? 0 : undefined);\n      i0.ɵɵclassProp(\"p-selectable-row\", ctx.isEnabled())(\"p-highlight\", ctx.selected);\n    }\n  },\n  inputs: {\n    data: [\"pSelectableRow\", \"data\"],\n    index: [\"pSelectableRowIndex\", \"index\"],\n    pSelectableRowDisabled: \"pSelectableRowDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pSelectableRow]',\n      host: {\n        '[class.p-selectable-row]': 'isEnabled()',\n        '[class.p-highlight]': 'selected',\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }];\n  }, {\n    data: [{\n      type: Input,\n      args: [\"pSelectableRow\"]\n    }],\n    index: [{\n      type: Input,\n      args: [\"pSelectableRowIndex\"]\n    }],\n    pSelectableRowDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onTouchEnd: [{\n      type: HostListener,\n      args: ['touchend', ['$event']]\n    }],\n    onArrowDownKeyDown: [{\n      type: HostListener,\n      args: ['keydown.arrowdown', ['$event']]\n    }],\n    onArrowUpKeyDown: [{\n      type: HostListener,\n      args: ['keydown.arrowup', ['$event']]\n    }],\n    onEnterKeyDown: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.shift.enter', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.meta.enter', ['$event']]\n    }],\n    onPageDownKeyDown: [{\n      type: HostListener,\n      args: ['keydown.pagedown']\n    }, {\n      type: HostListener,\n      args: ['keydown.pageup']\n    }, {\n      type: HostListener,\n      args: ['keydown.home']\n    }, {\n      type: HostListener,\n      args: ['keydown.end']\n    }],\n    onSpaceKeydown: [{\n      type: HostListener,\n      args: ['keydown.space']\n    }]\n  });\n})();\n\nclass SelectableRowDblClick {\n  constructor(dt, tableService) {\n    this.dt = dt;\n    this.tableService = tableService;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n        this.selected = this.dt.isSelected(this.data);\n      });\n    }\n  }\n\n  ngOnInit() {\n    if (this.isEnabled()) {\n      this.selected = this.dt.isSelected(this.data);\n    }\n  }\n\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.dt.handleRowClick({\n        originalEvent: event,\n        rowData: this.data,\n        rowIndex: this.index\n      });\n    }\n  }\n\n  isEnabled() {\n    return this.pSelectableRowDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nSelectableRowDblClick.ɵfac = function SelectableRowDblClick_Factory(t) {\n  return new (t || SelectableRowDblClick)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService));\n};\n\nSelectableRowDblClick.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SelectableRowDblClick,\n  selectors: [[\"\", \"pSelectableRowDblClick\", \"\"]],\n  hostVars: 4,\n  hostBindings: function SelectableRowDblClick_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"dblclick\", function SelectableRowDblClick_dblclick_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-selectable-row\", ctx.isEnabled())(\"p-highlight\", ctx.selected);\n    }\n  },\n  inputs: {\n    data: [\"pSelectableRowDblClick\", \"data\"],\n    index: [\"pSelectableRowIndex\", \"index\"],\n    pSelectableRowDisabled: \"pSelectableRowDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectableRowDblClick, [{\n    type: Directive,\n    args: [{\n      selector: '[pSelectableRowDblClick]',\n      host: {\n        '[class.p-selectable-row]': 'isEnabled()',\n        '[class.p-highlight]': 'selected'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }];\n  }, {\n    data: [{\n      type: Input,\n      args: [\"pSelectableRowDblClick\"]\n    }],\n    index: [{\n      type: Input,\n      args: [\"pSelectableRowIndex\"]\n    }],\n    pSelectableRowDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['dblclick', ['$event']]\n    }]\n  });\n})();\n\nclass ContextMenuRow {\n  constructor(dt, tableService, el) {\n    this.dt = dt;\n    this.tableService = tableService;\n    this.el = el;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.contextMenuSource$.subscribe(data => {\n        this.selected = this.dt.equals(this.data, data);\n      });\n    }\n  }\n\n  onContextMenu(event) {\n    if (this.isEnabled()) {\n      this.dt.handleRowRightClick({\n        originalEvent: event,\n        rowData: this.data,\n        rowIndex: this.index\n      });\n      this.el.nativeElement.focus();\n      event.preventDefault();\n    }\n  }\n\n  isEnabled() {\n    return this.pContextMenuRowDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nContextMenuRow.ɵfac = function ContextMenuRow_Factory(t) {\n  return new (t || ContextMenuRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nContextMenuRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ContextMenuRow,\n  selectors: [[\"\", \"pContextMenuRow\", \"\"]],\n  hostVars: 3,\n  hostBindings: function ContextMenuRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"contextmenu\", function ContextMenuRow_contextmenu_HostBindingHandler($event) {\n        return ctx.onContextMenu($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? 0 : undefined);\n      i0.ɵɵclassProp(\"p-highlight-contextmenu\", ctx.selected);\n    }\n  },\n  inputs: {\n    data: [\"pContextMenuRow\", \"data\"],\n    index: [\"pContextMenuRowIndex\", \"index\"],\n    pContextMenuRowDisabled: \"pContextMenuRowDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContextMenuRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pContextMenuRow]',\n      host: {\n        '[class.p-highlight-contextmenu]': 'selected',\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input,\n      args: [\"pContextMenuRow\"]\n    }],\n    index: [{\n      type: Input,\n      args: [\"pContextMenuRowIndex\"]\n    }],\n    pContextMenuRowDisabled: [{\n      type: Input\n    }],\n    onContextMenu: [{\n      type: HostListener,\n      args: ['contextmenu', ['$event']]\n    }]\n  });\n})();\n\nclass RowToggler {\n  constructor(dt) {\n    this.dt = dt;\n  }\n\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.dt.toggleRow(this.data, event);\n      event.preventDefault();\n    }\n  }\n\n  isEnabled() {\n    return this.pRowTogglerDisabled !== true;\n  }\n\n}\n\nRowToggler.ɵfac = function RowToggler_Factory(t) {\n  return new (t || RowToggler)(i0.ɵɵdirectiveInject(Table));\n};\n\nRowToggler.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: RowToggler,\n  selectors: [[\"\", \"pRowToggler\", \"\"]],\n  hostBindings: function RowToggler_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function RowToggler_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  },\n  inputs: {\n    data: [\"pRowToggler\", \"data\"],\n    pRowTogglerDisabled: \"pRowTogglerDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RowToggler, [{\n    type: Directive,\n    args: [{\n      selector: '[pRowToggler]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }];\n  }, {\n    data: [{\n      type: Input,\n      args: ['pRowToggler']\n    }],\n    pRowTogglerDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nclass ResizableColumn {\n  constructor(dt, el, zone) {\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      DomHandler.addClass(this.el.nativeElement, 'p-resizable-column');\n      this.resizer = document.createElement('span');\n      this.resizer.className = 'p-column-resizer';\n      this.el.nativeElement.appendChild(this.resizer);\n      this.zone.runOutsideAngular(() => {\n        this.resizerMouseDownListener = this.onMouseDown.bind(this);\n        this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\n      });\n    }\n  }\n\n  bindDocumentEvents() {\n    this.zone.runOutsideAngular(() => {\n      this.documentMouseMoveListener = this.onDocumentMouseMove.bind(this);\n      document.addEventListener('mousemove', this.documentMouseMoveListener);\n      this.documentMouseUpListener = this.onDocumentMouseUp.bind(this);\n      document.addEventListener('mouseup', this.documentMouseUpListener);\n    });\n  }\n\n  unbindDocumentEvents() {\n    if (this.documentMouseMoveListener) {\n      document.removeEventListener('mousemove', this.documentMouseMoveListener);\n      this.documentMouseMoveListener = null;\n    }\n\n    if (this.documentMouseUpListener) {\n      document.removeEventListener('mouseup', this.documentMouseUpListener);\n      this.documentMouseUpListener = null;\n    }\n  }\n\n  onMouseDown(event) {\n    if (event.which === 1) {\n      this.dt.onColumnResizeBegin(event);\n      this.bindDocumentEvents();\n    }\n  }\n\n  onDocumentMouseMove(event) {\n    this.dt.onColumnResize(event);\n  }\n\n  onDocumentMouseUp(event) {\n    this.dt.onColumnResizeEnd();\n    this.unbindDocumentEvents();\n  }\n\n  isEnabled() {\n    return this.pResizableColumnDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    if (this.resizerMouseDownListener) {\n      this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\n    }\n\n    this.unbindDocumentEvents();\n  }\n\n}\n\nResizableColumn.ɵfac = function ResizableColumn_Factory(t) {\n  return new (t || ResizableColumn)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nResizableColumn.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ResizableColumn,\n  selectors: [[\"\", \"pResizableColumn\", \"\"]],\n  inputs: {\n    pResizableColumnDisabled: \"pResizableColumnDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResizableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[pResizableColumn]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    pResizableColumnDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ReorderableColumn {\n  constructor(dt, el, zone) {\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      this.bindEvents();\n    }\n  }\n\n  bindEvents() {\n    this.zone.runOutsideAngular(() => {\n      this.mouseDownListener = this.onMouseDown.bind(this);\n      this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n      this.dragStartListener = this.onDragStart.bind(this);\n      this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n      this.dragOverListener = this.onDragEnter.bind(this);\n      this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n      this.dragEnterListener = this.onDragEnter.bind(this);\n      this.el.nativeElement.addEventListener('dragenter', this.dragEnterListener);\n      this.dragLeaveListener = this.onDragLeave.bind(this);\n      this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n    });\n  }\n\n  unbindEvents() {\n    if (this.mouseDownListener) {\n      document.removeEventListener('mousedown', this.mouseDownListener);\n      this.mouseDownListener = null;\n    }\n\n    if (this.dragOverListener) {\n      document.removeEventListener('dragover', this.dragOverListener);\n      this.dragOverListener = null;\n    }\n\n    if (this.dragEnterListener) {\n      document.removeEventListener('dragenter', this.dragEnterListener);\n      this.dragEnterListener = null;\n    }\n\n    if (this.dragEnterListener) {\n      document.removeEventListener('dragenter', this.dragEnterListener);\n      this.dragEnterListener = null;\n    }\n\n    if (this.dragLeaveListener) {\n      document.removeEventListener('dragleave', this.dragLeaveListener);\n      this.dragLeaveListener = null;\n    }\n  }\n\n  onMouseDown(event) {\n    if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer')) this.el.nativeElement.draggable = false;else this.el.nativeElement.draggable = true;\n  }\n\n  onDragStart(event) {\n    this.dt.onColumnDragStart(event, this.el.nativeElement);\n  }\n\n  onDragOver(event) {\n    event.preventDefault();\n  }\n\n  onDragEnter(event) {\n    this.dt.onColumnDragEnter(event, this.el.nativeElement);\n  }\n\n  onDragLeave(event) {\n    this.dt.onColumnDragLeave(event);\n  }\n\n  onDrop(event) {\n    if (this.isEnabled()) {\n      this.dt.onColumnDrop(event, this.el.nativeElement);\n    }\n  }\n\n  isEnabled() {\n    return this.pReorderableColumnDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    this.unbindEvents();\n  }\n\n}\n\nReorderableColumn.ɵfac = function ReorderableColumn_Factory(t) {\n  return new (t || ReorderableColumn)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nReorderableColumn.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ReorderableColumn,\n  selectors: [[\"\", \"pReorderableColumn\", \"\"]],\n  hostBindings: function ReorderableColumn_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"drop\", function ReorderableColumn_drop_HostBindingHandler($event) {\n        return ctx.onDrop($event);\n      });\n    }\n  },\n  inputs: {\n    pReorderableColumnDisabled: \"pReorderableColumnDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReorderableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[pReorderableColumn]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    pReorderableColumnDisabled: [{\n      type: Input\n    }],\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }]\n  });\n})();\n\nclass EditableColumn {\n  constructor(dt, el, zone) {\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      DomHandler.addClass(this.el.nativeElement, 'p-editable-column');\n    }\n  }\n\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.dt.selfClick = true;\n\n      if (this.dt.editingCell) {\n        if (this.dt.editingCell !== this.el.nativeElement) {\n          if (!this.dt.isEditingCellValid()) {\n            return;\n          }\n\n          this.closeEditingCell(true, event);\n          this.openCell();\n        }\n      } else {\n        this.openCell();\n      }\n    }\n  }\n\n  openCell() {\n    this.dt.updateEditingCell(this.el.nativeElement, this.data, this.field, this.rowIndex);\n    DomHandler.addClass(this.el.nativeElement, 'p-cell-editing');\n    this.dt.onEditInit.emit({\n      field: this.field,\n      data: this.data,\n      index: this.rowIndex\n    });\n    this.zone.runOutsideAngular(() => {\n      setTimeout(() => {\n        let focusCellSelector = this.pFocusCellSelector || 'input, textarea, select';\n        let focusableElement = DomHandler.findSingle(this.el.nativeElement, focusCellSelector);\n\n        if (focusableElement) {\n          focusableElement.focus();\n        }\n      }, 50);\n    });\n\n    this.overlayEventListener = e => {\n      if (this.el && this.el.nativeElement.contains(e.target)) {\n        this.dt.selfClick = true;\n      }\n    };\n\n    this.dt.overlaySubscription = this.dt.overlayService.clickObservable.subscribe(this.overlayEventListener);\n  }\n\n  closeEditingCell(completed, event) {\n    if (completed) this.dt.onEditComplete.emit({\n      field: this.dt.editingCellField,\n      data: this.dt.editingCellData,\n      originalEvent: event,\n      index: this.dt.editingCellRowIndex\n    });else this.dt.onEditCancel.emit({\n      field: this.dt.editingCellField,\n      data: this.dt.editingCellData,\n      originalEvent: event,\n      index: this.dt.editingCellRowIndex\n    });\n    DomHandler.removeClass(this.dt.editingCell, 'p-cell-editing');\n    this.dt.editingCell = null;\n    this.dt.editingCellData = null;\n    this.dt.editingCellField = null;\n    this.dt.unbindDocumentEditListener();\n\n    if (this.dt.overlaySubscription) {\n      this.dt.overlaySubscription.unsubscribe();\n    }\n  }\n\n  onEnterKeyDown(event) {\n    if (this.isEnabled()) {\n      if (this.dt.isEditingCellValid()) {\n        this.closeEditingCell(true, event);\n      }\n\n      event.preventDefault();\n    }\n  }\n\n  onEscapeKeyDown(event) {\n    if (this.isEnabled()) {\n      if (this.dt.isEditingCellValid()) {\n        this.closeEditingCell(false, event);\n      }\n\n      event.preventDefault();\n    }\n  }\n\n  onShiftKeyDown(event) {\n    if (this.isEnabled()) {\n      if (event.shiftKey) this.moveToPreviousCell(event);else {\n        this.moveToNextCell(event);\n      }\n    }\n  }\n\n  onArrowDown(event) {\n    if (this.isEnabled()) {\n      let currentCell = this.findCell(event.target);\n\n      if (currentCell) {\n        let cellIndex = DomHandler.index(currentCell);\n        let targetCell = this.findNextEditableColumnByIndex(currentCell, cellIndex);\n\n        if (targetCell) {\n          if (this.dt.isEditingCellValid()) {\n            this.closeEditingCell(true, event);\n          }\n\n          DomHandler.invokeElementMethod(event.target, 'blur');\n          DomHandler.invokeElementMethod(targetCell, 'click');\n        }\n\n        event.preventDefault();\n      }\n    }\n  }\n\n  onArrowUp(event) {\n    if (this.isEnabled()) {\n      let currentCell = this.findCell(event.target);\n\n      if (currentCell) {\n        let cellIndex = DomHandler.index(currentCell);\n        let targetCell = this.findPrevEditableColumnByIndex(currentCell, cellIndex);\n\n        if (targetCell) {\n          if (this.dt.isEditingCellValid()) {\n            this.closeEditingCell(true, event);\n          }\n\n          DomHandler.invokeElementMethod(event.target, 'blur');\n          DomHandler.invokeElementMethod(targetCell, 'click');\n        }\n\n        event.preventDefault();\n      }\n    }\n  }\n\n  onArrowLeft(event) {\n    if (this.isEnabled()) {\n      this.moveToPreviousCell(event);\n    }\n  }\n\n  onArrowRight(event) {\n    if (this.isEnabled()) {\n      this.moveToNextCell(event);\n    }\n  }\n\n  findCell(element) {\n    if (element) {\n      let cell = element;\n\n      while (cell && !DomHandler.hasClass(cell, 'p-cell-editing')) {\n        cell = cell.parentElement;\n      }\n\n      return cell;\n    } else {\n      return null;\n    }\n  }\n\n  moveToPreviousCell(event) {\n    let currentCell = this.findCell(event.target);\n\n    if (currentCell) {\n      let targetCell = this.findPreviousEditableColumn(currentCell);\n\n      if (targetCell) {\n        if (this.dt.isEditingCellValid()) {\n          this.closeEditingCell(true, event);\n        }\n\n        DomHandler.invokeElementMethod(event.target, 'blur');\n        DomHandler.invokeElementMethod(targetCell, 'click');\n        event.preventDefault();\n      }\n    }\n  }\n\n  moveToNextCell(event) {\n    let currentCell = this.findCell(event.target);\n\n    if (currentCell) {\n      let targetCell = this.findNextEditableColumn(currentCell);\n\n      if (targetCell) {\n        if (this.dt.isEditingCellValid()) {\n          this.closeEditingCell(true, event);\n        }\n\n        DomHandler.invokeElementMethod(event.target, 'blur');\n        DomHandler.invokeElementMethod(targetCell, 'click');\n        event.preventDefault();\n      }\n    }\n  }\n\n  findPreviousEditableColumn(cell) {\n    let prevCell = cell.previousElementSibling;\n\n    if (!prevCell) {\n      let previousRow = cell.parentElement.previousElementSibling;\n\n      if (previousRow) {\n        prevCell = previousRow.lastElementChild;\n      }\n    }\n\n    if (prevCell) {\n      if (DomHandler.hasClass(prevCell, 'p-editable-column')) return prevCell;else return this.findPreviousEditableColumn(prevCell);\n    } else {\n      return null;\n    }\n  }\n\n  findNextEditableColumn(cell) {\n    let nextCell = cell.nextElementSibling;\n\n    if (!nextCell) {\n      let nextRow = cell.parentElement.nextElementSibling;\n\n      if (nextRow) {\n        nextCell = nextRow.firstElementChild;\n      }\n    }\n\n    if (nextCell) {\n      if (DomHandler.hasClass(nextCell, 'p-editable-column')) return nextCell;else return this.findNextEditableColumn(nextCell);\n    } else {\n      return null;\n    }\n  }\n\n  findNextEditableColumnByIndex(cell, index) {\n    let nextRow = cell.parentElement.nextElementSibling;\n\n    if (nextRow) {\n      let nextCell = nextRow.children[index];\n\n      if (nextCell && DomHandler.hasClass(nextCell, 'p-editable-column')) {\n        return nextCell;\n      }\n\n      return null;\n    } else {\n      return null;\n    }\n  }\n\n  findPrevEditableColumnByIndex(cell, index) {\n    let prevRow = cell.parentElement.previousElementSibling;\n\n    if (prevRow) {\n      let prevCell = prevRow.children[index];\n\n      if (prevCell && DomHandler.hasClass(prevCell, 'p-editable-column')) {\n        return prevCell;\n      }\n\n      return null;\n    } else {\n      return null;\n    }\n  }\n\n  isEnabled() {\n    return this.pEditableColumnDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    if (this.dt.overlaySubscription) {\n      this.dt.overlaySubscription.unsubscribe();\n    }\n  }\n\n}\n\nEditableColumn.ɵfac = function EditableColumn_Factory(t) {\n  return new (t || EditableColumn)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nEditableColumn.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: EditableColumn,\n  selectors: [[\"\", \"pEditableColumn\", \"\"]],\n  hostBindings: function EditableColumn_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function EditableColumn_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"keydown.enter\", function EditableColumn_keydown_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      })(\"keydown.escape\", function EditableColumn_keydown_escape_HostBindingHandler($event) {\n        return ctx.onEscapeKeyDown($event);\n      })(\"keydown.tab\", function EditableColumn_keydown_tab_HostBindingHandler($event) {\n        return ctx.onShiftKeyDown($event);\n      })(\"keydown.shift.tab\", function EditableColumn_keydown_shift_tab_HostBindingHandler($event) {\n        return ctx.onShiftKeyDown($event);\n      })(\"keydown.meta.tab\", function EditableColumn_keydown_meta_tab_HostBindingHandler($event) {\n        return ctx.onShiftKeyDown($event);\n      })(\"keydown.arrowdown\", function EditableColumn_keydown_arrowdown_HostBindingHandler($event) {\n        return ctx.onArrowDown($event);\n      })(\"keydown.arrowup\", function EditableColumn_keydown_arrowup_HostBindingHandler($event) {\n        return ctx.onArrowUp($event);\n      })(\"keydown.arrowleft\", function EditableColumn_keydown_arrowleft_HostBindingHandler($event) {\n        return ctx.onArrowLeft($event);\n      })(\"keydown.arrowright\", function EditableColumn_keydown_arrowright_HostBindingHandler($event) {\n        return ctx.onArrowRight($event);\n      });\n    }\n  },\n  inputs: {\n    data: [\"pEditableColumn\", \"data\"],\n    field: [\"pEditableColumnField\", \"field\"],\n    rowIndex: [\"pEditableColumnRowIndex\", \"rowIndex\"],\n    pEditableColumnDisabled: \"pEditableColumnDisabled\",\n    pFocusCellSelector: \"pFocusCellSelector\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[pEditableColumn]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    data: [{\n      type: Input,\n      args: [\"pEditableColumn\"]\n    }],\n    field: [{\n      type: Input,\n      args: [\"pEditableColumnField\"]\n    }],\n    rowIndex: [{\n      type: Input,\n      args: [\"pEditableColumnRowIndex\"]\n    }],\n    pEditableColumnDisabled: [{\n      type: Input\n    }],\n    pFocusCellSelector: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onEnterKeyDown: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }],\n    onEscapeKeyDown: [{\n      type: HostListener,\n      args: ['keydown.escape', ['$event']]\n    }],\n    onShiftKeyDown: [{\n      type: HostListener,\n      args: ['keydown.tab', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.shift.tab', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.meta.tab', ['$event']]\n    }],\n    onArrowDown: [{\n      type: HostListener,\n      args: ['keydown.arrowdown', ['$event']]\n    }],\n    onArrowUp: [{\n      type: HostListener,\n      args: ['keydown.arrowup', ['$event']]\n    }],\n    onArrowLeft: [{\n      type: HostListener,\n      args: ['keydown.arrowleft', ['$event']]\n    }],\n    onArrowRight: [{\n      type: HostListener,\n      args: ['keydown.arrowright', ['$event']]\n    }]\n  });\n})();\n\nclass EditableRow {\n  constructor(el) {\n    this.el = el;\n  }\n\n  isEnabled() {\n    return this.pEditableRowDisabled !== true;\n  }\n\n}\n\nEditableRow.ɵfac = function EditableRow_Factory(t) {\n  return new (t || EditableRow)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nEditableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: EditableRow,\n  selectors: [[\"\", \"pEditableRow\", \"\"]],\n  inputs: {\n    data: [\"pEditableRow\", \"data\"],\n    pEditableRowDisabled: \"pEditableRowDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pEditableRow]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input,\n      args: [\"pEditableRow\"]\n    }],\n    pEditableRowDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\nclass InitEditableRow {\n  constructor(dt, editableRow) {\n    this.dt = dt;\n    this.editableRow = editableRow;\n  }\n\n  onClick(event) {\n    this.dt.initRowEdit(this.editableRow.data);\n    event.preventDefault();\n  }\n\n}\n\nInitEditableRow.ɵfac = function InitEditableRow_Factory(t) {\n  return new (t || InitEditableRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(EditableRow));\n};\n\nInitEditableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: InitEditableRow,\n  selectors: [[\"\", \"pInitEditableRow\", \"\"]],\n  hostBindings: function InitEditableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function InitEditableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InitEditableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pInitEditableRow]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableRow\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nclass SaveEditableRow {\n  constructor(dt, editableRow) {\n    this.dt = dt;\n    this.editableRow = editableRow;\n  }\n\n  onClick(event) {\n    this.dt.saveRowEdit(this.editableRow.data, this.editableRow.el.nativeElement);\n    event.preventDefault();\n  }\n\n}\n\nSaveEditableRow.ɵfac = function SaveEditableRow_Factory(t) {\n  return new (t || SaveEditableRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(EditableRow));\n};\n\nSaveEditableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SaveEditableRow,\n  selectors: [[\"\", \"pSaveEditableRow\", \"\"]],\n  hostBindings: function SaveEditableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function SaveEditableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SaveEditableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pSaveEditableRow]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableRow\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nclass CancelEditableRow {\n  constructor(dt, editableRow) {\n    this.dt = dt;\n    this.editableRow = editableRow;\n  }\n\n  onClick(event) {\n    this.dt.cancelRowEdit(this.editableRow.data);\n    event.preventDefault();\n  }\n\n}\n\nCancelEditableRow.ɵfac = function CancelEditableRow_Factory(t) {\n  return new (t || CancelEditableRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(EditableRow));\n};\n\nCancelEditableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CancelEditableRow,\n  selectors: [[\"\", \"pCancelEditableRow\", \"\"]],\n  hostBindings: function CancelEditableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function CancelEditableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CancelEditableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pCancelEditableRow]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableRow\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nclass CellEditor {\n  constructor(dt, editableColumn, editableRow) {\n    this.dt = dt;\n    this.editableColumn = editableColumn;\n    this.editableRow = editableRow;\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'input':\n          this.inputTemplate = item.template;\n          break;\n\n        case 'output':\n          this.outputTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  get editing() {\n    return this.dt.editingCell && this.editableColumn && this.dt.editingCell === this.editableColumn.el.nativeElement || this.editableRow && this.dt.editMode === 'row' && this.dt.isRowEditing(this.editableRow.data);\n  }\n\n}\n\nCellEditor.ɵfac = function CellEditor_Factory(t) {\n  return new (t || CellEditor)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(EditableColumn, 8), i0.ɵɵdirectiveInject(EditableRow, 8));\n};\n\nCellEditor.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CellEditor,\n  selectors: [[\"p-cellEditor\"]],\n  contentQueries: function CellEditor_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\"]],\n  template: function CellEditor_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CellEditor_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, CellEditor_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.editing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.editing);\n    }\n  },\n  directives: [i4.NgIf, i4.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellEditor, [{\n    type: Component,\n    args: [{\n      selector: 'p-cellEditor',\n      template: `\n        <ng-container *ngIf=\"editing\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!editing\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableColumn,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: EditableRow,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nclass TableRadioButton {\n  constructor(dt, tableService, cd) {\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n      this.checked = this.dt.isSelected(this.value);\n      this.cd.markForCheck();\n    });\n  }\n\n  ngOnInit() {\n    this.checked = this.dt.isSelected(this.value);\n  }\n\n  onClick(event) {\n    if (!this.disabled) {\n      this.dt.toggleRowWithRadio({\n        originalEvent: event,\n        rowIndex: this.index\n      }, this.value);\n    }\n\n    DomHandler.clearSelection();\n  }\n\n  onFocus() {\n    DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n  }\n\n  onBlur() {\n    DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nTableRadioButton.ɵfac = function TableRadioButton_Factory(t) {\n  return new (t || TableRadioButton)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nTableRadioButton.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TableRadioButton,\n  selectors: [[\"p-tableRadioButton\"]],\n  viewQuery: function TableRadioButton_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c17, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.boxViewChild = _t.first);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    value: \"value\",\n    index: \"index\",\n    inputId: \"inputId\",\n    name: \"name\",\n    ariaLabel: \"ariaLabel\"\n  },\n  decls: 6,\n  vars: 10,\n  consts: [[1, \"p-radiobutton\", \"p-component\", 3, \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"radio\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"role\", \"radio\", 3, \"ngClass\"], [\"box\", \"\"], [1, \"p-radiobutton-icon\"]],\n  template: function TableRadioButton_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function TableRadioButton_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"input\", 2);\n      i0.ɵɵlistener(\"focus\", function TableRadioButton_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function TableRadioButton_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵelement(5, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c18, ctx.checked, ctx.disabled));\n      i0.ɵɵattribute(\"aria-checked\", ctx.checked);\n    }\n  },\n  directives: [i4.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableRadioButton, [{\n    type: Component,\n    args: [{\n      selector: 'p-tableRadioButton',\n      template: `\n        <div class=\"p-radiobutton p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-radiobutton-box p-component':true, 'p-highlight':checked, 'p-disabled':disabled}\" role=\"radio\" [attr.aria-checked]=\"checked\">\n                <div class=\"p-radiobutton-icon\"></div>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    boxViewChild: [{\n      type: ViewChild,\n      args: ['box']\n    }]\n  });\n})();\n\nclass TableCheckbox {\n  constructor(dt, tableService, cd) {\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n      this.checked = this.dt.isSelected(this.value);\n      this.cd.markForCheck();\n    });\n  }\n\n  ngOnInit() {\n    this.checked = this.dt.isSelected(this.value);\n  }\n\n  onClick(event) {\n    if (!this.disabled) {\n      this.dt.toggleRowWithCheckbox({\n        originalEvent: event,\n        rowIndex: this.index\n      }, this.value);\n    }\n\n    DomHandler.clearSelection();\n  }\n\n  onFocus() {\n    DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n  }\n\n  onBlur() {\n    DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nTableCheckbox.ɵfac = function TableCheckbox_Factory(t) {\n  return new (t || TableCheckbox)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nTableCheckbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TableCheckbox,\n  selectors: [[\"p-tableCheckbox\"]],\n  viewQuery: function TableCheckbox_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c17, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.boxViewChild = _t.first);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    value: \"value\",\n    index: \"index\",\n    inputId: \"inputId\",\n    name: \"name\",\n    required: \"required\",\n    ariaLabel: \"ariaLabel\"\n  },\n  decls: 6,\n  vars: 14,\n  consts: [[1, \"p-checkbox\", \"p-component\", 3, \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"role\", \"checkbox\", 3, \"ngClass\"], [\"box\", \"\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"]],\n  template: function TableCheckbox_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function TableCheckbox_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"input\", 2);\n      i0.ɵɵlistener(\"focus\", function TableCheckbox_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function TableCheckbox_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵelement(5, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"required\", ctx.required)(\"aria-label\", ctx.ariaLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c19, ctx.checked, ctx.disabled));\n      i0.ɵɵattribute(\"aria-checked\", ctx.checked);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c20, ctx.checked));\n    }\n  },\n  directives: [i4.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'p-tableCheckbox',\n      template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"disabled\"\n                [attr.required]=\"required\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box p-component':true,\n                'p-highlight':checked, 'p-disabled':disabled}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    boxViewChild: [{\n      type: ViewChild,\n      args: ['box']\n    }]\n  });\n})();\n\nclass TableHeaderCheckbox {\n  constructor(dt, tableService, cd) {\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.valueChangeSubscription = this.dt.tableService.valueSource$.subscribe(() => {\n      this.checked = this.updateCheckedState();\n    });\n    this.selectionChangeSubscription = this.dt.tableService.selectionSource$.subscribe(() => {\n      this.checked = this.updateCheckedState();\n    });\n  }\n\n  ngOnInit() {\n    this.checked = this.updateCheckedState();\n  }\n\n  onClick(event) {\n    if (!this.disabled) {\n      if (this.dt.value && this.dt.value.length > 0) {\n        this.dt.toggleRowsWithCheckbox(event, !this.checked);\n      }\n    }\n\n    DomHandler.clearSelection();\n  }\n\n  onFocus() {\n    DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n  }\n\n  onBlur() {\n    DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n  }\n\n  isDisabled() {\n    return this.disabled || !this.dt.value || !this.dt.value.length;\n  }\n\n  ngOnDestroy() {\n    if (this.selectionChangeSubscription) {\n      this.selectionChangeSubscription.unsubscribe();\n    }\n\n    if (this.valueChangeSubscription) {\n      this.valueChangeSubscription.unsubscribe();\n    }\n  }\n\n  updateCheckedState() {\n    this.cd.markForCheck();\n\n    if (this.dt.filteredValue && !this.dt.lazy) {\n      const val = this.dt.filteredValue;\n      return val && val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.isAllFilteredValuesChecked();\n    } else {\n      const val = this.dt.value;\n      const length = this.dt.lazy ? this.dt._totalRecords : val ? val.length : 0;\n      return val && length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.dt.selection.length === length;\n    }\n  }\n\n  isAllFilteredValuesChecked() {\n    if (!this.dt.filteredValue) {\n      return false;\n    } else {\n      for (let rowData of this.dt.filteredValue) {\n        if (!this.dt.isSelected(rowData)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n}\n\nTableHeaderCheckbox.ɵfac = function TableHeaderCheckbox_Factory(t) {\n  return new (t || TableHeaderCheckbox)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(TableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nTableHeaderCheckbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TableHeaderCheckbox,\n  selectors: [[\"p-tableHeaderCheckbox\"]],\n  viewQuery: function TableHeaderCheckbox_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c17, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.boxViewChild = _t.first);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    inputId: \"inputId\",\n    name: \"name\",\n    ariaLabel: \"ariaLabel\"\n  },\n  decls: 7,\n  vars: 13,\n  consts: [[1, \"p-checkbox\", \"p-component\", 3, \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"cb\", \"\"], [\"role\", \"checkbox\", 3, \"ngClass\"], [\"box\", \"\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"]],\n  template: function TableHeaderCheckbox_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function TableHeaderCheckbox_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"input\", 2, 3);\n      i0.ɵɵlistener(\"focus\", function TableHeaderCheckbox_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function TableHeaderCheckbox_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4, 5);\n      i0.ɵɵelement(6, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.isDisabled());\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(8, _c21, ctx.checked, ctx.isDisabled()));\n      i0.ɵɵattribute(\"aria-checked\", ctx.checked);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c20, ctx.checked));\n    }\n  },\n  directives: [i4.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableHeaderCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'p-tableHeaderCheckbox',\n      template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"isDisabled()\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box':true,\n                'p-highlight':checked, 'p-disabled': isDisabled()}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    boxViewChild: [{\n      type: ViewChild,\n      args: ['box']\n    }],\n    disabled: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ReorderableRowHandle {\n  constructor(el) {\n    this.el = el;\n  }\n\n  ngAfterViewInit() {\n    DomHandler.addClass(this.el.nativeElement, 'p-datatable-reorderablerow-handle');\n  }\n\n}\n\nReorderableRowHandle.ɵfac = function ReorderableRowHandle_Factory(t) {\n  return new (t || ReorderableRowHandle)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nReorderableRowHandle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ReorderableRowHandle,\n  selectors: [[\"\", \"pReorderableRowHandle\", \"\"]],\n  inputs: {\n    index: [\"pReorderableRowHandle\", \"index\"]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReorderableRowHandle, [{\n    type: Directive,\n    args: [{\n      selector: '[pReorderableRowHandle]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    index: [{\n      type: Input,\n      args: [\"pReorderableRowHandle\"]\n    }]\n  });\n})();\n\nclass ReorderableRow {\n  constructor(dt, el, zone) {\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      this.el.nativeElement.droppable = true;\n      this.bindEvents();\n    }\n  }\n\n  bindEvents() {\n    this.zone.runOutsideAngular(() => {\n      this.mouseDownListener = this.onMouseDown.bind(this);\n      this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n      this.dragStartListener = this.onDragStart.bind(this);\n      this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n      this.dragEndListener = this.onDragEnd.bind(this);\n      this.el.nativeElement.addEventListener('dragend', this.dragEndListener);\n      this.dragOverListener = this.onDragOver.bind(this);\n      this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n      this.dragLeaveListener = this.onDragLeave.bind(this);\n      this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n    });\n  }\n\n  unbindEvents() {\n    if (this.mouseDownListener) {\n      document.removeEventListener('mousedown', this.mouseDownListener);\n      this.mouseDownListener = null;\n    }\n\n    if (this.dragStartListener) {\n      document.removeEventListener('dragstart', this.dragStartListener);\n      this.dragStartListener = null;\n    }\n\n    if (this.dragEndListener) {\n      document.removeEventListener('dragend', this.dragEndListener);\n      this.dragEndListener = null;\n    }\n\n    if (this.dragOverListener) {\n      document.removeEventListener('dragover', this.dragOverListener);\n      this.dragOverListener = null;\n    }\n\n    if (this.dragLeaveListener) {\n      document.removeEventListener('dragleave', this.dragLeaveListener);\n      this.dragLeaveListener = null;\n    }\n  }\n\n  onMouseDown(event) {\n    if (DomHandler.hasClass(event.target, 'p-datatable-reorderablerow-handle')) this.el.nativeElement.draggable = true;else this.el.nativeElement.draggable = false;\n  }\n\n  onDragStart(event) {\n    this.dt.onRowDragStart(event, this.index);\n  }\n\n  onDragEnd(event) {\n    this.dt.onRowDragEnd(event);\n    this.el.nativeElement.draggable = false;\n  }\n\n  onDragOver(event) {\n    this.dt.onRowDragOver(event, this.index, this.el.nativeElement);\n    event.preventDefault();\n  }\n\n  onDragLeave(event) {\n    this.dt.onRowDragLeave(event, this.el.nativeElement);\n  }\n\n  isEnabled() {\n    return this.pReorderableRowDisabled !== true;\n  }\n\n  onDrop(event) {\n    if (this.isEnabled() && this.dt.rowDragging) {\n      this.dt.onRowDrop(event, this.el.nativeElement);\n    }\n\n    event.preventDefault();\n  }\n\n}\n\nReorderableRow.ɵfac = function ReorderableRow_Factory(t) {\n  return new (t || ReorderableRow)(i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nReorderableRow.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ReorderableRow,\n  selectors: [[\"\", \"pReorderableRow\", \"\"]],\n  hostBindings: function ReorderableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"drop\", function ReorderableRow_drop_HostBindingHandler($event) {\n        return ctx.onDrop($event);\n      });\n    }\n  },\n  inputs: {\n    index: [\"pReorderableRow\", \"index\"],\n    pReorderableRowDisabled: \"pReorderableRowDisabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReorderableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pReorderableRow]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    index: [{\n      type: Input,\n      args: [\"pReorderableRow\"]\n    }],\n    pReorderableRowDisabled: [{\n      type: Input\n    }],\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }]\n  });\n})();\n\nclass ColumnFilterFormElement {\n  constructor(dt) {\n    this.dt = dt;\n    this.useGrouping = true;\n  }\n\n  ngOnInit() {\n    this.filterCallback = value => {\n      this.filterConstraint.value = value;\n\n      this.dt._filter();\n    };\n  }\n\n  onModelChange(value) {\n    this.filterConstraint.value = value;\n\n    if (this.type === 'boolean' || value === '') {\n      this.dt._filter();\n    }\n  }\n\n  onTextInputEnterKeyDown(event) {\n    this.dt._filter();\n\n    event.preventDefault();\n  }\n\n  onNumericInputKeyDown(event) {\n    if (event.key === 'Enter') {\n      this.dt._filter();\n\n      event.preventDefault();\n    }\n  }\n\n}\n\nColumnFilterFormElement.ɵfac = function ColumnFilterFormElement_Factory(t) {\n  return new (t || ColumnFilterFormElement)(i0.ɵɵdirectiveInject(Table));\n};\n\nColumnFilterFormElement.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnFilterFormElement,\n  selectors: [[\"p-columnFilterFormElement\"]],\n  inputs: {\n    field: \"field\",\n    type: \"type\",\n    filterConstraint: \"filterConstraint\",\n    filterTemplate: \"filterTemplate\",\n    placeholder: \"placeholder\",\n    minFractionDigits: \"minFractionDigits\",\n    maxFractionDigits: \"maxFractionDigits\",\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n    locale: \"locale\",\n    localeMatcher: \"localeMatcher\",\n    currency: \"currency\",\n    currencyDisplay: \"currencyDisplay\",\n    useGrouping: \"useGrouping\"\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"builtInElement\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [\"type\", \"text\", \"pInputText\", \"\", 3, \"value\", \"input\", \"keydown.enter\", 4, \"ngSwitchCase\"], [3, \"ngModel\", \"showButtons\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"placeholder\", \"mode\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\", \"ngModelChange\", \"onKeyDown\", 4, \"ngSwitchCase\"], [3, \"ngModel\", \"ngModelChange\", 4, \"ngSwitchCase\"], [\"type\", \"text\", \"pInputText\", \"\", 3, \"value\", \"input\", \"keydown.enter\"], [3, \"ngModel\", \"showButtons\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"placeholder\", \"mode\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\", \"ngModelChange\", \"onKeyDown\"], [3, \"ngModel\", \"ngModelChange\"]],\n  template: function ColumnFilterFormElement_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ColumnFilterFormElement_ng_container_0_Template, 2, 5, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, ColumnFilterFormElement_ng_template_1_Template, 5, 5, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.filterTemplate)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i4.NgIf, i4.NgTemplateOutlet, i4.NgSwitch, i4.NgSwitchCase, i8.InputText, i5.InputNumber, i9.NgControlStatus, i9.NgModel, i6.TriStateCheckbox, i7.Calendar],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilterFormElement, [{\n    type: Component,\n    args: [{\n      selector: 'p-columnFilterFormElement',\n      template: `\n        <ng-container *ngIf=\"filterTemplate; else builtInElement\">\n            <ng-container *ngTemplateOutlet=\"filterTemplate; context: {$implicit: filterConstraint.value, filterCallback: filterCallback}\"></ng-container>\n        </ng-container>\n        <ng-template #builtInElement>\n            <ng-container [ngSwitch]=\"type\">\n                <input *ngSwitchCase=\"'text'\" type=\"text\" pInputText [value]=\"filterConstraint?.value\" (input)=\"onModelChange($event.target.value)\"\n                    (keydown.enter)=\"onTextInputEnterKeyDown($event)\" [attr.placeholder]=\"placeholder\">\n                <p-inputNumber *ngSwitchCase=\"'numeric'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\" (onKeyDown)=\"onNumericInputKeyDown($event)\" [showButtons]=\"true\" [attr.placeholder]=\"placeholder\"\n                    [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\" [placeholder]=\"placeholder\"\n                    [mode]=\"currency ? 'currency' : 'decimal'\" [locale]=\"locale\" [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-inputNumber>\n                <p-triStateCheckbox *ngSwitchCase=\"'boolean'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-triStateCheckbox>\n                <p-calendar *ngSwitchCase=\"'date'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-calendar>\n            </ng-container>\n        </ng-template>\n    `,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }];\n  }, {\n    field: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    filterConstraint: [{\n      type: Input\n    }],\n    filterTemplate: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    minFractionDigits: [{\n      type: Input\n    }],\n    maxFractionDigits: [{\n      type: Input\n    }],\n    prefix: [{\n      type: Input\n    }],\n    suffix: [{\n      type: Input\n    }],\n    locale: [{\n      type: Input\n    }],\n    localeMatcher: [{\n      type: Input\n    }],\n    currency: [{\n      type: Input\n    }],\n    currencyDisplay: [{\n      type: Input\n    }],\n    useGrouping: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ColumnFilter {\n  constructor(el, dt, renderer, config, overlayService) {\n    this.el = el;\n    this.dt = dt;\n    this.renderer = renderer;\n    this.config = config;\n    this.overlayService = overlayService;\n    this.type = 'text';\n    this.display = 'row';\n    this.showMenu = true;\n    this.operator = FilterOperator.AND;\n    this.showOperator = true;\n    this.showClearButton = true;\n    this.showApplyButton = true;\n    this.showMatchModes = true;\n    this.showAddButton = true;\n    this.hideOnClear = false;\n    this.maxConstraints = 2;\n    this.useGrouping = true;\n  }\n\n  ngOnInit() {\n    if (!this.dt.filters[this.field]) {\n      this.initFieldFilterConstraint();\n    }\n\n    this.translationSubscription = this.config.translationObserver.subscribe(() => {\n      this.generateMatchModeOptions();\n      this.generateOperatorOptions();\n    });\n    this.resetSubscription = this.dt.tableService.resetSource$.subscribe(() => {\n      this.clearFilter();\n    });\n    this.generateMatchModeOptions();\n    this.generateOperatorOptions();\n  }\n\n  generateMatchModeOptions() {\n    var _a;\n\n    this.matchModes = this.matchModeOptions || ((_a = this.config.filterMatchModeOptions[this.type]) === null || _a === void 0 ? void 0 : _a.map(key => {\n      return {\n        label: this.config.getTranslation(key),\n        value: key\n      };\n    }));\n  }\n\n  generateOperatorOptions() {\n    this.operatorOptions = [{\n      label: this.config.getTranslation(TranslationKeys.MATCH_ALL),\n      value: FilterOperator.AND\n    }, {\n      label: this.config.getTranslation(TranslationKeys.MATCH_ANY),\n      value: FilterOperator.OR\n    }];\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'filter':\n          this.filterTemplate = item.template;\n          break;\n\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n\n        default:\n          this.filterTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  initFieldFilterConstraint() {\n    let defaultMatchMode = this.getDefaultMatchMode();\n    this.dt.filters[this.field] = this.display == 'row' ? {\n      value: null,\n      matchMode: defaultMatchMode\n    } : [{\n      value: null,\n      matchMode: defaultMatchMode,\n      operator: this.operator\n    }];\n  }\n\n  onMenuMatchModeChange(value, filterMeta) {\n    filterMeta.matchMode = value;\n\n    if (!this.showApplyButton) {\n      this.dt._filter();\n    }\n  }\n\n  onRowMatchModeChange(matchMode) {\n    this.dt.filters[this.field].matchMode = matchMode;\n\n    this.dt._filter();\n\n    this.hide();\n  }\n\n  onRowMatchModeKeyDown(event) {\n    let item = event.target;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        var nextItem = this.findNextItem(item);\n\n        if (nextItem) {\n          item.removeAttribute('tabindex');\n          nextItem.tabIndex = '0';\n          nextItem.focus();\n        }\n\n        event.preventDefault();\n        break;\n\n      case 'ArrowUp':\n        var prevItem = this.findPrevItem(item);\n\n        if (prevItem) {\n          item.removeAttribute('tabindex');\n          prevItem.tabIndex = '0';\n          prevItem.focus();\n        }\n\n        event.preventDefault();\n        break;\n    }\n  }\n\n  onRowClearItemClick() {\n    this.clearFilter();\n    this.hide();\n  }\n\n  isRowMatchModeSelected(matchMode) {\n    return this.dt.filters[this.field].matchMode === matchMode;\n  }\n\n  addConstraint() {\n    this.dt.filters[this.field].push({\n      value: null,\n      matchMode: this.getDefaultMatchMode(),\n      operator: this.getDefaultOperator()\n    });\n\n    this.dt._filter();\n  }\n\n  removeConstraint(filterMeta) {\n    this.dt.filters[this.field] = this.dt.filters[this.field].filter(meta => meta !== filterMeta);\n\n    this.dt._filter();\n  }\n\n  onOperatorChange(value) {\n    this.dt.filters[this.field].forEach(filterMeta => {\n      filterMeta.operator = value;\n      this.operator = value;\n    });\n\n    if (!this.showApplyButton) {\n      this.dt._filter();\n    }\n  }\n\n  toggleMenu() {\n    this.overlayVisible = !this.overlayVisible;\n  }\n\n  onToggleButtonKeyDown(event) {\n    switch (event.key) {\n      case 'Escape':\n      case 'Tab':\n        this.overlayVisible = false;\n        break;\n\n      case 'ArrowDown':\n        if (this.overlayVisible) {\n          let focusable = DomHandler.getFocusableElements(this.overlay);\n\n          if (focusable) {\n            focusable[0].focus();\n          }\n\n          event.preventDefault();\n        } else if (event.altKey) {\n          this.overlayVisible = true;\n          event.preventDefault();\n        }\n\n        break;\n    }\n  }\n\n  onEscape() {\n    this.overlayVisible = false;\n    this.icon.nativeElement.focus();\n  }\n\n  findNextItem(item) {\n    let nextItem = item.nextElementSibling;\n    if (nextItem) return DomHandler.hasClass(nextItem, 'p-column-filter-separator') ? this.findNextItem(nextItem) : nextItem;else return item.parentElement.firstElementChild;\n  }\n\n  findPrevItem(item) {\n    let prevItem = item.previousElementSibling;\n    if (prevItem) return DomHandler.hasClass(prevItem, 'p-column-filter-separator') ? this.findPrevItem(prevItem) : prevItem;else return item.parentElement.lastElementChild;\n  }\n\n  onContentClick() {\n    this.selfClick = true;\n  }\n\n  onOverlayAnimationStart(event) {\n    switch (event.toState) {\n      case 'visible':\n        this.overlay = event.element;\n        document.body.appendChild(this.overlay);\n        ZIndexUtils.set('overlay', this.overlay, this.config.zIndex.overlay);\n        DomHandler.absolutePosition(this.overlay, this.icon.nativeElement);\n        this.bindDocumentClickListener();\n        this.bindDocumentResizeListener();\n        this.bindScrollListener();\n\n        this.overlayEventListener = e => {\n          if (this.overlay && this.overlay.contains(e.target)) {\n            this.selfClick = true;\n          }\n        };\n\n        this.overlaySubscription = this.overlayService.clickObservable.subscribe(this.overlayEventListener);\n        break;\n\n      case 'void':\n        this.onOverlayHide();\n\n        if (this.overlaySubscription) {\n          this.overlaySubscription.unsubscribe();\n        }\n\n        break;\n    }\n  }\n\n  onOverlayAnimationEnd(event) {\n    switch (event.toState) {\n      case 'void':\n        ZIndexUtils.clear(event.element);\n        break;\n    }\n  }\n\n  getDefaultMatchMode() {\n    if (this.matchMode) {\n      return this.matchMode;\n    } else {\n      if (this.type === 'text') return FilterMatchMode.STARTS_WITH;else if (this.type === 'numeric') return FilterMatchMode.EQUALS;else if (this.type === 'date') return FilterMatchMode.DATE_IS;else return FilterMatchMode.CONTAINS;\n    }\n  }\n\n  getDefaultOperator() {\n    return this.dt.filters ? this.dt.filters[this.field][0].operator : this.operator;\n  }\n\n  hasRowFilter() {\n    return this.dt.filters[this.field] && !this.dt.isFilterBlank(this.dt.filters[this.field].value);\n  }\n\n  get fieldConstraints() {\n    return this.dt.filters ? this.dt.filters[this.field] : null;\n  }\n\n  get showRemoveIcon() {\n    return this.fieldConstraints ? this.fieldConstraints.length > 1 : false;\n  }\n\n  get showMenuButton() {\n    return this.showMenu && (this.display === 'row' ? this.type !== 'boolean' : true);\n  }\n\n  get isShowOperator() {\n    return this.showOperator && this.type !== 'boolean';\n  }\n\n  get isShowAddConstraint() {\n    return this.showAddButton && this.type !== 'boolean' && this.fieldConstraints && this.fieldConstraints.length < this.maxConstraints;\n  }\n\n  get applyButtonLabel() {\n    return this.config.getTranslation(TranslationKeys.APPLY);\n  }\n\n  get clearButtonLabel() {\n    return this.config.getTranslation(TranslationKeys.CLEAR);\n  }\n\n  get addRuleButtonLabel() {\n    return this.config.getTranslation(TranslationKeys.ADD_RULE);\n  }\n\n  get removeRuleButtonLabel() {\n    return this.config.getTranslation(TranslationKeys.REMOVE_RULE);\n  }\n\n  get noFilterLabel() {\n    return this.config.getTranslation(TranslationKeys.NO_FILTER);\n  }\n\n  hasFilter() {\n    let fieldFilter = this.dt.filters[this.field];\n\n    if (fieldFilter) {\n      if (Array.isArray(fieldFilter)) return !this.dt.isFilterBlank(fieldFilter[0].value);else return !this.dt.isFilterBlank(fieldFilter.value);\n    }\n\n    return false;\n  }\n\n  isOutsideClicked(event) {\n    return !(this.overlay.isSameNode(event.target) || this.overlay.contains(event.target) || this.icon.nativeElement.isSameNode(event.target) || this.icon.nativeElement.contains(event.target) || DomHandler.hasClass(event.target, 'p-column-filter-add-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-add-button') || DomHandler.hasClass(event.target, 'p-column-filter-remove-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-remove-button'));\n  }\n\n  bindDocumentClickListener() {\n    if (!this.documentClickListener) {\n      const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n      this.documentClickListener = this.renderer.listen(documentTarget, 'mousedown', event => {\n        if (this.overlayVisible && !this.selfClick && this.isOutsideClicked(event)) {\n          this.hide();\n        }\n\n        this.selfClick = false;\n      });\n    }\n  }\n\n  unbindDocumentClickListener() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n      this.documentClickListener = null;\n      this.selfClick = false;\n    }\n  }\n\n  bindDocumentResizeListener() {\n    this.documentResizeListener = () => this.hide();\n\n    window.addEventListener('resize', this.documentResizeListener);\n  }\n\n  unbindDocumentResizeListener() {\n    if (this.documentResizeListener) {\n      window.removeEventListener('resize', this.documentResizeListener);\n      this.documentResizeListener = null;\n    }\n  }\n\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.icon.nativeElement, () => {\n        if (this.overlayVisible) {\n          this.hide();\n        }\n      });\n    }\n\n    this.scrollHandler.bindScrollListener();\n  }\n\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n\n  hide() {\n    this.overlayVisible = false;\n  }\n\n  onOverlayHide() {\n    this.unbindDocumentClickListener();\n    this.unbindDocumentResizeListener();\n    this.unbindScrollListener();\n    this.overlay = null;\n  }\n\n  clearFilter() {\n    this.initFieldFilterConstraint();\n\n    this.dt._filter();\n\n    if (this.hideOnClear) this.hide();\n  }\n\n  applyFilter() {\n    this.dt._filter();\n\n    this.hide();\n  }\n\n  ngOnDestroy() {\n    if (this.overlay) {\n      this.el.nativeElement.appendChild(this.overlay);\n      ZIndexUtils.clear(this.overlay);\n      this.onOverlayHide();\n    }\n\n    if (this.translationSubscription) {\n      this.translationSubscription.unsubscribe();\n    }\n\n    if (this.resetSubscription) {\n      this.resetSubscription.unsubscribe();\n    }\n\n    if (this.overlaySubscription) {\n      this.overlaySubscription.unsubscribe();\n    }\n  }\n\n}\n\nColumnFilter.ɵfac = function ColumnFilter_Factory(t) {\n  return new (t || ColumnFilter)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(Table), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.PrimeNGConfig), i0.ɵɵdirectiveInject(i1.OverlayService));\n};\n\nColumnFilter.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnFilter,\n  selectors: [[\"p-columnFilter\"]],\n  contentQueries: function ColumnFilter_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function ColumnFilter_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c23, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.icon = _t.first);\n    }\n  },\n  inputs: {\n    field: \"field\",\n    type: \"type\",\n    display: \"display\",\n    showMenu: \"showMenu\",\n    matchMode: \"matchMode\",\n    operator: \"operator\",\n    showOperator: \"showOperator\",\n    showClearButton: \"showClearButton\",\n    showApplyButton: \"showApplyButton\",\n    showMatchModes: \"showMatchModes\",\n    showAddButton: \"showAddButton\",\n    hideOnClear: \"hideOnClear\",\n    placeholder: \"placeholder\",\n    matchModeOptions: \"matchModeOptions\",\n    maxConstraints: \"maxConstraints\",\n    minFractionDigits: \"minFractionDigits\",\n    maxFractionDigits: \"maxFractionDigits\",\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n    locale: \"locale\",\n    localeMatcher: \"localeMatcher\",\n    currency: \"currency\",\n    currencyDisplay: \"currencyDisplay\",\n    useGrouping: \"useGrouping\"\n  },\n  decls: 5,\n  vars: 8,\n  consts: [[1, \"p-column-filter\", 3, \"ngClass\"], [\"class\", \"p-fluid\", 3, \"type\", \"field\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"p-column-filter-menu-button p-link\", \"aria-haspopup\", \"true\", 3, \"ngClass\", \"click\", \"keydown\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"p-column-filter-clear-button p-link\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"click\", \"keydown.escape\", 4, \"ngIf\"], [1, \"p-fluid\", 3, \"type\", \"field\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\"], [\"type\", \"button\", \"aria-haspopup\", \"true\", 1, \"p-column-filter-menu-button\", \"p-link\", 3, \"ngClass\", \"click\", \"keydown\"], [\"icon\", \"\"], [1, \"pi\", \"pi-filter-icon\", \"pi-filter\"], [\"type\", \"button\", 1, \"p-column-filter-clear-button\", \"p-link\", 3, \"ngClass\", \"click\"], [1, \"pi\", \"pi-filter-slash\"], [3, \"ngClass\", \"click\", \"keydown.escape\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"p-column-filter-row-items\", 4, \"ngIf\", \"ngIfElse\"], [\"menu\", \"\"], [1, \"p-column-filter-row-items\"], [\"class\", \"p-column-filter-row-item\", 3, \"ngClass\", \"click\", \"keydown\", \"keydown.enter\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-column-filter-separator\"], [1, \"p-column-filter-row-item\", 3, \"click\", \"keydown\", \"keydown.enter\"], [1, \"p-column-filter-row-item\", 3, \"ngClass\", \"click\", \"keydown\", \"keydown.enter\"], [\"class\", \"p-column-filter-operator\", 4, \"ngIf\"], [1, \"p-column-filter-constraints\"], [\"class\", \"p-column-filter-constraint\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"p-column-filter-add-rule\", 4, \"ngIf\"], [1, \"p-column-filter-buttonbar\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-button-outlined\", \"pRipple\", \"\", 3, \"label\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 3, \"label\", \"click\", 4, \"ngIf\"], [1, \"p-column-filter-operator\"], [\"styleClass\", \"p-column-filter-operator-dropdown\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [1, \"p-column-filter-constraint\"], [\"styleClass\", \"p-column-filter-matchmode-dropdown\", 3, \"options\", \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [3, \"type\", \"field\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-trash\", \"class\", \"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\", \"pRipple\", \"\", 3, \"label\", \"click\", 4, \"ngIf\"], [\"styleClass\", \"p-column-filter-matchmode-dropdown\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-trash\", \"pRipple\", \"\", 1, \"p-column-filter-remove-button\", \"p-button-text\", \"p-button-danger\", \"p-button-sm\", 3, \"label\", \"click\"], [1, \"p-column-filter-add-rule\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-plus\", \"pRipple\", \"\", 1, \"p-column-filter-add-button\", \"p-button-text\", \"p-button-sm\", 3, \"label\", \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-button-outlined\", 3, \"label\", \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 3, \"label\", \"click\"]],\n  template: function ColumnFilter_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ColumnFilter_p_columnFilterFormElement_1_Template, 1, 14, \"p-columnFilterFormElement\", 1);\n      i0.ɵɵtemplate(2, ColumnFilter_button_2_Template, 3, 5, \"button\", 2);\n      i0.ɵɵtemplate(3, ColumnFilter_button_3_Template, 3, 3, \"button\", 3);\n      i0.ɵɵtemplate(4, ColumnFilter_div_4_Template, 6, 14, \"div\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c28, ctx.display === \"row\", ctx.display === \"menu\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.display === \"row\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMenuButton);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMenuButton && ctx.display === \"row\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMenu && ctx.overlayVisible);\n    }\n  },\n  directives: [i4.NgClass, i4.NgIf, ColumnFilterFormElement, i4.NgTemplateOutlet, i4.NgForOf, i10.Dropdown, i9.NgControlStatus, i9.NgModel, i11.ButtonDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('overlayAnimation', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scaleY(0.8)'\n    }), animate('.12s cubic-bezier(0, 0, 0.2, 1)')]), transition(':leave', [animate('.1s linear', style({\n      opacity: 0\n    }))])])]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnFilter, [{\n    type: Component,\n    args: [{\n      selector: 'p-columnFilter',\n      template: `\n        <div class=\"p-column-filter\" [ngClass]=\"{'p-column-filter-row': display === 'row', 'p-column-filter-menu': display === 'menu'}\">\n            <p-columnFilterFormElement *ngIf=\"display === 'row'\" class=\"p-fluid\" [type]=\"type\" [field]=\"field\" [filterConstraint]=\"dt.filters[field]\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\" [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                                    [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n            <button #icon *ngIf=\"showMenuButton\" type=\"button\" class=\"p-column-filter-menu-button p-link\" aria-haspopup=\"true\" [attr.aria-expanded]=\"overlayVisible\"\n                [ngClass]=\"{'p-column-filter-menu-button-open': overlayVisible, 'p-column-filter-menu-button-active': hasFilter()}\"\n                (click)=\"toggleMenu()\" (keydown)=\"onToggleButtonKeyDown($event)\"><span class=\"pi pi-filter-icon pi-filter\"></span></button>\n            <button #icon *ngIf=\"showMenuButton && display === 'row'\" [ngClass]=\"{'p-hidden-space': !hasRowFilter()}\" type=\"button\" class=\"p-column-filter-clear-button p-link\" (click)=\"clearFilter()\"><span class=\"pi pi-filter-slash\"></span></button>\n            <div *ngIf=\"showMenu && overlayVisible\" [ngClass]=\"{'p-column-filter-overlay p-component p-fluid': true, 'p-column-filter-overlay-menu': display === 'menu'}\" (click)=\"onContentClick()\"\n                [@overlayAnimation]=\"'visible'\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\" (keydown.escape)=\"onEscape()\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: field}\"></ng-container>\n                <ul *ngIf=\"display === 'row'; else menu\" class=\"p-column-filter-row-items\">\n                    <li class=\"p-column-filter-row-item\" *ngFor=\"let matchMode of matchModes; let i = index;\" (click)=\"onRowMatchModeChange(matchMode.value)\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"this.onRowMatchModeChange(matchMode.value)\"\n                        [ngClass]=\"{'p-highlight': isRowMatchModeSelected(matchMode.value)}\" [attr.tabindex]=\"i === 0 ? '0' : null\">{{matchMode.label}}</li>\n                    <li class=\"p-column-filter-separator\"></li>\n                    <li class=\"p-column-filter-row-item\" (click)=\"onRowClearItemClick()\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"onRowClearItemClick()\">{{noFilterLabel}}</li>\n                </ul>\n                <ng-template #menu>\n                    <div class=\"p-column-filter-operator\" *ngIf=\"isShowOperator\">\n                        <p-dropdown [options]=\"operatorOptions\" [ngModel]=\"operator\" (ngModelChange)=\"onOperatorChange($event)\" styleClass=\"p-column-filter-operator-dropdown\"></p-dropdown>\n                    </div>\n                    <div class=\"p-column-filter-constraints\">\n                        <div *ngFor=\"let fieldConstraint of fieldConstraints; let i = index\" class=\"p-column-filter-constraint\">\n                            <p-dropdown  *ngIf=\"showMatchModes && matchModes\" [options]=\"matchModes\" [ngModel]=\"fieldConstraint.matchMode\" (ngModelChange)=\"onMenuMatchModeChange($event, fieldConstraint)\" styleClass=\"p-column-filter-matchmode-dropdown\"></p-dropdown>\n                            <p-columnFilterFormElement [type]=\"type\" [field]=\"field\" [filterConstraint]=\"fieldConstraint\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\"\n                            [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                            [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n                            <div>\n                                <button *ngIf=\"showRemoveIcon\" type=\"button\" pButton icon=\"pi pi-trash\" class=\"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\" (click)=\"removeConstraint(fieldConstraint)\" pRipple [label]=\"removeRuleButtonLabel\"></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"p-column-filter-add-rule\" *ngIf=\"isShowAddConstraint\">\n                        <button type=\"button\" pButton [label]=\"addRuleButtonLabel\" icon=\"pi pi-plus\" class=\"p-column-filter-add-button p-button-text p-button-sm\" (click)=\"addConstraint()\" pRipple></button>\n                    </div>\n                    <div class=\"p-column-filter-buttonbar\">\n                        <button *ngIf=\"showClearButton\" type=\"button\" pButton class=\"p-button-outlined\" (click)=\"clearFilter()\" [label]=\"clearButtonLabel\" pRipple></button>\n                        <button *ngIf=\"showApplyButton\" type=\"button\" pButton (click)=\"applyFilter()\" [label]=\"applyButtonLabel\" pRipple></button>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate; context: {$implicit: field}\"></ng-container>\n            </div>\n        </div>\n    `,\n      animations: [trigger('overlayAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('.12s cubic-bezier(0, 0, 0.2, 1)')]), transition(':leave', [animate('.1s linear', style({\n        opacity: 0\n      }))])])],\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: Table\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.PrimeNGConfig\n    }, {\n      type: i1.OverlayService\n    }];\n  }, {\n    field: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    display: [{\n      type: Input\n    }],\n    showMenu: [{\n      type: Input\n    }],\n    matchMode: [{\n      type: Input\n    }],\n    operator: [{\n      type: Input\n    }],\n    showOperator: [{\n      type: Input\n    }],\n    showClearButton: [{\n      type: Input\n    }],\n    showApplyButton: [{\n      type: Input\n    }],\n    showMatchModes: [{\n      type: Input\n    }],\n    showAddButton: [{\n      type: Input\n    }],\n    hideOnClear: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    matchModeOptions: [{\n      type: Input\n    }],\n    maxConstraints: [{\n      type: Input\n    }],\n    minFractionDigits: [{\n      type: Input\n    }],\n    maxFractionDigits: [{\n      type: Input\n    }],\n    prefix: [{\n      type: Input\n    }],\n    suffix: [{\n      type: Input\n    }],\n    locale: [{\n      type: Input\n    }],\n    localeMatcher: [{\n      type: Input\n    }],\n    currency: [{\n      type: Input\n    }],\n    currencyDisplay: [{\n      type: Input\n    }],\n    useGrouping: [{\n      type: Input\n    }],\n    icon: [{\n      type: ViewChild,\n      args: ['icon']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nclass TableModule {}\n\nTableModule.ɵfac = function TableModule_Factory(t) {\n  return new (t || TableModule)();\n};\n\nTableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TableModule\n});\nTableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule], SharedModule, ScrollingModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule],\n      exports: [Table, SharedModule, SortableColumn, FrozenColumn, RowGroupHeader, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ScrollingModule, ColumnFilter],\n      declarations: [Table, SortableColumn, FrozenColumn, RowGroupHeader, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ColumnFilter, ColumnFilterFormElement]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CancelEditableRow, CellEditor, ColumnFilter, ColumnFilterFormElement, ContextMenuRow, EditableColumn, EditableRow, FrozenColumn, InitEditableRow, ReorderableColumn, ReorderableRow, ReorderableRowHandle, ResizableColumn, RowGroupHeader, RowToggler, SaveEditableRow, SelectableRow, SelectableRowDblClick, SortIcon, SortableColumn, Table, TableBody, TableCheckbox, TableHeaderCheckbox, TableModule, TableRadioButton, TableService }; //# sourceMappingURL=primeng-table.js.map","map":{"version":3,"sources":["D:/TEKCLOVER GIT MAIN/root/IWB2B/MVP/Code/Associate-MVP/node_modules/primeng/fesm2015/primeng-table.js"],"names":["i0","Injectable","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ViewChild","ContentChildren","Directive","HostListener","Optional","NgModule","i4","CommonModule","i9","FormsModule","i1","FilterOperator","FilterMatchMode","PrimeTemplate","TranslationKeys","SharedModule","i2","PaginatorModule","i8","InputTextModule","i11","ButtonModule","SelectButtonModule","i6","TriStateCheckboxModule","i7","CalendarModule","i5","InputNumberModule","i10","DropdownModule","DomHandler","ConnectedOverlayScrollHandler","UniqueComponentId","ObjectUtils","ZIndexUtils","Subject","i3","CdkVirtualScrollViewport","ScrollingModule","trigger","transition","style","animate","TableService","constructor","sortSource","selectionSource","contextMenuSource","valueSource","totalRecordsSource","columnsSource","resetSource","sortSource$","asObservable","selectionSource$","contextMenuSource$","valueSource$","totalRecordsSource$","columnsSource$","resetSource$","onSort","sortMeta","next","onSelectionChange","onResetChange","onContextMenu","data","onValueChange","value","onTotalRecordsChange","onColumnsChange","columns","ɵfac","ɵprov","type","Table","el","zone","tableService","cd","filterService","overlayService","pageLinks","alwaysShowPaginator","paginatorPosition","paginatorDropdownScrollHeight","currentPageReportTemplate","showFirstLastIcon","showPageLinks","defaultSortOrder","sortMode","resetPageOnSort","selectionChange","contextMenuSelectionChange","contextMenuSelectionMode","rowTrackBy","index","item","lazy","lazyLoadOnInit","compareSelectionBy","csvSeparator","exportFilename","filters","filterDelay","expandedRowKeys","editingRowKeys","rowExpandMode","scrollDirection","virtualScrollDelay","virtualRowHeight","columnResizeMode","loadingIcon","showLoader","showInitialSortBadge","stateStorage","editMode","responsiveLayout","breakpoint","onRowSelect","onRowUnselect","onPage","onFilter","onLazyLoad","onRowExpand","onRowCollapse","onContextMenuSelect","onColResize","onColReorder","onRowReorder","onEditInit","onEditComplete","onEditCancel","onHeaderCheckboxToggle","sortFunction","firstChange","rowsChange","onStateSave","onStateRestore","_value","_totalRecords","_first","selectionKeys","_sortOrder","columnResizing","rowGroupHeaderStyleObject","id","ngOnInit","virtualScroll","emit","createLazyLoadMetadata","restoringFilter","scrollable","createResponsiveStyle","initialized","ngAfterContentInit","templates","forEach","getType","captionTemplate","template","headerTemplate","headerGroupedTemplate","bodyTemplate","loadingBodyTemplate","footerTemplate","footerGroupedTemplate","summaryTemplate","colGroupTemplate","expandedRowTemplate","groupHeaderTemplate","rowspanTemplate","groupFooterTemplate","frozenRowsTemplate","frozenHeaderTemplate","frozenBodyTemplate","frozenFooterTemplate","frozenColGroupTemplate","frozenExpandedRowTemplate","emptyMessageTemplate","paginatorLeftTemplate","paginatorRightTemplate","paginatorDropdownItemTemplate","ngAfterViewInit","isStateful","resizableColumns","restoreColumnWidths","rowGroupMode","updateScrollWidth","virtualScrollSubscription","virtualScrollBody","renderedRangeStream","subscribe","range","top","start","tableHeaderViewChild","nativeElement","ngOnChanges","simpleChange","stateRestored","restoreState","currentValue","totalRecords","length","sortField","sortSingle","multiSortMeta","sortMultiple","hasFilter","_filter","_columns","reorderableColumns","columnOrderStateRestored","restoreColumnOrder","_sortField","sortOrder","_multiSortMeta","selection","_selection","preventSelectionSetterPropagation","updateSelectionKeys","val","cols","first","rows","_rows","dataToRender","filteredValue","paginator","slice","dataKey","Array","isArray","String","resolveFieldData","onPageChange","event","saveState","anchorRowIndex","resetScrollTop","sort","originalEvent","field","metaKey","ctrlKey","getSortMeta","order","push","restoringSort","customSort","mode","data1","data2","value1","value2","result","localeCompare","multisortField","multisortmeta","i","isSorted","sorted","handleRowClick","target","targetNode","nodeName","parentNode","parentElement","hasClass","selectionMode","isMultipleSelectionMode","shiftKey","clearSelection","rangeRowIndex","clearSelectionRange","rowIndex","selectRange","rowData","selected","isSelected","metaSelection","rowTouched","metaKeySelection","dataKeyValue","isSingleSelectionMode","selectionIndex","findIndexInSelection","filter","handleRowTouchEnd","handleRowRightClick","contextMenu","contextMenuSelection","show","rangeStart","rangeEnd","rangeRowsData","rangeRowData","undefined","equals","toggleRowWithRadio","toggleRowWithCheckbox","toggleRowsWithCheckbox","check","checked","matchMode","filterTimeout","clearTimeout","isFilterBlank","setTimeout","filterGlobal","trim","globalFilterFieldsArray","globalFilterFields","Error","localMatch","globalMatch","localFiltered","prop","hasOwnProperty","filterField","filterMeta","meta","executeLocalFilter","operator","OR","AND","j","globalFilterField","filterLocale","matches","markForCheck","filterValue","filterMatchMode","STARTS_WITH","dataFieldValue","filterConstraint","empty","globalFilter","clear","reset","exportCSV","options","csv","frozenColumns","selectionOnly","frozenValue","column","exportable","header","record","cellData","exportFunction","replace","blob","Blob","window","navigator","msSaveOrOpenBlob","link","document","createElement","display","body","appendChild","download","setAttribute","URL","createObjectURL","click","open","encodeURI","removeChild","scrollToVirtualIndex","scrollTo","scrollToIndex","onScrollIndexChange","virtualScrollTimeout","page","Math","floor","virtualScrollOffset","virtualScrollChunkSize","virtualPage","wrapperViewChild","scrollLeft","left","scrollTop","updateEditingCell","cell","editingCell","editingCellData","editingCellField","editingCellRowIndex","bindDocumentEditListener","isEditingCellValid","find","documentEditListener","selfClick","removeClass","unbindDocumentEditListener","overlaySubscription","unsubscribe","addEventListener","removeEventListener","initRowEdit","saveRowEdit","rowElement","cancelRowEdit","toggleRow","preventDefault","isRowExpanded","isRowEditing","onColumnResizeBegin","containerLeft","getOffset","containerViewChild","resizeColumnElement","lastResizerHelperX","pageX","onColumnResize","addClass","resizeHelperViewChild","height","offsetHeight","onColumnResizeEnd","delta","offsetLeft","columnWidth","offsetWidth","newColumnWidth","minWidth","nextColumn","nextElementSibling","nextColumnWidth","width","resizeTableCells","tableWidth","tableViewChild","scrollbarWidth","calculateScrollbarWidth","isWrapperInViewport","element","colIndex","widths","headers","getOuterWidth","destroyStyleElement","createStyleElement","innerHTML","colWidth","styleElement","onColumnDragStart","columnElement","reorderIconWidth","getHiddenElementOuterWidth","reorderIndicatorUpViewChild","reorderIconHeight","getHiddenElementOuterHeight","reorderIndicatorDownViewChild","draggedColumn","dataTransfer","setData","onColumnDragEnter","dropHeader","containerOffset","dropHeaderOffset","dragIndex","indexWithinGroup","dropIndex","targetLeft","targetTop","columnCenter","ceil","dropPosition","dropEffect","onColumnDragLeave","onColumnDrop","dropColumn","allowDrop","reorderArray","runOutsideAngular","draggable","onRowDragStart","rowDragging","draggedRowIndex","onRowDragOver","rowY","getWindowScrollTop","pageY","rowMidY","getOuterHeight","prevRowElement","previousElementSibling","droppedRowIndex","onRowDragLeave","onRowDragEnd","onRowDrop","isEmpty","getBlockableElement","children","getStorage","localStorage","sessionStorage","stateKey","storage","state","saveColumnWidths","saveColumnOrder","Object","keys","setItem","JSON","stringify","clearState","removeItem","stateString","getItem","dateFormat","reviver","key","test","Date","parse","columnWidthsState","columnWidths","tableWidthState","wrapperWidthState","wrapperWidth","Promise","resolve","then","join","split","columnOrder","map","reorderedColumns","col","findColumnByKey","parentElementHeight","getWidth","scrollWidth","calculateScrollbarHeight","head","responsiveStyleElement","destroyResponsiveStyle","ngOnDestroy","ElementRef","NgZone","ChangeDetectorRef","FilterService","OverlayService","ɵcmp","NgStyle","NgClass","NgIf","NgTemplateOutlet","Paginator","TableBody","CdkFixedSizeVirtualScroll","args","selector","providers","changeDetection","Default","encapsulation","None","styleUrls","styleClass","tableStyle","tableStyleClass","rowsPerPageOptions","paginatorDropdownAppendTo","showCurrentPageReport","showJumpToPageDropdown","scrollHeight","frozenWidth","responsive","loading","rowHover","autoLayout","groupRowsBy","minBufferPx","maxBufferPx","dt","subscription","detectChanges","frozenRows","updateFrozenRowStickyPosition","updateFrozenRowGroupHeaderStickyPosition","shouldRenderRowGroupHeader","currentRowFieldData","prevRowData","previousRowFieldData","shouldRenderRowGroupFooter","nextRowData","nextRowFieldData","shouldRenderRowspan","calculateRowGroupSize","groupRowSpan","tableHeaderHeight","NgForOf","CdkVirtualForOf","frozen","RowGroupHeader","getFrozenRowGroupHeaderStickyPosition","ɵdir","host","FrozenColumn","alignFrozen","_frozen","updateStickyPosition","right","parseFloat","prev","filterRow","SortableColumn","isEnabled","updateSortState","onClick","isFilterElement","onEnterKey","pSortableColumnDisabled","SortIcon","getMultiSortMetaIndex","isMultiSorted","OnPush","SelectableRow","onTouchEnd","onArrowDownKeyDown","row","currentTarget","nextRow","findNextSelectableRow","focus","onArrowUpKeyDown","prevRow","findPrevSelectableRow","onEnterKeyDown","onPageDownKeyDown","elementRef","onSpaceKeydown","pSelectableRowDisabled","SelectableRowDblClick","ContextMenuRow","pContextMenuRowDisabled","RowToggler","pRowTogglerDisabled","ResizableColumn","resizer","className","resizerMouseDownListener","onMouseDown","bind","bindDocumentEvents","documentMouseMoveListener","onDocumentMouseMove","documentMouseUpListener","onDocumentMouseUp","unbindDocumentEvents","which","pResizableColumnDisabled","ReorderableColumn","bindEvents","mouseDownListener","dragStartListener","onDragStart","dragOverListener","onDragEnter","dragEnterListener","dragLeaveListener","onDragLeave","unbindEvents","onDragOver","onDrop","pReorderableColumnDisabled","EditableColumn","closeEditingCell","openCell","focusCellSelector","pFocusCellSelector","focusableElement","findSingle","overlayEventListener","e","contains","clickObservable","completed","onEscapeKeyDown","onShiftKeyDown","moveToPreviousCell","moveToNextCell","onArrowDown","currentCell","findCell","cellIndex","targetCell","findNextEditableColumnByIndex","invokeElementMethod","onArrowUp","findPrevEditableColumnByIndex","onArrowLeft","onArrowRight","findPreviousEditableColumn","findNextEditableColumn","prevCell","previousRow","lastElementChild","nextCell","firstElementChild","pEditableColumnDisabled","EditableRow","pEditableRowDisabled","InitEditableRow","editableRow","SaveEditableRow","CancelEditableRow","CellEditor","editableColumn","inputTemplate","outputTemplate","editing","decorators","TableRadioButton","disabled","onFocus","boxViewChild","onBlur","inputId","name","ariaLabel","TableCheckbox","required","TableHeaderCheckbox","valueChangeSubscription","updateCheckedState","selectionChangeSubscription","isDisabled","isAllFilteredValuesChecked","ReorderableRowHandle","ReorderableRow","droppable","dragEndListener","onDragEnd","pReorderableRowDisabled","ColumnFilterFormElement","useGrouping","filterCallback","onModelChange","onTextInputEnterKeyDown","onNumericInputKeyDown","NgSwitch","NgSwitchCase","InputText","InputNumber","NgControlStatus","NgModel","TriStateCheckbox","Calendar","filterTemplate","placeholder","minFractionDigits","maxFractionDigits","prefix","suffix","locale","localeMatcher","currency","currencyDisplay","ColumnFilter","renderer","config","showMenu","showOperator","showClearButton","showApplyButton","showMatchModes","showAddButton","hideOnClear","maxConstraints","initFieldFilterConstraint","translationSubscription","translationObserver","generateMatchModeOptions","generateOperatorOptions","resetSubscription","clearFilter","_a","matchModes","matchModeOptions","filterMatchModeOptions","label","getTranslation","operatorOptions","MATCH_ALL","MATCH_ANY","defaultMatchMode","getDefaultMatchMode","onMenuMatchModeChange","onRowMatchModeChange","hide","onRowMatchModeKeyDown","nextItem","findNextItem","removeAttribute","tabIndex","prevItem","findPrevItem","onRowClearItemClick","isRowMatchModeSelected","addConstraint","getDefaultOperator","removeConstraint","onOperatorChange","toggleMenu","overlayVisible","onToggleButtonKeyDown","focusable","getFocusableElements","overlay","altKey","onEscape","icon","onContentClick","onOverlayAnimationStart","toState","set","zIndex","absolutePosition","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","onOverlayHide","onOverlayAnimationEnd","EQUALS","DATE_IS","CONTAINS","hasRowFilter","fieldConstraints","showRemoveIcon","showMenuButton","isShowOperator","isShowAddConstraint","applyButtonLabel","APPLY","clearButtonLabel","CLEAR","addRuleButtonLabel","ADD_RULE","removeRuleButtonLabel","REMOVE_RULE","noFilterLabel","NO_FILTER","fieldFilter","isOutsideClicked","isSameNode","documentClickListener","documentTarget","ownerDocument","listen","unbindDocumentClickListener","documentResizeListener","unbindDocumentResizeListener","scrollHandler","unbindScrollListener","applyFilter","Renderer2","PrimeNGConfig","Dropdown","ButtonDirective","opacity","transform","animations","TableModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, Directive, HostListener, Optional, NgModule } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i9 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i1 from 'primeng/api';\nimport { FilterOperator, FilterMatchMode, PrimeTemplate, TranslationKeys, SharedModule } from 'primeng/api';\nimport * as i2 from 'primeng/paginator';\nimport { PaginatorModule } from 'primeng/paginator';\nimport * as i8 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i11 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport * as i6 from 'primeng/tristatecheckbox';\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\nimport * as i7 from 'primeng/calendar';\nimport { CalendarModule } from 'primeng/calendar';\nimport * as i5 from 'primeng/inputnumber';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport * as i10 from 'primeng/dropdown';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils, ZIndexUtils } from 'primeng/utils';\nimport { Subject } from 'rxjs';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport { trigger, transition, style, animate } from '@angular/animations';\n\nclass TableService {\n    constructor() {\n        this.sortSource = new Subject();\n        this.selectionSource = new Subject();\n        this.contextMenuSource = new Subject();\n        this.valueSource = new Subject();\n        this.totalRecordsSource = new Subject();\n        this.columnsSource = new Subject();\n        this.resetSource = new Subject();\n        this.sortSource$ = this.sortSource.asObservable();\n        this.selectionSource$ = this.selectionSource.asObservable();\n        this.contextMenuSource$ = this.contextMenuSource.asObservable();\n        this.valueSource$ = this.valueSource.asObservable();\n        this.totalRecordsSource$ = this.totalRecordsSource.asObservable();\n        this.columnsSource$ = this.columnsSource.asObservable();\n        this.resetSource$ = this.resetSource.asObservable();\n    }\n    onSort(sortMeta) {\n        this.sortSource.next(sortMeta);\n    }\n    onSelectionChange() {\n        this.selectionSource.next();\n    }\n    onResetChange() {\n        this.resetSource.next();\n    }\n    onContextMenu(data) {\n        this.contextMenuSource.next(data);\n    }\n    onValueChange(value) {\n        this.valueSource.next(value);\n    }\n    onTotalRecordsChange(value) {\n        this.totalRecordsSource.next(value);\n    }\n    onColumnsChange(columns) {\n        this.columnsSource.next(columns);\n    }\n}\nTableService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TableService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTableService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TableService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TableService, decorators: [{\n            type: Injectable\n        }] });\nclass Table {\n    constructor(el, zone, tableService, cd, filterService, overlayService) {\n        this.el = el;\n        this.zone = zone;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.filterService = filterService;\n        this.overlayService = overlayService;\n        this.pageLinks = 5;\n        this.alwaysShowPaginator = true;\n        this.paginatorPosition = 'bottom';\n        this.paginatorDropdownScrollHeight = '200px';\n        this.currentPageReportTemplate = '{currentPage} of {totalPages}';\n        this.showFirstLastIcon = true;\n        this.showPageLinks = true;\n        this.defaultSortOrder = 1;\n        this.sortMode = 'single';\n        this.resetPageOnSort = true;\n        this.selectionChange = new EventEmitter();\n        this.contextMenuSelectionChange = new EventEmitter();\n        this.contextMenuSelectionMode = \"separate\";\n        this.rowTrackBy = (index, item) => item;\n        this.lazy = false;\n        this.lazyLoadOnInit = true;\n        this.compareSelectionBy = 'deepEquals';\n        this.csvSeparator = ',';\n        this.exportFilename = 'download';\n        this.filters = {};\n        this.filterDelay = 300;\n        this.expandedRowKeys = {};\n        this.editingRowKeys = {};\n        this.rowExpandMode = 'multiple';\n        this.scrollDirection = \"vertical\";\n        this.virtualScrollDelay = 250;\n        this.virtualRowHeight = 28;\n        this.columnResizeMode = 'fit';\n        this.loadingIcon = 'pi pi-spinner';\n        this.showLoader = true;\n        this.showInitialSortBadge = true;\n        this.stateStorage = 'session';\n        this.editMode = 'cell';\n        this.responsiveLayout = 'stack';\n        this.breakpoint = '960px';\n        this.onRowSelect = new EventEmitter();\n        this.onRowUnselect = new EventEmitter();\n        this.onPage = new EventEmitter();\n        this.onSort = new EventEmitter();\n        this.onFilter = new EventEmitter();\n        this.onLazyLoad = new EventEmitter();\n        this.onRowExpand = new EventEmitter();\n        this.onRowCollapse = new EventEmitter();\n        this.onContextMenuSelect = new EventEmitter();\n        this.onColResize = new EventEmitter();\n        this.onColReorder = new EventEmitter();\n        this.onRowReorder = new EventEmitter();\n        this.onEditInit = new EventEmitter();\n        this.onEditComplete = new EventEmitter();\n        this.onEditCancel = new EventEmitter();\n        this.onHeaderCheckboxToggle = new EventEmitter();\n        this.sortFunction = new EventEmitter();\n        this.firstChange = new EventEmitter();\n        this.rowsChange = new EventEmitter();\n        this.onStateSave = new EventEmitter();\n        this.onStateRestore = new EventEmitter();\n        this._value = [];\n        this._totalRecords = 0;\n        this._first = 0;\n        this.selectionKeys = {};\n        this._sortOrder = 1;\n        this.columnResizing = false;\n        this.rowGroupHeaderStyleObject = {};\n        this.id = UniqueComponentId();\n    }\n    ngOnInit() {\n        if (this.lazy && this.lazyLoadOnInit) {\n            if (!this.virtualScroll) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            if (this.restoringFilter) {\n                this.restoringFilter = false;\n            }\n        }\n        if (this.responsiveLayout === 'stack' && !this.scrollable) {\n            this.createResponsiveStyle();\n        }\n        this.initialized = true;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'caption':\n                    this.captionTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'headergrouped':\n                    this.headerGroupedTemplate = item.template;\n                    break;\n                case 'body':\n                    this.bodyTemplate = item.template;\n                    break;\n                case 'loadingbody':\n                    this.loadingBodyTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'footergrouped':\n                    this.footerGroupedTemplate = item.template;\n                    break;\n                case 'summary':\n                    this.summaryTemplate = item.template;\n                    break;\n                case 'colgroup':\n                    this.colGroupTemplate = item.template;\n                    break;\n                case 'rowexpansion':\n                    this.expandedRowTemplate = item.template;\n                    break;\n                case 'groupheader':\n                    this.groupHeaderTemplate = item.template;\n                    break;\n                case 'rowspan':\n                    this.rowspanTemplate = item.template;\n                    break;\n                case 'groupfooter':\n                    this.groupFooterTemplate = item.template;\n                    break;\n                case 'frozenrows':\n                    this.frozenRowsTemplate = item.template;\n                    break;\n                case 'frozenheader':\n                    this.frozenHeaderTemplate = item.template;\n                    break;\n                case 'frozenbody':\n                    this.frozenBodyTemplate = item.template;\n                    break;\n                case 'frozenfooter':\n                    this.frozenFooterTemplate = item.template;\n                    break;\n                case 'frozencolgroup':\n                    this.frozenColGroupTemplate = item.template;\n                    break;\n                case 'frozenrowexpansion':\n                    this.frozenExpandedRowTemplate = item.template;\n                    break;\n                case 'emptymessage':\n                    this.emptyMessageTemplate = item.template;\n                    break;\n                case 'paginatorleft':\n                    this.paginatorLeftTemplate = item.template;\n                    break;\n                case 'paginatorright':\n                    this.paginatorRightTemplate = item.template;\n                    break;\n                case 'paginatordropdownitem':\n                    this.paginatorDropdownItemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    ngAfterViewInit() {\n        if (this.isStateful() && this.resizableColumns) {\n            this.restoreColumnWidths();\n        }\n        if (this.scrollable && (this.scrollDirection !== 'vertical' || this.rowGroupMode === 'subheader')) {\n            this.updateScrollWidth();\n        }\n        if (this.scrollable && this.virtualScroll) {\n            this.virtualScrollSubscription = this.virtualScrollBody.renderedRangeStream.subscribe(range => {\n                let top = range.start * this.virtualRowHeight * -1;\n                this.tableHeaderViewChild.nativeElement.style.top = top + 'px';\n            });\n        }\n    }\n    ngOnChanges(simpleChange) {\n        if (simpleChange.value) {\n            if (this.isStateful() && !this.stateRestored) {\n                this.restoreState();\n            }\n            this._value = simpleChange.value.currentValue;\n            if (!this.lazy) {\n                this.totalRecords = (this._value ? this._value.length : 0);\n                if (this.sortMode == 'single' && this.sortField)\n                    this.sortSingle();\n                else if (this.sortMode == 'multiple' && this.multiSortMeta)\n                    this.sortMultiple();\n                else if (this.hasFilter()) //sort already filters\n                    this._filter();\n            }\n            this.tableService.onValueChange(simpleChange.value.currentValue);\n            if (this.scrollable && (this.scrollDirection !== 'vertical' || this.rowGroupMode === 'subheader')) {\n                this.updateScrollWidth();\n            }\n        }\n        if (simpleChange.columns) {\n            this._columns = simpleChange.columns.currentValue;\n            this.tableService.onColumnsChange(simpleChange.columns.currentValue);\n            if (this._columns && this.isStateful() && this.reorderableColumns && !this.columnOrderStateRestored) {\n                this.restoreColumnOrder();\n            }\n            if (this.scrollable && (this.scrollDirection !== 'vertical' || this.rowGroupMode === 'subheader')) {\n                this.updateScrollWidth();\n            }\n        }\n        if (simpleChange.sortField) {\n            this._sortField = simpleChange.sortField.currentValue;\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if (!this.lazy || this.initialized) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n        if (simpleChange.sortOrder) {\n            this._sortOrder = simpleChange.sortOrder.currentValue;\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if (!this.lazy || this.initialized) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n        if (simpleChange.multiSortMeta) {\n            this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\n            if (this.sortMode === 'multiple' && (this.initialized || (!this.lazy && !this.virtualScroll))) {\n                this.sortMultiple();\n            }\n        }\n        if (simpleChange.selection) {\n            this._selection = simpleChange.selection.currentValue;\n            if (!this.preventSelectionSetterPropagation) {\n                this.updateSelectionKeys();\n                this.tableService.onSelectionChange();\n            }\n            this.preventSelectionSetterPropagation = false;\n        }\n    }\n    get value() {\n        return this._value;\n    }\n    set value(val) {\n        this._value = val;\n    }\n    get columns() {\n        return this._columns;\n    }\n    set columns(cols) {\n        this._columns = cols;\n    }\n    get first() {\n        return this._first;\n    }\n    set first(val) {\n        this._first = val;\n    }\n    get rows() {\n        return this._rows;\n    }\n    set rows(val) {\n        this._rows = val;\n    }\n    get totalRecords() {\n        return this._totalRecords;\n    }\n    set totalRecords(val) {\n        this._totalRecords = val;\n        this.tableService.onTotalRecordsChange(this._totalRecords);\n    }\n    get sortField() {\n        return this._sortField;\n    }\n    set sortField(val) {\n        this._sortField = val;\n    }\n    get sortOrder() {\n        return this._sortOrder;\n    }\n    set sortOrder(val) {\n        this._sortOrder = val;\n    }\n    get multiSortMeta() {\n        return this._multiSortMeta;\n    }\n    set multiSortMeta(val) {\n        this._multiSortMeta = val;\n    }\n    get selection() {\n        return this._selection;\n    }\n    set selection(val) {\n        this._selection = val;\n    }\n    get dataToRender() {\n        let data = this.filteredValue || this.value;\n        return data ? ((this.paginator && !this.lazy) ? (data.slice(this.first, this.first + this.rows)) : data) : [];\n    }\n    updateSelectionKeys() {\n        if (this.dataKey && this._selection) {\n            this.selectionKeys = {};\n            if (Array.isArray(this._selection)) {\n                for (let data of this._selection) {\n                    this.selectionKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection, this.dataKey))] = 1;\n            }\n        }\n    }\n    onPageChange(event) {\n        this.first = event.first;\n        this.rows = event.rows;\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        this.onPage.emit({\n            first: this.first,\n            rows: this.rows\n        });\n        this.firstChange.emit(this.first);\n        this.rowsChange.emit(this.rows);\n        this.tableService.onValueChange(this.value);\n        if (this.isStateful()) {\n            this.saveState();\n        }\n        this.anchorRowIndex = null;\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n    sort(event) {\n        let originalEvent = event.originalEvent;\n        if (this.sortMode === 'single') {\n            this._sortOrder = (this.sortField === event.field) ? this.sortOrder * -1 : this.defaultSortOrder;\n            this._sortField = event.field;\n            if (this.resetPageOnSort) {\n                this._first = 0;\n                this.firstChange.emit(this._first);\n                if (this.scrollable) {\n                    this.resetScrollTop();\n                }\n            }\n            this.sortSingle();\n        }\n        if (this.sortMode === 'multiple') {\n            let metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n            let sortMeta = this.getSortMeta(event.field);\n            if (sortMeta) {\n                if (!metaKey) {\n                    this._multiSortMeta = [{ field: event.field, order: sortMeta.order * -1 }];\n                    if (this.resetPageOnSort) {\n                        this._first = 0;\n                        this.firstChange.emit(this._first);\n                        if (this.scrollable) {\n                            this.resetScrollTop();\n                        }\n                    }\n                }\n                else {\n                    sortMeta.order = sortMeta.order * -1;\n                }\n            }\n            else {\n                if (!metaKey || !this.multiSortMeta) {\n                    this._multiSortMeta = [];\n                    if (this.resetPageOnSort) {\n                        this._first = 0;\n                        this.firstChange.emit(this._first);\n                    }\n                }\n                this._multiSortMeta.push({ field: event.field, order: this.defaultSortOrder });\n            }\n            this.sortMultiple();\n        }\n        if (this.isStateful()) {\n            this.saveState();\n        }\n        this.anchorRowIndex = null;\n    }\n    sortSingle() {\n        if (this.sortField && this.sortOrder) {\n            if (this.restoringSort) {\n                this.restoringSort = false;\n            }\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                if (this.customSort) {\n                    this.sortFunction.emit({\n                        data: this.value,\n                        mode: this.sortMode,\n                        field: this.sortField,\n                        order: this.sortOrder\n                    });\n                }\n                else {\n                    this.value.sort((data1, data2) => {\n                        let value1 = ObjectUtils.resolveFieldData(data1, this.sortField);\n                        let value2 = ObjectUtils.resolveFieldData(data2, this.sortField);\n                        let result = null;\n                        if (value1 == null && value2 != null)\n                            result = -1;\n                        else if (value1 != null && value2 == null)\n                            result = 1;\n                        else if (value1 == null && value2 == null)\n                            result = 0;\n                        else if (typeof value1 === 'string' && typeof value2 === 'string')\n                            result = value1.localeCompare(value2);\n                        else\n                            result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\n                        return (this.sortOrder * result);\n                    });\n                    this._value = [...this.value];\n                }\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n            let sortMeta = {\n                field: this.sortField,\n                order: this.sortOrder\n            };\n            this.onSort.emit(sortMeta);\n            this.tableService.onSort(sortMeta);\n        }\n    }\n    sortMultiple() {\n        if (this.multiSortMeta) {\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                if (this.customSort) {\n                    this.sortFunction.emit({\n                        data: this.value,\n                        mode: this.sortMode,\n                        multiSortMeta: this.multiSortMeta\n                    });\n                }\n                else {\n                    this.value.sort((data1, data2) => {\n                        return this.multisortField(data1, data2, this.multiSortMeta, 0);\n                    });\n                    this._value = [...this.value];\n                }\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n            this.onSort.emit({\n                multisortmeta: this.multiSortMeta\n            });\n            this.tableService.onSort(this.multiSortMeta);\n        }\n    }\n    multisortField(data1, data2, multiSortMeta, index) {\n        let value1 = ObjectUtils.resolveFieldData(data1, multiSortMeta[index].field);\n        let value2 = ObjectUtils.resolveFieldData(data2, multiSortMeta[index].field);\n        let result = null;\n        if (value1 == null && value2 != null)\n            result = -1;\n        else if (value1 != null && value2 == null)\n            result = 1;\n        else if (value1 == null && value2 == null)\n            result = 0;\n        else if (typeof value1 == 'string' || value1 instanceof String) {\n            if (value1.localeCompare && (value1 != value2)) {\n                return (multiSortMeta[index].order * value1.localeCompare(value2));\n            }\n        }\n        else {\n            result = (value1 < value2) ? -1 : 1;\n        }\n        if (value1 == value2) {\n            return (multiSortMeta.length - 1) > (index) ? (this.multisortField(data1, data2, multiSortMeta, index + 1)) : 0;\n        }\n        return (multiSortMeta[index].order * result);\n    }\n    getSortMeta(field) {\n        if (this.multiSortMeta && this.multiSortMeta.length) {\n            for (let i = 0; i < this.multiSortMeta.length; i++) {\n                if (this.multiSortMeta[i].field === field) {\n                    return this.multiSortMeta[i];\n                }\n            }\n        }\n        return null;\n    }\n    isSorted(field) {\n        if (this.sortMode === 'single') {\n            return (this.sortField && this.sortField === field);\n        }\n        else if (this.sortMode === 'multiple') {\n            let sorted = false;\n            if (this.multiSortMeta) {\n                for (let i = 0; i < this.multiSortMeta.length; i++) {\n                    if (this.multiSortMeta[i].field == field) {\n                        sorted = true;\n                        break;\n                    }\n                }\n            }\n            return sorted;\n        }\n    }\n    handleRowClick(event) {\n        let target = event.originalEvent.target;\n        let targetNode = target.nodeName;\n        let parentNode = target.parentElement && target.parentElement.nodeName;\n        if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' ||\n            parentNode == 'INPUT' || parentNode == 'BUTTON' || parentNode == 'A' ||\n            (DomHandler.hasClass(event.originalEvent.target, 'p-clickable'))) {\n            return;\n        }\n        if (this.selectionMode) {\n            this.preventSelectionSetterPropagation = true;\n            if (this.isMultipleSelectionMode() && event.originalEvent.shiftKey && this.anchorRowIndex != null) {\n                DomHandler.clearSelection();\n                if (this.rangeRowIndex != null) {\n                    this.clearSelectionRange(event.originalEvent);\n                }\n                this.rangeRowIndex = event.rowIndex;\n                this.selectRange(event.originalEvent, event.rowIndex);\n            }\n            else {\n                let rowData = event.rowData;\n                let selected = this.isSelected(rowData);\n                let metaSelection = this.rowTouched ? false : this.metaKeySelection;\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n                this.anchorRowIndex = event.rowIndex;\n                this.rangeRowIndex = event.rowIndex;\n                if (metaSelection) {\n                    let metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;\n                    if (selected && metaKey) {\n                        if (this.isSingleSelectionMode()) {\n                            this._selection = null;\n                            this.selectionKeys = {};\n                            this.selectionChange.emit(null);\n                        }\n                        else {\n                            let selectionIndex = this.findIndexInSelection(rowData);\n                            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n                            this.selectionChange.emit(this.selection);\n                            if (dataKeyValue) {\n                                delete this.selectionKeys[dataKeyValue];\n                            }\n                        }\n                        this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row' });\n                    }\n                    else {\n                        if (this.isSingleSelectionMode()) {\n                            this._selection = rowData;\n                            this.selectionChange.emit(rowData);\n                            if (dataKeyValue) {\n                                this.selectionKeys = {};\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                        else if (this.isMultipleSelectionMode()) {\n                            if (metaKey) {\n                                this._selection = this.selection || [];\n                            }\n                            else {\n                                this._selection = [];\n                                this.selectionKeys = {};\n                            }\n                            this._selection = [...this.selection, rowData];\n                            this.selectionChange.emit(this.selection);\n                            if (dataKeyValue) {\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                        this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                    }\n                }\n                else {\n                    if (this.selectionMode === 'single') {\n                        if (selected) {\n                            this._selection = null;\n                            this.selectionKeys = {};\n                            this.selectionChange.emit(this.selection);\n                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                        }\n                        else {\n                            this._selection = rowData;\n                            this.selectionChange.emit(this.selection);\n                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                            if (dataKeyValue) {\n                                this.selectionKeys = {};\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                    }\n                    else if (this.selectionMode === 'multiple') {\n                        if (selected) {\n                            let selectionIndex = this.findIndexInSelection(rowData);\n                            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n                            this.selectionChange.emit(this.selection);\n                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                            if (dataKeyValue) {\n                                delete this.selectionKeys[dataKeyValue];\n                            }\n                        }\n                        else {\n                            this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n                            this.selectionChange.emit(this.selection);\n                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                            if (dataKeyValue) {\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                    }\n                }\n            }\n            this.tableService.onSelectionChange();\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        }\n        this.rowTouched = false;\n    }\n    handleRowTouchEnd(event) {\n        this.rowTouched = true;\n    }\n    handleRowRightClick(event) {\n        if (this.contextMenu) {\n            const rowData = event.rowData;\n            if (this.contextMenuSelectionMode === 'separate') {\n                this.contextMenuSelection = rowData;\n                this.contextMenuSelectionChange.emit(rowData);\n                this.onContextMenuSelect.emit({ originalEvent: event.originalEvent, data: rowData, index: event.rowIndex });\n                this.contextMenu.show(event.originalEvent);\n                this.tableService.onContextMenu(rowData);\n            }\n            else if (this.contextMenuSelectionMode === 'joint') {\n                this.preventSelectionSetterPropagation = true;\n                let selected = this.isSelected(rowData);\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n                if (!selected) {\n                    if (this.isSingleSelectionMode()) {\n                        this.selection = rowData;\n                        this.selectionChange.emit(rowData);\n                        if (dataKeyValue) {\n                            this.selectionKeys = {};\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n                    else if (this.isMultipleSelectionMode()) {\n                        this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n                        this.selectionChange.emit(this.selection);\n                        if (dataKeyValue) {\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n                }\n                this.tableService.onSelectionChange();\n                this.contextMenu.show(event.originalEvent);\n                this.onContextMenuSelect.emit({ originalEvent: event, data: rowData, index: event.rowIndex });\n            }\n        }\n    }\n    selectRange(event, rowIndex) {\n        let rangeStart, rangeEnd;\n        if (this.anchorRowIndex > rowIndex) {\n            rangeStart = rowIndex;\n            rangeEnd = this.anchorRowIndex;\n        }\n        else if (this.anchorRowIndex < rowIndex) {\n            rangeStart = this.anchorRowIndex;\n            rangeEnd = rowIndex;\n        }\n        else {\n            rangeStart = rowIndex;\n            rangeEnd = rowIndex;\n        }\n        if (this.lazy && this.paginator) {\n            rangeStart -= this.first;\n            rangeEnd -= this.first;\n        }\n        let rangeRowsData = [];\n        for (let i = rangeStart; i <= rangeEnd; i++) {\n            let rangeRowData = this.filteredValue ? this.filteredValue[i] : this.value[i];\n            if (!this.isSelected(rangeRowData)) {\n                rangeRowsData.push(rangeRowData);\n                this._selection = [...this.selection, rangeRowData];\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n                if (dataKeyValue) {\n                    this.selectionKeys[dataKeyValue] = 1;\n                }\n            }\n        }\n        this.selectionChange.emit(this.selection);\n        this.onRowSelect.emit({ originalEvent: event, data: rangeRowsData, type: 'row' });\n    }\n    clearSelectionRange(event) {\n        let rangeStart, rangeEnd;\n        if (this.rangeRowIndex > this.anchorRowIndex) {\n            rangeStart = this.anchorRowIndex;\n            rangeEnd = this.rangeRowIndex;\n        }\n        else if (this.rangeRowIndex < this.anchorRowIndex) {\n            rangeStart = this.rangeRowIndex;\n            rangeEnd = this.anchorRowIndex;\n        }\n        else {\n            rangeStart = this.rangeRowIndex;\n            rangeEnd = this.rangeRowIndex;\n        }\n        for (let i = rangeStart; i <= rangeEnd; i++) {\n            let rangeRowData = this.value[i];\n            let selectionIndex = this.findIndexInSelection(rangeRowData);\n            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n            let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n            if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n            }\n            this.onRowUnselect.emit({ originalEvent: event, data: rangeRowData, type: 'row' });\n        }\n    }\n    isSelected(rowData) {\n        if (rowData && this.selection) {\n            if (this.dataKey) {\n                return this.selectionKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined;\n            }\n            else {\n                if (this.selection instanceof Array)\n                    return this.findIndexInSelection(rowData) > -1;\n                else\n                    return this.equals(rowData, this.selection);\n            }\n        }\n        return false;\n    }\n    findIndexInSelection(rowData) {\n        let index = -1;\n        if (this.selection && this.selection.length) {\n            for (let i = 0; i < this.selection.length; i++) {\n                if (this.equals(rowData, this.selection[i])) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    toggleRowWithRadio(event, rowData) {\n        this.preventSelectionSetterPropagation = true;\n        if (this.selection != rowData) {\n            this._selection = rowData;\n            this.selectionChange.emit(this.selection);\n            this.onRowSelect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton' });\n            if (this.dataKey) {\n                this.selectionKeys = {};\n                this.selectionKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] = 1;\n            }\n        }\n        else {\n            this._selection = null;\n            this.selectionChange.emit(this.selection);\n            this.onRowUnselect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton' });\n        }\n        this.tableService.onSelectionChange();\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n    toggleRowWithCheckbox(event, rowData) {\n        this.selection = this.selection || [];\n        let selected = this.isSelected(rowData);\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n        this.preventSelectionSetterPropagation = true;\n        if (selected) {\n            let selectionIndex = this.findIndexInSelection(rowData);\n            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n            this.selectionChange.emit(this.selection);\n            this.onRowUnselect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });\n            if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n            }\n        }\n        else {\n            this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n            this.selectionChange.emit(this.selection);\n            this.onRowSelect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });\n            if (dataKeyValue) {\n                this.selectionKeys[dataKeyValue] = 1;\n            }\n        }\n        this.tableService.onSelectionChange();\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n    toggleRowsWithCheckbox(event, check) {\n        this._selection = check ? this.filteredValue ? this.filteredValue.slice() : this.value.slice() : [];\n        this.preventSelectionSetterPropagation = true;\n        this.updateSelectionKeys();\n        this.selectionChange.emit(this._selection);\n        this.tableService.onSelectionChange();\n        this.onHeaderCheckboxToggle.emit({ originalEvent: event, checked: check });\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n    equals(data1, data2) {\n        return this.compareSelectionBy === 'equals' ? (data1 === data2) : ObjectUtils.equals(data1, data2, this.dataKey);\n    }\n    /* Legacy Filtering for custom elements */\n    filter(value, field, matchMode) {\n        if (this.filterTimeout) {\n            clearTimeout(this.filterTimeout);\n        }\n        if (!this.isFilterBlank(value)) {\n            this.filters[field] = { value: value, matchMode: matchMode };\n        }\n        else if (this.filters[field]) {\n            delete this.filters[field];\n        }\n        this.filterTimeout = setTimeout(() => {\n            this._filter();\n            this.filterTimeout = null;\n        }, this.filterDelay);\n        this.anchorRowIndex = null;\n    }\n    filterGlobal(value, matchMode) {\n        this.filter(value, 'global', matchMode);\n    }\n    isFilterBlank(filter) {\n        if (filter !== null && filter !== undefined) {\n            if ((typeof filter === 'string' && filter.trim().length == 0) || (filter instanceof Array && filter.length == 0))\n                return true;\n            else\n                return false;\n        }\n        return true;\n    }\n    _filter() {\n        if (!this.restoringFilter) {\n            this.first = 0;\n            this.firstChange.emit(this.first);\n        }\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            if (!this.value) {\n                return;\n            }\n            if (!this.hasFilter()) {\n                this.filteredValue = null;\n                if (this.paginator) {\n                    this.totalRecords = this.value ? this.value.length : 0;\n                }\n            }\n            else {\n                let globalFilterFieldsArray;\n                if (this.filters['global']) {\n                    if (!this.columns && !this.globalFilterFields)\n                        throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');\n                    else\n                        globalFilterFieldsArray = this.globalFilterFields || this.columns;\n                }\n                this.filteredValue = [];\n                for (let i = 0; i < this.value.length; i++) {\n                    let localMatch = true;\n                    let globalMatch = false;\n                    let localFiltered = false;\n                    for (let prop in this.filters) {\n                        if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n                            localFiltered = true;\n                            let filterField = prop;\n                            let filterMeta = this.filters[filterField];\n                            if (Array.isArray(filterMeta)) {\n                                for (let meta of filterMeta) {\n                                    localMatch = this.executeLocalFilter(filterField, this.value[i], meta);\n                                    if ((meta.operator === FilterOperator.OR && localMatch) || (meta.operator === FilterOperator.AND && !localMatch)) {\n                                        break;\n                                    }\n                                }\n                            }\n                            else {\n                                localMatch = this.executeLocalFilter(filterField, this.value[i], filterMeta);\n                            }\n                            if (!localMatch) {\n                                break;\n                            }\n                        }\n                    }\n                    if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n                        for (let j = 0; j < globalFilterFieldsArray.length; j++) {\n                            let globalFilterField = globalFilterFieldsArray[j].field || globalFilterFieldsArray[j];\n                            globalMatch = this.filterService.filters[this.filters['global'].matchMode](ObjectUtils.resolveFieldData(this.value[i], globalFilterField), this.filters['global'].value, this.filterLocale);\n                            if (globalMatch) {\n                                break;\n                            }\n                        }\n                    }\n                    let matches;\n                    if (this.filters['global']) {\n                        matches = localFiltered ? (localFiltered && localMatch && globalMatch) : globalMatch;\n                    }\n                    else {\n                        matches = localFiltered && localMatch;\n                    }\n                    if (matches) {\n                        this.filteredValue.push(this.value[i]);\n                    }\n                }\n                if (this.filteredValue.length === this.value.length) {\n                    this.filteredValue = null;\n                }\n                if (this.paginator) {\n                    this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;\n                }\n            }\n        }\n        this.onFilter.emit({\n            filters: this.filters,\n            filteredValue: this.filteredValue || this.value\n        });\n        this.tableService.onValueChange(this.value);\n        if (this.isStateful() && !this.restoringFilter) {\n            this.saveState();\n        }\n        if (this.restoringFilter) {\n            this.restoringFilter = false;\n        }\n        this.cd.markForCheck();\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n    executeLocalFilter(field, rowData, filterMeta) {\n        let filterValue = filterMeta.value;\n        let filterMatchMode = filterMeta.matchMode || FilterMatchMode.STARTS_WITH;\n        let dataFieldValue = ObjectUtils.resolveFieldData(rowData, field);\n        let filterConstraint = this.filterService.filters[filterMatchMode];\n        return filterConstraint(dataFieldValue, filterValue, this.filterLocale);\n    }\n    hasFilter() {\n        let empty = true;\n        for (let prop in this.filters) {\n            if (this.filters.hasOwnProperty(prop)) {\n                empty = false;\n                break;\n            }\n        }\n        return !empty;\n    }\n    createLazyLoadMetadata() {\n        return {\n            first: this.first,\n            rows: this.rows,\n            sortField: this.sortField,\n            sortOrder: this.sortOrder,\n            filters: this.filters,\n            globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n            multiSortMeta: this.multiSortMeta\n        };\n    }\n    clear() {\n        this._sortField = null;\n        this._sortOrder = this.defaultSortOrder;\n        this._multiSortMeta = null;\n        this.tableService.onSort(null);\n        this.filteredValue = null;\n        this.tableService.onResetChange();\n        this.first = 0;\n        this.firstChange.emit(this.first);\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            this.totalRecords = (this._value ? this._value.length : 0);\n        }\n    }\n    reset() {\n        this.clear();\n    }\n    exportCSV(options) {\n        let data;\n        let csv = '';\n        let columns = this.frozenColumns ? [...this.frozenColumns, ...this.columns] : this.columns;\n        if (options && options.selectionOnly) {\n            data = this.selection || [];\n        }\n        else {\n            data = this.filteredValue || this.value;\n            if (this.frozenValue) {\n                data = data ? [...this.frozenValue, ...data] : this.frozenValue;\n            }\n        }\n        //headers\n        for (let i = 0; i < columns.length; i++) {\n            let column = columns[i];\n            if (column.exportable !== false && column.field) {\n                csv += '\"' + (column.header || column.field) + '\"';\n                if (i < (columns.length - 1)) {\n                    csv += this.csvSeparator;\n                }\n            }\n        }\n        //body\n        data.forEach((record, i) => {\n            csv += '\\n';\n            for (let i = 0; i < columns.length; i++) {\n                let column = columns[i];\n                if (column.exportable !== false && column.field) {\n                    let cellData = ObjectUtils.resolveFieldData(record, column.field);\n                    if (cellData != null) {\n                        if (this.exportFunction) {\n                            cellData = this.exportFunction({\n                                data: cellData,\n                                field: column.field\n                            });\n                        }\n                        else\n                            cellData = String(cellData).replace(/\"/g, '\"\"');\n                    }\n                    else\n                        cellData = '';\n                    csv += '\"' + cellData + '\"';\n                    if (i < (columns.length - 1)) {\n                        csv += this.csvSeparator;\n                    }\n                }\n            }\n        });\n        let blob = new Blob([csv], {\n            type: 'text/csv;charset=utf-8;'\n        });\n        if (window.navigator.msSaveOrOpenBlob) {\n            navigator.msSaveOrOpenBlob(blob, this.exportFilename + '.csv');\n        }\n        else {\n            let link = document.createElement(\"a\");\n            link.style.display = 'none';\n            document.body.appendChild(link);\n            if (link.download !== undefined) {\n                link.setAttribute('href', URL.createObjectURL(blob));\n                link.setAttribute('download', this.exportFilename + '.csv');\n                link.click();\n            }\n            else {\n                csv = 'data:text/csv;charset=utf-8,' + csv;\n                window.open(encodeURI(csv));\n            }\n            document.body.removeChild(link);\n        }\n    }\n    resetScrollTop() {\n        if (this.virtualScroll)\n            this.scrollToVirtualIndex(0);\n        else\n            this.scrollTo({ top: 0 });\n    }\n    scrollToVirtualIndex(index) {\n        if (this.virtualScrollBody) {\n            this.virtualScrollBody.scrollToIndex(index);\n        }\n    }\n    onScrollIndexChange(index) {\n        if (this.lazy) {\n            if (this.virtualScrollTimeout) {\n                clearTimeout(this.virtualScrollTimeout);\n            }\n            this.virtualScrollTimeout = setTimeout(() => {\n                let page = Math.floor(index / this.rows);\n                let virtualScrollOffset = page === 0 ? 0 : (page - 1) * this.rows;\n                let virtualScrollChunkSize = page === 0 ? this.rows * 2 : this.rows * 3;\n                if (page !== this.virtualPage) {\n                    this.virtualPage = page;\n                    this.onLazyLoad.emit({\n                        first: virtualScrollOffset,\n                        rows: virtualScrollChunkSize,\n                        sortField: this.sortField,\n                        sortOrder: this.sortOrder,\n                        filters: this.filters,\n                        globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n                        multiSortMeta: this.multiSortMeta\n                    });\n                }\n            }, this.virtualScrollDelay);\n        }\n    }\n    scrollTo(options) {\n        if (this.virtualScrollBody) {\n            this.virtualScrollBody.scrollTo(options);\n        }\n        else {\n            if (this.wrapperViewChild.nativeElement.scrollTo) {\n                this.wrapperViewChild.nativeElement.scrollTo(options);\n            }\n            else {\n                this.wrapperViewChild.nativeElement.scrollLeft = options.left;\n                this.wrapperViewChild.nativeElement.scrollTop = options.top;\n            }\n        }\n    }\n    updateEditingCell(cell, data, field, index) {\n        this.editingCell = cell;\n        this.editingCellData = data;\n        this.editingCellField = field;\n        this.editingCellRowIndex = index;\n        this.bindDocumentEditListener();\n    }\n    isEditingCellValid() {\n        return (this.editingCell && DomHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0);\n    }\n    bindDocumentEditListener() {\n        if (!this.documentEditListener) {\n            this.documentEditListener = (event) => {\n                if (this.editingCell && !this.selfClick && this.isEditingCellValid()) {\n                    DomHandler.removeClass(this.editingCell, 'p-cell-editing');\n                    this.editingCell = null;\n                    this.onEditComplete.emit({ field: this.editingCellField, data: this.editingCellData, originalEvent: event, index: this.editingCellRowIndex });\n                    this.editingCellField = null;\n                    this.editingCellData = null;\n                    this.editingCellRowIndex = null;\n                    this.unbindDocumentEditListener();\n                    this.cd.markForCheck();\n                    if (this.overlaySubscription) {\n                        this.overlaySubscription.unsubscribe();\n                    }\n                }\n                this.selfClick = false;\n            };\n            document.addEventListener('click', this.documentEditListener);\n        }\n    }\n    unbindDocumentEditListener() {\n        if (this.documentEditListener) {\n            document.removeEventListener('click', this.documentEditListener);\n            this.documentEditListener = null;\n        }\n    }\n    initRowEdit(rowData) {\n        let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        this.editingRowKeys[dataKeyValue] = true;\n    }\n    saveRowEdit(rowData, rowElement) {\n        if (DomHandler.find(rowElement, '.ng-invalid.ng-dirty').length === 0) {\n            let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n            delete this.editingRowKeys[dataKeyValue];\n        }\n    }\n    cancelRowEdit(rowData) {\n        let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        delete this.editingRowKeys[dataKeyValue];\n    }\n    toggleRow(rowData, event) {\n        if (!this.dataKey) {\n            throw new Error('dataKey must be defined to use row expansion');\n        }\n        let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        if (this.expandedRowKeys[dataKeyValue] != null) {\n            delete this.expandedRowKeys[dataKeyValue];\n            this.onRowCollapse.emit({\n                originalEvent: event,\n                data: rowData\n            });\n        }\n        else {\n            if (this.rowExpandMode === 'single') {\n                this.expandedRowKeys = {};\n            }\n            this.expandedRowKeys[dataKeyValue] = true;\n            this.onRowExpand.emit({\n                originalEvent: event,\n                data: rowData\n            });\n        }\n        if (event) {\n            event.preventDefault();\n        }\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n    isRowExpanded(rowData) {\n        return this.expandedRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n    }\n    isRowEditing(rowData) {\n        return this.editingRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n    }\n    isSingleSelectionMode() {\n        return this.selectionMode === 'single';\n    }\n    isMultipleSelectionMode() {\n        return this.selectionMode === 'multiple';\n    }\n    onColumnResizeBegin(event) {\n        let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        this.resizeColumnElement = event.target.parentElement;\n        this.columnResizing = true;\n        this.lastResizerHelperX = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft);\n        this.onColumnResize(event);\n        event.preventDefault();\n    }\n    onColumnResize(event) {\n        let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n        this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';\n        this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n        this.resizeHelperViewChild.nativeElement.style.left = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft) + 'px';\n        this.resizeHelperViewChild.nativeElement.style.display = 'block';\n    }\n    onColumnResizeEnd() {\n        let delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n        let columnWidth = this.resizeColumnElement.offsetWidth;\n        let newColumnWidth = columnWidth + delta;\n        let minWidth = this.resizeColumnElement.style.minWidth || 15;\n        if (newColumnWidth >= minWidth) {\n            if (this.columnResizeMode === 'fit') {\n                let nextColumn = this.resizeColumnElement.nextElementSibling;\n                let nextColumnWidth = nextColumn.offsetWidth - delta;\n                if (newColumnWidth > 15 && nextColumnWidth > 15) {\n                    if (!this.scrollable) {\n                        this.resizeColumnElement.style.width = newColumnWidth + 'px';\n                        if (nextColumn) {\n                            nextColumn.style.width = nextColumnWidth + 'px';\n                        }\n                    }\n                    else {\n                        this.resizeTableCells(newColumnWidth, nextColumnWidth);\n                    }\n                }\n            }\n            else if (this.columnResizeMode === 'expand') {\n                let tableWidth = this.tableViewChild.nativeElement.offsetWidth + delta;\n                if (!this.scrollable) {\n                    this.tableViewChild.nativeElement.style.width = tableWidth + 'px';\n                    this.resizeColumnElement.style.width = newColumnWidth + 'px';\n                }\n                else {\n                    this.resizeTableCells(newColumnWidth, null);\n                    let scrollbarWidth = DomHandler.calculateScrollbarWidth(this.wrapperViewChild.nativeElement);\n                    let isWrapperInViewport = this.containerViewChild.nativeElement.offsetWidth > tableWidth + scrollbarWidth;\n                    this.tableViewChild.nativeElement.style.width = tableWidth + 'px';\n                    this.wrapperViewChild.nativeElement.style.width = isWrapperInViewport ? tableWidth + scrollbarWidth + 'px' : 'auto';\n                }\n            }\n            this.onColResize.emit({\n                element: this.resizeColumnElement,\n                delta: delta\n            });\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        }\n        this.resizeHelperViewChild.nativeElement.style.display = 'none';\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n    }\n    resizeTableCells(newColumnWidth, nextColumnWidth) {\n        let colIndex = DomHandler.index(this.resizeColumnElement);\n        let widths = [];\n        let headers = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-thead > tr > th');\n        headers.forEach(header => widths.push(DomHandler.getOuterWidth(header)));\n        this.destroyStyleElement();\n        this.createStyleElement();\n        let innerHTML = '';\n        widths.forEach((width, index) => {\n            let colWidth = index === colIndex ? newColumnWidth : (nextColumnWidth && index === colIndex + 1) ? nextColumnWidth : width;\n            innerHTML += `\n                #${this.id} .p-datatable-thead > tr > th:nth-child(${index + 1}) {\n                    flex: 0 0 ${colWidth}px;\n                }\n\n                #${this.id} .p-datatable-tbody > tr > td:nth-child(${index + 1}) {\n                    flex: 0 0 ${colWidth}px;\n                }\n            `;\n        });\n        this.styleElement.innerHTML = innerHTML;\n    }\n    onColumnDragStart(event, columnElement) {\n        this.reorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);\n        this.reorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);\n        this.draggedColumn = columnElement;\n        event.dataTransfer.setData('text', 'b'); // For firefox\n    }\n    onColumnDragEnter(event, dropHeader) {\n        if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n            event.preventDefault();\n            let containerOffset = DomHandler.getOffset(this.containerViewChild.nativeElement);\n            let dropHeaderOffset = DomHandler.getOffset(dropHeader);\n            if (this.draggedColumn != dropHeader) {\n                let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n                let dropIndex = DomHandler.indexWithinGroup(dropHeader, 'preorderablecolumn');\n                let targetLeft = dropHeaderOffset.left - containerOffset.left;\n                let targetTop = containerOffset.top - dropHeaderOffset.top;\n                let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n                this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n                this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n                if (event.pageX > columnCenter) {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.dropPosition = 1;\n                }\n                else {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.dropPosition = -1;\n                }\n                if ((dropIndex - dragIndex === 1 && this.dropPosition === -1) || (dropIndex - dragIndex === -1 && this.dropPosition === 1)) {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n                }\n                else {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n                }\n            }\n            else {\n                event.dataTransfer.dropEffect = 'none';\n            }\n        }\n    }\n    onColumnDragLeave(event) {\n        if (this.reorderableColumns && this.draggedColumn) {\n            event.preventDefault();\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n        }\n    }\n    onColumnDrop(event, dropColumn) {\n        event.preventDefault();\n        if (this.draggedColumn) {\n            let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n            let dropIndex = DomHandler.indexWithinGroup(dropColumn, 'preorderablecolumn');\n            let allowDrop = (dragIndex != dropIndex);\n            if (allowDrop && ((dropIndex - dragIndex == 1 && this.dropPosition === -1) || (dragIndex - dropIndex == 1 && this.dropPosition === 1))) {\n                allowDrop = false;\n            }\n            if (allowDrop && ((dropIndex < dragIndex && this.dropPosition === 1))) {\n                dropIndex = dropIndex + 1;\n            }\n            if (allowDrop && ((dropIndex > dragIndex && this.dropPosition === -1))) {\n                dropIndex = dropIndex - 1;\n            }\n            if (allowDrop) {\n                ObjectUtils.reorderArray(this.columns, dragIndex, dropIndex);\n                this.onColReorder.emit({\n                    dragIndex: dragIndex,\n                    dropIndex: dropIndex,\n                    columns: this.columns\n                });\n                if (this.isStateful()) {\n                    this.zone.runOutsideAngular(() => {\n                        setTimeout(() => {\n                            this.saveState();\n                        });\n                    });\n                }\n            }\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n            this.draggedColumn.draggable = false;\n            this.draggedColumn = null;\n            this.dropPosition = null;\n        }\n    }\n    onRowDragStart(event, index) {\n        this.rowDragging = true;\n        this.draggedRowIndex = index;\n        event.dataTransfer.setData('text', 'b'); // For firefox\n    }\n    onRowDragOver(event, index, rowElement) {\n        if (this.rowDragging && this.draggedRowIndex !== index) {\n            let rowY = DomHandler.getOffset(rowElement).top + DomHandler.getWindowScrollTop();\n            let pageY = event.pageY;\n            let rowMidY = rowY + DomHandler.getOuterHeight(rowElement) / 2;\n            let prevRowElement = rowElement.previousElementSibling;\n            if (pageY < rowMidY) {\n                DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n                this.droppedRowIndex = index;\n                if (prevRowElement)\n                    DomHandler.addClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                else\n                    DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n            }\n            else {\n                if (prevRowElement)\n                    DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                else\n                    DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n                this.droppedRowIndex = index + 1;\n                DomHandler.addClass(rowElement, 'p-datatable-dragpoint-bottom');\n            }\n        }\n    }\n    onRowDragLeave(event, rowElement) {\n        let prevRowElement = rowElement.previousElementSibling;\n        if (prevRowElement) {\n            DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n        }\n        DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n        DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-top');\n    }\n    onRowDragEnd(event) {\n        this.rowDragging = false;\n        this.draggedRowIndex = null;\n        this.droppedRowIndex = null;\n    }\n    onRowDrop(event, rowElement) {\n        if (this.droppedRowIndex != null) {\n            let dropIndex = (this.draggedRowIndex > this.droppedRowIndex) ? this.droppedRowIndex : (this.droppedRowIndex === 0) ? 0 : this.droppedRowIndex - 1;\n            ObjectUtils.reorderArray(this.value, this.draggedRowIndex, dropIndex);\n            this.onRowReorder.emit({\n                dragIndex: this.draggedRowIndex,\n                dropIndex: dropIndex\n            });\n        }\n        //cleanup\n        this.onRowDragLeave(event, rowElement);\n        this.onRowDragEnd(event);\n    }\n    isEmpty() {\n        let data = this.filteredValue || this.value;\n        return data == null || data.length == 0;\n    }\n    getBlockableElement() {\n        return this.el.nativeElement.children[0];\n    }\n    getStorage() {\n        switch (this.stateStorage) {\n            case 'local':\n                return window.localStorage;\n            case 'session':\n                return window.sessionStorage;\n            default:\n                throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n        }\n    }\n    isStateful() {\n        return this.stateKey != null;\n    }\n    saveState() {\n        const storage = this.getStorage();\n        let state = {};\n        if (this.paginator) {\n            state.first = this.first;\n            state.rows = this.rows;\n        }\n        if (this.sortField) {\n            state.sortField = this.sortField;\n            state.sortOrder = this.sortOrder;\n        }\n        if (this.multiSortMeta) {\n            state.multiSortMeta = this.multiSortMeta;\n        }\n        if (this.hasFilter()) {\n            state.filters = this.filters;\n        }\n        if (this.resizableColumns) {\n            this.saveColumnWidths(state);\n        }\n        if (this.reorderableColumns) {\n            this.saveColumnOrder(state);\n        }\n        if (this.selection) {\n            state.selection = this.selection;\n        }\n        if (Object.keys(this.expandedRowKeys).length) {\n            state.expandedRowKeys = this.expandedRowKeys;\n        }\n        storage.setItem(this.stateKey, JSON.stringify(state));\n        this.onStateSave.emit(state);\n    }\n    clearState() {\n        const storage = this.getStorage();\n        if (this.stateKey) {\n            storage.removeItem(this.stateKey);\n        }\n    }\n    restoreState() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n        const dateFormat = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/;\n        const reviver = function (key, value) {\n            if (typeof value === \"string\" && dateFormat.test(value)) {\n                return new Date(value);\n            }\n            return value;\n        };\n        if (stateString) {\n            let state = JSON.parse(stateString, reviver);\n            if (this.paginator) {\n                if (this.first !== undefined) {\n                    this.first = state.first;\n                    this.firstChange.emit(this.first);\n                }\n                if (this.rows !== undefined) {\n                    this.rows = state.rows;\n                    this.rowsChange.emit(this.rows);\n                }\n            }\n            if (state.sortField) {\n                this.restoringSort = true;\n                this._sortField = state.sortField;\n                this._sortOrder = state.sortOrder;\n            }\n            if (state.multiSortMeta) {\n                this.restoringSort = true;\n                this._multiSortMeta = state.multiSortMeta;\n            }\n            if (state.filters) {\n                this.restoringFilter = true;\n                this.filters = state.filters;\n            }\n            if (this.resizableColumns) {\n                this.columnWidthsState = state.columnWidths;\n                this.tableWidthState = state.tableWidth;\n                this.wrapperWidthState = state.wrapperWidth;\n            }\n            if (state.expandedRowKeys) {\n                this.expandedRowKeys = state.expandedRowKeys;\n            }\n            if (state.selection) {\n                Promise.resolve(null).then(() => this.selectionChange.emit(state.selection));\n            }\n            this.stateRestored = true;\n            this.onStateRestore.emit(state);\n        }\n    }\n    saveColumnWidths(state) {\n        let widths = [];\n        let headers = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-thead > tr > th');\n        headers.forEach(header => widths.push(DomHandler.getOuterWidth(header)));\n        state.columnWidths = widths.join(',');\n        if (this.columnResizeMode === 'expand') {\n            state.tableWidth = DomHandler.getOuterWidth(this.tableViewChild.nativeElement) + 'px';\n            state.wrapperWidth = this.wrapperViewChild.nativeElement.style.width;\n        }\n    }\n    restoreColumnWidths() {\n        if (this.columnWidthsState) {\n            let widths = this.columnWidthsState.split(',');\n            if (this.columnResizeMode === 'expand') {\n                if (this.tableWidthState)\n                    this.tableViewChild.nativeElement.style.width = this.tableWidthState;\n                if (this.wrapperWidthState)\n                    this.wrapperViewChild.nativeElement.style.width = this.wrapperWidthState;\n            }\n            this.createStyleElement();\n            if (this.scrollable && widths && widths.length > 0) {\n                let innerHTML = '';\n                widths.forEach((width, index) => {\n                    innerHTML += `\n                            #${this.id} .p-datatable-thead > tr > th:nth-child(${index + 1}) {\n                                flex: 0 0 ${width}px;\n                            }\n\n                            #${this.id} .p-datatable-tbody > tr > td:nth-child(${index + 1}) {\n                                flex: 0 0 ${width}px;\n                            }\n                        `;\n                });\n                this.styleElement.innerHTML = innerHTML;\n            }\n            else {\n                DomHandler.find(this.tableViewChild.nativeElement, '.p-datatable-thead > tr > th').forEach((header, index) => {\n                    header.style.width = widths[index] + 'px';\n                });\n            }\n        }\n    }\n    saveColumnOrder(state) {\n        if (this.columns) {\n            let columnOrder = [];\n            this.columns.map(column => {\n                columnOrder.push(column.field || column.key);\n            });\n            state.columnOrder = columnOrder;\n        }\n    }\n    restoreColumnOrder() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n        if (stateString) {\n            let state = JSON.parse(stateString);\n            let columnOrder = state.columnOrder;\n            if (columnOrder) {\n                let reorderedColumns = [];\n                columnOrder.map(key => {\n                    let col = this.findColumnByKey(key);\n                    if (col) {\n                        reorderedColumns.push(col);\n                    }\n                });\n                this.columnOrderStateRestored = true;\n                this.columns = reorderedColumns;\n            }\n        }\n    }\n    updateScrollWidth() {\n        if (this.tableViewChild && this.tableViewChild.nativeElement) {\n            let parentElementHeight = DomHandler.getWidth(this.tableViewChild.nativeElement.parentElement);\n            if (this.tableViewChild.nativeElement.scrollWidth > parentElementHeight) {\n                this.tableViewChild.nativeElement.style.width = this.tableViewChild.nativeElement.scrollWidth + 'px';\n            }\n            else {\n                this.tableViewChild.nativeElement.style.width = (parentElementHeight - DomHandler.calculateScrollbarHeight()) + 'px';\n            }\n        }\n    }\n    findColumnByKey(key) {\n        if (this.columns) {\n            for (let col of this.columns) {\n                if (col.key === key || col.field === key)\n                    return col;\n                else\n                    continue;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    createStyleElement() {\n        this.styleElement = document.createElement('style');\n        this.styleElement.type = 'text/css';\n        document.head.appendChild(this.styleElement);\n    }\n    createResponsiveStyle() {\n        if (!this.responsiveStyleElement) {\n            this.responsiveStyleElement = document.createElement('style');\n            this.responsiveStyleElement.type = 'text/css';\n            document.head.appendChild(this.responsiveStyleElement);\n            let innerHTML = `\n@media screen and (max-width: ${this.breakpoint}) {\n    #${this.id} .p-datatable-thead > tr > th,\n    #${this.id} .p-datatable-tfoot > tr > td {\n        display: none !important;\n    }\n\n    #${this.id} .p-datatable-tbody > tr > td {\n        display: flex;\n        width: 100% !important;\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    #${this.id} .p-datatable-tbody > tr > td:not(:last-child) {\n        border: 0 none;\n    }\n\n    #${this.id}.p-datatable-gridlines .p-datatable-tbody > tr > td:last-child {\n        border-top: 0;\n        border-right: 0;\n        border-left: 0;\n    }\n\n    #${this.id} .p-datatable-tbody > tr > td > .p-column-title {\n        display: block;\n    }\n}\n`;\n            this.responsiveStyleElement.innerHTML = innerHTML;\n        }\n    }\n    destroyResponsiveStyle() {\n        if (this.responsiveStyleElement) {\n            document.head.removeChild(this.responsiveStyleElement);\n            this.responsiveStyleElement = null;\n        }\n    }\n    destroyStyleElement() {\n        if (this.styleElement) {\n            document.head.removeChild(this.styleElement);\n            this.styleElement = null;\n        }\n    }\n    ngOnDestroy() {\n        this.unbindDocumentEditListener();\n        this.editingCell = null;\n        this.initialized = null;\n        if (this.virtualScrollSubscription) {\n            this.virtualScrollSubscription.unsubscribe();\n        }\n        this.destroyStyleElement();\n        this.destroyResponsiveStyle();\n    }\n}\nTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Table, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: TableService }, { token: i0.ChangeDetectorRef }, { token: i1.FilterService }, { token: i1.OverlayService }], target: i0.ɵɵFactoryTarget.Component });\nTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: Table, selector: \"p-table\", inputs: { frozenColumns: \"frozenColumns\", frozenValue: \"frozenValue\", style: \"style\", styleClass: \"styleClass\", tableStyle: \"tableStyle\", tableStyleClass: \"tableStyleClass\", paginator: \"paginator\", pageLinks: \"pageLinks\", rowsPerPageOptions: \"rowsPerPageOptions\", alwaysShowPaginator: \"alwaysShowPaginator\", paginatorPosition: \"paginatorPosition\", paginatorDropdownAppendTo: \"paginatorDropdownAppendTo\", paginatorDropdownScrollHeight: \"paginatorDropdownScrollHeight\", currentPageReportTemplate: \"currentPageReportTemplate\", showCurrentPageReport: \"showCurrentPageReport\", showJumpToPageDropdown: \"showJumpToPageDropdown\", showFirstLastIcon: \"showFirstLastIcon\", showPageLinks: \"showPageLinks\", defaultSortOrder: \"defaultSortOrder\", sortMode: \"sortMode\", resetPageOnSort: \"resetPageOnSort\", selectionMode: \"selectionMode\", contextMenuSelection: \"contextMenuSelection\", contextMenuSelectionMode: \"contextMenuSelectionMode\", dataKey: \"dataKey\", metaKeySelection: \"metaKeySelection\", rowTrackBy: \"rowTrackBy\", lazy: \"lazy\", lazyLoadOnInit: \"lazyLoadOnInit\", compareSelectionBy: \"compareSelectionBy\", csvSeparator: \"csvSeparator\", exportFilename: \"exportFilename\", filters: \"filters\", globalFilterFields: \"globalFilterFields\", filterDelay: \"filterDelay\", filterLocale: \"filterLocale\", expandedRowKeys: \"expandedRowKeys\", editingRowKeys: \"editingRowKeys\", rowExpandMode: \"rowExpandMode\", scrollable: \"scrollable\", scrollDirection: \"scrollDirection\", rowGroupMode: \"rowGroupMode\", scrollHeight: \"scrollHeight\", virtualScroll: \"virtualScroll\", virtualScrollDelay: \"virtualScrollDelay\", virtualRowHeight: \"virtualRowHeight\", frozenWidth: \"frozenWidth\", responsive: \"responsive\", contextMenu: \"contextMenu\", resizableColumns: \"resizableColumns\", columnResizeMode: \"columnResizeMode\", reorderableColumns: \"reorderableColumns\", loading: \"loading\", loadingIcon: \"loadingIcon\", showLoader: \"showLoader\", rowHover: \"rowHover\", customSort: \"customSort\", showInitialSortBadge: \"showInitialSortBadge\", autoLayout: \"autoLayout\", exportFunction: \"exportFunction\", stateKey: \"stateKey\", stateStorage: \"stateStorage\", editMode: \"editMode\", groupRowsBy: \"groupRowsBy\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\", responsiveLayout: \"responsiveLayout\", breakpoint: \"breakpoint\", value: \"value\", columns: \"columns\", first: \"first\", rows: \"rows\", totalRecords: \"totalRecords\", sortField: \"sortField\", sortOrder: \"sortOrder\", multiSortMeta: \"multiSortMeta\", selection: \"selection\" }, outputs: { selectionChange: \"selectionChange\", contextMenuSelectionChange: \"contextMenuSelectionChange\", onRowSelect: \"onRowSelect\", onRowUnselect: \"onRowUnselect\", onPage: \"onPage\", onSort: \"onSort\", onFilter: \"onFilter\", onLazyLoad: \"onLazyLoad\", onRowExpand: \"onRowExpand\", onRowCollapse: \"onRowCollapse\", onContextMenuSelect: \"onContextMenuSelect\", onColResize: \"onColResize\", onColReorder: \"onColReorder\", onRowReorder: \"onRowReorder\", onEditInit: \"onEditInit\", onEditComplete: \"onEditComplete\", onEditCancel: \"onEditCancel\", onHeaderCheckboxToggle: \"onHeaderCheckboxToggle\", sortFunction: \"sortFunction\", firstChange: \"firstChange\", rowsChange: \"rowsChange\", onStateSave: \"onStateSave\", onStateRestore: \"onStateRestore\" }, providers: [TableService], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }, { propertyName: \"resizeHelperViewChild\", first: true, predicate: [\"resizeHelper\"], descendants: true }, { propertyName: \"reorderIndicatorUpViewChild\", first: true, predicate: [\"reorderIndicatorUp\"], descendants: true }, { propertyName: \"reorderIndicatorDownViewChild\", first: true, predicate: [\"reorderIndicatorDown\"], descendants: true }, { propertyName: \"wrapperViewChild\", first: true, predicate: [\"wrapper\"], descendants: true }, { propertyName: \"tableViewChild\", first: true, predicate: [\"table\"], descendants: true }, { propertyName: \"tableHeaderViewChild\", first: true, predicate: [\"tableHeader\"], descendants: true }, { propertyName: \"virtualScrollBody\", first: true, predicate: CdkVirtualScrollViewport, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\"\n            [ngClass]=\"{'p-datatable p-component': true,\n                'p-datatable-hoverable-rows': (rowHover||selectionMode),\n                'p-datatable-auto-layout': autoLayout,\n                'p-datatable-resizable': resizableColumns,\n                'p-datatable-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\n                'p-datatable-scrollable': scrollable,\n                'p-datatable-scrollable-vertical': scrollable && scrollDirection === 'vertical',\n                'p-datatable-scrollable-horizontal': scrollable && scrollDirection === 'horizontal',\n                'p-datatable-scrollable-both': scrollable && scrollDirection === 'both',\n                'p-datatable-flex-scrollable': (scrollable && scrollHeight === 'flex'),\n                'p-datatable-responsive-stack': responsiveLayout === 'stack',\n                'p-datatable-responsive-scroll': responsiveLayout === 'scroll',\n                'p-datatable-responsive': responsive,\n                'p-datatable-grouped-header': headerGroupedTemplate != null,\n                'p-datatable-grouped-footer': footerGroupedTemplate != null}\" [attr.id]=\"id\">\n            <div class=\"p-datatable-loading-overlay p-component-overlay\" *ngIf=\"loading && showLoader\">\n                <i [class]=\"'p-datatable-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"p-datatable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div #wrapper class=\"p-datatable-wrapper\" [ngStyle]=\"{height: scrollHeight}\">\n                <table #table *ngIf=\"!virtualScroll\" role=\"table\" class=\"p-datatable-table\" [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"p-datatable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerGroupedTemplate||headerTemplate; context: {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-datatable-tbody p-datatable-frozen-tbody\" *ngIf=\"frozenValue||frozenBodyTemplate\" [value]=\"frozenValue\" [frozenRows]=\"true\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozenBodyTemplate\" [frozen]=\"true\"></tbody>\n                    <tbody class=\"p-datatable-tbody\" [value]=\"dataToRender\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                    <tfoot *ngIf=\"footerGroupedTemplate||footerTemplate\" class=\"p-datatable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerGroupedTemplate||footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n                <cdk-virtual-scroll-viewport *ngIf=\"virtualScroll\" [itemSize]=\"virtualRowHeight\" tabindex=\"0\" [style.height]=\"scrollHeight !== 'flex' ? scrollHeight : undefined\" [minBufferPx]=\"minBufferPx\" [maxBufferPx]=\"maxBufferPx\" (scrolledIndexChange)=\"onScrollIndexChange($event)\" class=\"p-datatable-virtual-scrollable-body\">\n                    <table #table role=\"table\" class=\"p-datatable-table\" [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                        <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                        <thead #tableHeader class=\"p-datatable-thead\">\n                            <ng-container *ngTemplateOutlet=\"headerGroupedTemplate||headerTemplate; context: {$implicit: columns}\"></ng-container>\n                        </thead>\n                        <tbody class=\"p-datatable-tbody p-datatable-frozen-tbody\" *ngIf=\"frozenValue||frozenBodyTemplate\" [value]=\"frozenValue\" [frozenRows]=\"true\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\" [frozen]=\"true\"></tbody>\n                        <tbody class=\"p-datatable-tbody\" [value]=\"dataToRender\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                        <tfoot *ngIf=\"footerGroupedTemplate||footerTemplate\" class=\"p-datatable-tfoot\">\n                            <ng-container *ngTemplateOutlet=\"footerGroupedTemplate||footerTemplate; context {$implicit: columns}\"></ng-container>\n                        </tfoot>\n                    </table>\n                </cdk-virtual-scroll-viewport>\n            </div>\n\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div *ngIf=\"summaryTemplate\" class=\"p-datatable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n        </div>\n    `, isInline: true, styles: [\".p-datatable{position:relative}.p-datatable table{border-collapse:collapse;width:100%;table-layout:fixed}.p-datatable .p-sortable-column{cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none}.p-datatable .p-sortable-column .p-column-title,.p-datatable .p-sortable-column .p-sortable-column-badge,.p-datatable .p-sortable-column .p-sortable-column-icon{vertical-align:middle}.p-datatable .p-sortable-column .p-sortable-column-badge{display:inline-flex;align-items:center;justify-content:center}.p-datatable-auto-layout>.p-datatable-wrapper{overflow-x:auto}.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-responsive-scroll>.p-datatable-wrapper{overflow-x:auto}.p-datatable-auto-layout>.p-datatable-wrapper>table,.p-datatable-responsive-scroll>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-hoverable-rows .p-selectable-row{cursor:pointer}.p-datatable-scrollable .p-datatable-wrapper{position:relative;overflow:auto}.p-datatable-scrollable .p-datatable-table,.p-datatable-scrollable .p-datatable-tbody,.p-datatable-scrollable .p-datatable-tfoot,.p-datatable-scrollable .p-datatable-thead{display:block}.p-datatable-scrollable .p-datatable-tbody>tr,.p-datatable-scrollable .p-datatable-tfoot>tr,.p-datatable-scrollable .p-datatable-thead>tr{display:flex;flex-wrap:nowrap;width:100%}.p-datatable-scrollable .p-datatable-tbody>tr>td,.p-datatable-scrollable .p-datatable-tfoot>tr>td,.p-datatable-scrollable .p-datatable-thead>tr>th{display:flex;flex:1 1 0;align-items:center}.p-datatable-scrollable .p-datatable-thead{position:sticky;top:0;z-index:1}.p-datatable-scrollable .p-datatable-frozen-tbody{position:sticky;z-index:1}.p-datatable-scrollable .p-datatable-tfoot{position:sticky;bottom:0;z-index:1}.p-datatable-scrollable .p-frozen-column{position:sticky;background:inherit}.p-datatable-scrollable th.p-frozen-column{z-index:1}.p-datatable-scrollable-both .p-datatable-tbody>tr>td,.p-datatable-scrollable-both .p-datatable-tfoot>tr>td,.p-datatable-scrollable-both .p-datatable-thead>tr>th,.p-datatable-scrollable-horizontal .p-datatable-tfoot>tr>td,.p-datatable-scrollable-horizontal .p-datatable-thead>tr>th\\n.p-datatable-scrollable-horizontal .p-datatable-tbody>tr>td{flex:0 0 auto}.p-datatable-flex-scrollable .p-datatable-wrapper{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-scrollable .p-rowgroup-header{position:sticky;z-index:1}.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot,.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead{display:table;border-collapse:collapse;width:100%;table-layout:fixed}.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot>tr,.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead>tr{display:table-row}.p-datatable-scrollable.p-datatable-grouped-footer .p-datatable-tfoot>tr>td,.p-datatable-scrollable.p-datatable-grouped-header .p-datatable-thead>tr>th{display:table-cell}.p-datatable-flex-scrollable{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-flex-scrollable .p-datatable-virtual-scrollable-body{flex:1}.p-datatable-resizable>.p-datatable-wrapper{overflow-x:auto}.p-datatable-resizable .p-datatable-tbody>tr>td,.p-datatable-resizable .p-datatable-tfoot>tr>td,.p-datatable-resizable .p-datatable-thead>tr>th{overflow:hidden;white-space:nowrap}.p-datatable-resizable .p-resizable-column{background-clip:padding-box;position:relative}.p-datatable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-datatable .p-column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5rem;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.p-datatable .p-column-resizer-helper{width:1px;position:absolute;z-index:10;display:none}.p-datatable .p-row-editor-cancel,.p-datatable .p-row-editor-init,.p-datatable .p-row-editor-save,.p-datatable .p-row-toggler{display:inline-flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-datatable-reorder-indicator-down,.p-datatable-reorder-indicator-up{position:absolute;display:none}.p-datatable-reorderablerow-handle,[pReorderableColumn]{cursor:move}.p-datatable .p-datatable-loading-overlay{position:absolute;display:flex;align-items:center;justify-content:center;z-index:2}.p-column-filter-row{display:flex;align-items:center;width:100%}.p-column-filter-menu{display:inline-flex}.p-column-filter-row p-columnfilterformelement{flex:1 1 auto;width:1%}.p-column-filter-clear-button,.p-column-filter-menu-button{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-column-filter-overlay{position:absolute;top:0;left:0}.p-column-filter-row-items{margin:0;padding:0;list-style:none}.p-column-filter-row-item{cursor:pointer}.p-column-filter-add-button,.p-column-filter-remove-button{justify-content:center}.p-column-filter-add-button .p-button-label,.p-column-filter-remove-button .p-button-label{flex-grow:0}.p-column-filter-buttonbar{display:flex;align-items:center;justify-content:space-between}.p-column-filter-buttonbar .p-button{width:auto}.p-datatable .p-datatable-tbody>tr>td>.p-column-title{display:none}cdk-virtual-scroll-viewport{outline:0 none}\"], components: [{ type: i0.forwardRef(function () { return i2.Paginator; }), selector: \"p-paginator\", inputs: [\"pageLinkSize\", \"style\", \"styleClass\", \"alwaysShow\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showCurrentPageReport\", \"showFirstLastIcon\", \"totalRecords\", \"rows\", \"rowsPerPageOptions\", \"showJumpToPageDropdown\", \"showPageLinks\", \"dropdownItemTemplate\", \"first\"], outputs: [\"onPageChange\"] }, { type: i0.forwardRef(function () { return TableBody; }), selector: \"[pTableBody]\", inputs: [\"pTableBody\", \"pTableBodyTemplate\", \"value\", \"frozen\", \"frozenRows\"] }, { type: i0.forwardRef(function () { return i3.CdkVirtualScrollViewport; }), selector: \"cdk-virtual-scroll-viewport\", inputs: [\"orientation\"], outputs: [\"scrolledIndexChange\"] }], directives: [{ type: i0.forwardRef(function () { return i4.NgStyle; }), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i0.forwardRef(function () { return i4.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i0.forwardRef(function () { return i4.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i0.forwardRef(function () { return i3.CdkFixedSizeVirtualScroll; }), selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: [\"itemSize\", \"minBufferPx\", \"maxBufferPx\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Table, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-table',\n                    template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\"\n            [ngClass]=\"{'p-datatable p-component': true,\n                'p-datatable-hoverable-rows': (rowHover||selectionMode),\n                'p-datatable-auto-layout': autoLayout,\n                'p-datatable-resizable': resizableColumns,\n                'p-datatable-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\n                'p-datatable-scrollable': scrollable,\n                'p-datatable-scrollable-vertical': scrollable && scrollDirection === 'vertical',\n                'p-datatable-scrollable-horizontal': scrollable && scrollDirection === 'horizontal',\n                'p-datatable-scrollable-both': scrollable && scrollDirection === 'both',\n                'p-datatable-flex-scrollable': (scrollable && scrollHeight === 'flex'),\n                'p-datatable-responsive-stack': responsiveLayout === 'stack',\n                'p-datatable-responsive-scroll': responsiveLayout === 'scroll',\n                'p-datatable-responsive': responsive,\n                'p-datatable-grouped-header': headerGroupedTemplate != null,\n                'p-datatable-grouped-footer': footerGroupedTemplate != null}\" [attr.id]=\"id\">\n            <div class=\"p-datatable-loading-overlay p-component-overlay\" *ngIf=\"loading && showLoader\">\n                <i [class]=\"'p-datatable-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"p-datatable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div #wrapper class=\"p-datatable-wrapper\" [ngStyle]=\"{height: scrollHeight}\">\n                <table #table *ngIf=\"!virtualScroll\" role=\"table\" class=\"p-datatable-table\" [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"p-datatable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerGroupedTemplate||headerTemplate; context: {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-datatable-tbody p-datatable-frozen-tbody\" *ngIf=\"frozenValue||frozenBodyTemplate\" [value]=\"frozenValue\" [frozenRows]=\"true\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozenBodyTemplate\" [frozen]=\"true\"></tbody>\n                    <tbody class=\"p-datatable-tbody\" [value]=\"dataToRender\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                    <tfoot *ngIf=\"footerGroupedTemplate||footerTemplate\" class=\"p-datatable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerGroupedTemplate||footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n                <cdk-virtual-scroll-viewport *ngIf=\"virtualScroll\" [itemSize]=\"virtualRowHeight\" tabindex=\"0\" [style.height]=\"scrollHeight !== 'flex' ? scrollHeight : undefined\" [minBufferPx]=\"minBufferPx\" [maxBufferPx]=\"maxBufferPx\" (scrolledIndexChange)=\"onScrollIndexChange($event)\" class=\"p-datatable-virtual-scrollable-body\">\n                    <table #table role=\"table\" class=\"p-datatable-table\" [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                        <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                        <thead #tableHeader class=\"p-datatable-thead\">\n                            <ng-container *ngTemplateOutlet=\"headerGroupedTemplate||headerTemplate; context: {$implicit: columns}\"></ng-container>\n                        </thead>\n                        <tbody class=\"p-datatable-tbody p-datatable-frozen-tbody\" *ngIf=\"frozenValue||frozenBodyTemplate\" [value]=\"frozenValue\" [frozenRows]=\"true\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\" [frozen]=\"true\"></tbody>\n                        <tbody class=\"p-datatable-tbody\" [value]=\"dataToRender\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                        <tfoot *ngIf=\"footerGroupedTemplate||footerTemplate\" class=\"p-datatable-tfoot\">\n                            <ng-container *ngTemplateOutlet=\"footerGroupedTemplate||footerTemplate; context {$implicit: columns}\"></ng-container>\n                        </tfoot>\n                    </table>\n                </cdk-virtual-scroll-viewport>\n            </div>\n\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div *ngIf=\"summaryTemplate\" class=\"p-datatable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n        </div>\n    `,\n                    providers: [TableService],\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    styleUrls: ['./table.css']\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: TableService }, { type: i0.ChangeDetectorRef }, { type: i1.FilterService }, { type: i1.OverlayService }]; }, propDecorators: { frozenColumns: [{\n                type: Input\n            }], frozenValue: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], tableStyle: [{\n                type: Input\n            }], tableStyleClass: [{\n                type: Input\n            }], paginator: [{\n                type: Input\n            }], pageLinks: [{\n                type: Input\n            }], rowsPerPageOptions: [{\n                type: Input\n            }], alwaysShowPaginator: [{\n                type: Input\n            }], paginatorPosition: [{\n                type: Input\n            }], paginatorDropdownAppendTo: [{\n                type: Input\n            }], paginatorDropdownScrollHeight: [{\n                type: Input\n            }], currentPageReportTemplate: [{\n                type: Input\n            }], showCurrentPageReport: [{\n                type: Input\n            }], showJumpToPageDropdown: [{\n                type: Input\n            }], showFirstLastIcon: [{\n                type: Input\n            }], showPageLinks: [{\n                type: Input\n            }], defaultSortOrder: [{\n                type: Input\n            }], sortMode: [{\n                type: Input\n            }], resetPageOnSort: [{\n                type: Input\n            }], selectionMode: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], contextMenuSelection: [{\n                type: Input\n            }], contextMenuSelectionChange: [{\n                type: Output\n            }], contextMenuSelectionMode: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], metaKeySelection: [{\n                type: Input\n            }], rowTrackBy: [{\n                type: Input\n            }], lazy: [{\n                type: Input\n            }], lazyLoadOnInit: [{\n                type: Input\n            }], compareSelectionBy: [{\n                type: Input\n            }], csvSeparator: [{\n                type: Input\n            }], exportFilename: [{\n                type: Input\n            }], filters: [{\n                type: Input\n            }], globalFilterFields: [{\n                type: Input\n            }], filterDelay: [{\n                type: Input\n            }], filterLocale: [{\n                type: Input\n            }], expandedRowKeys: [{\n                type: Input\n            }], editingRowKeys: [{\n                type: Input\n            }], rowExpandMode: [{\n                type: Input\n            }], scrollable: [{\n                type: Input\n            }], scrollDirection: [{\n                type: Input\n            }], rowGroupMode: [{\n                type: Input\n            }], scrollHeight: [{\n                type: Input\n            }], virtualScroll: [{\n                type: Input\n            }], virtualScrollDelay: [{\n                type: Input\n            }], virtualRowHeight: [{\n                type: Input\n            }], frozenWidth: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }], contextMenu: [{\n                type: Input\n            }], resizableColumns: [{\n                type: Input\n            }], columnResizeMode: [{\n                type: Input\n            }], reorderableColumns: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], loadingIcon: [{\n                type: Input\n            }], showLoader: [{\n                type: Input\n            }], rowHover: [{\n                type: Input\n            }], customSort: [{\n                type: Input\n            }], showInitialSortBadge: [{\n                type: Input\n            }], autoLayout: [{\n                type: Input\n            }], exportFunction: [{\n                type: Input\n            }], stateKey: [{\n                type: Input\n            }], stateStorage: [{\n                type: Input\n            }], editMode: [{\n                type: Input\n            }], groupRowsBy: [{\n                type: Input\n            }], minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }], responsiveLayout: [{\n                type: Input\n            }], breakpoint: [{\n                type: Input\n            }], onRowSelect: [{\n                type: Output\n            }], onRowUnselect: [{\n                type: Output\n            }], onPage: [{\n                type: Output\n            }], onSort: [{\n                type: Output\n            }], onFilter: [{\n                type: Output\n            }], onLazyLoad: [{\n                type: Output\n            }], onRowExpand: [{\n                type: Output\n            }], onRowCollapse: [{\n                type: Output\n            }], onContextMenuSelect: [{\n                type: Output\n            }], onColResize: [{\n                type: Output\n            }], onColReorder: [{\n                type: Output\n            }], onRowReorder: [{\n                type: Output\n            }], onEditInit: [{\n                type: Output\n            }], onEditComplete: [{\n                type: Output\n            }], onEditCancel: [{\n                type: Output\n            }], onHeaderCheckboxToggle: [{\n                type: Output\n            }], sortFunction: [{\n                type: Output\n            }], firstChange: [{\n                type: Output\n            }], rowsChange: [{\n                type: Output\n            }], onStateSave: [{\n                type: Output\n            }], onStateRestore: [{\n                type: Output\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container']\n            }], resizeHelperViewChild: [{\n                type: ViewChild,\n                args: ['resizeHelper']\n            }], reorderIndicatorUpViewChild: [{\n                type: ViewChild,\n                args: ['reorderIndicatorUp']\n            }], reorderIndicatorDownViewChild: [{\n                type: ViewChild,\n                args: ['reorderIndicatorDown']\n            }], wrapperViewChild: [{\n                type: ViewChild,\n                args: ['wrapper']\n            }], tableViewChild: [{\n                type: ViewChild,\n                args: ['table']\n            }], tableHeaderViewChild: [{\n                type: ViewChild,\n                args: ['tableHeader']\n            }], virtualScrollBody: [{\n                type: ViewChild,\n                args: [CdkVirtualScrollViewport]\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], value: [{\n                type: Input\n            }], columns: [{\n                type: Input\n            }], first: [{\n                type: Input\n            }], rows: [{\n                type: Input\n            }], totalRecords: [{\n                type: Input\n            }], sortField: [{\n                type: Input\n            }], sortOrder: [{\n                type: Input\n            }], multiSortMeta: [{\n                type: Input\n            }], selection: [{\n                type: Input\n            }] } });\nclass TableBody {\n    constructor(dt, tableService, cd, el) {\n        this.dt = dt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.el = el;\n        this.subscription = this.dt.tableService.valueSource$.subscribe(() => {\n            if (this.dt.virtualScroll) {\n                this.cd.detectChanges();\n            }\n        });\n    }\n    get value() {\n        return this._value;\n    }\n    set value(val) {\n        this._value = val;\n        if (this.frozenRows) {\n            this.updateFrozenRowStickyPosition();\n        }\n        if (this.dt.scrollable && this.dt.rowGroupMode === 'subheader') {\n            this.updateFrozenRowGroupHeaderStickyPosition();\n        }\n    }\n    ngAfterViewInit() {\n        if (this.frozenRows) {\n            this.updateFrozenRowStickyPosition();\n        }\n        if (this.dt.scrollable && this.dt.rowGroupMode === 'subheader') {\n            this.updateFrozenRowGroupHeaderStickyPosition();\n        }\n    }\n    shouldRenderRowGroupHeader(value, rowData, i) {\n        let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        let prevRowData = value[i - 1];\n        if (prevRowData) {\n            let previousRowFieldData = ObjectUtils.resolveFieldData(prevRowData, this.dt.groupRowsBy);\n            return currentRowFieldData !== previousRowFieldData;\n        }\n        else {\n            return true;\n        }\n    }\n    shouldRenderRowGroupFooter(value, rowData, i) {\n        let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        let nextRowData = value[i + 1];\n        if (nextRowData) {\n            let nextRowFieldData = ObjectUtils.resolveFieldData(nextRowData, this.dt.groupRowsBy);\n            return currentRowFieldData !== nextRowFieldData;\n        }\n        else {\n            return true;\n        }\n    }\n    shouldRenderRowspan(value, rowData, i) {\n        let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        let prevRowData = value[i - 1];\n        if (prevRowData) {\n            let previousRowFieldData = ObjectUtils.resolveFieldData(prevRowData, this.dt.groupRowsBy);\n            return currentRowFieldData !== previousRowFieldData;\n        }\n        else {\n            return true;\n        }\n    }\n    calculateRowGroupSize(value, rowData, index) {\n        let currentRowFieldData = ObjectUtils.resolveFieldData(rowData, this.dt.groupRowsBy);\n        let nextRowFieldData = currentRowFieldData;\n        let groupRowSpan = 0;\n        while (currentRowFieldData === nextRowFieldData) {\n            groupRowSpan++;\n            let nextRowData = value[++index];\n            if (nextRowData) {\n                nextRowFieldData = ObjectUtils.resolveFieldData(nextRowData, this.dt.groupRowsBy);\n            }\n            else {\n                break;\n            }\n        }\n        return groupRowSpan === 1 ? null : groupRowSpan;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    updateFrozenRowStickyPosition() {\n        this.el.nativeElement.style.top = DomHandler.getOuterHeight(this.el.nativeElement.previousElementSibling) + 'px';\n    }\n    updateFrozenRowGroupHeaderStickyPosition() {\n        if (this.el.nativeElement.previousElementSibling) {\n            let tableHeaderHeight = DomHandler.getOuterHeight(this.el.nativeElement.previousElementSibling);\n            this.dt.rowGroupHeaderStyleObject.top = tableHeaderHeight + 'px';\n        }\n    }\n}\nTableBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TableBody, deps: [{ token: Table }, { token: TableService }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTableBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: TableBody, selector: \"[pTableBody]\", inputs: { columns: [\"pTableBody\", \"columns\"], template: [\"pTableBodyTemplate\", \"template\"], value: \"value\", frozen: \"frozen\", frozenRows: \"frozenRows\" }, ngImport: i0, template: `\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && !dt.virtualScroll\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngIf=\"dt.groupHeaderTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupHeader(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupHeaderTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.rowGroupMode !== 'rowspan'\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.rowGroupMode === 'rowspan'\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen, rowgroup: shouldRenderRowspan(value, rowData, rowIndex), rowspan: calculateRowGroupSize(value, rowData, rowIndex)}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.groupFooterTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupFooter(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupFooterTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && dt.virtualScroll\">\n            <ng-template cdkVirtualFor let-rowData let-rowIndex=\"index\" [cdkVirtualForOf]=\"value\" [cdkVirtualForTrackBy]=\"dt.rowTrackBy\" [cdkVirtualForTemplateCacheSize]=\"0\">\n                <ng-container *ngTemplateOutlet=\"rowData ? template: dt.loadingBodyTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.expandedRowTemplate && !(frozen && dt.frozenExpandedRowTemplate)\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngIf=\"!dt.groupHeaderTemplate\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.groupHeaderTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupHeader(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupHeaderTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, frozen: frozen}\"></ng-container>\n                    <ng-container *ngIf=\"dt.groupFooterTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupFooter(value, rowData, rowIndex)\" role=\"row\">\n                        <ng-container *ngTemplateOutlet=\"dt.groupFooterTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                    </ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.frozenExpandedRowTemplate && frozen\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.frozenExpandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, frozen: frozen}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.loadingBodyTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dt.isEmpty() && !dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n    `, isInline: true, directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i3.CdkVirtualForOf, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: [\"cdkVirtualForOf\", \"cdkVirtualForTrackBy\", \"cdkVirtualForTemplate\", \"cdkVirtualForTemplateCacheSize\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TableBody, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[pTableBody]',\n                    template: `\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && !dt.virtualScroll\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngIf=\"dt.groupHeaderTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupHeader(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupHeaderTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.rowGroupMode !== 'rowspan'\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.rowGroupMode === 'rowspan'\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen, rowgroup: shouldRenderRowspan(value, rowData, rowIndex), rowspan: calculateRowGroupSize(value, rowData, rowIndex)}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.groupFooterTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupFooter(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupFooterTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && dt.virtualScroll\">\n            <ng-template cdkVirtualFor let-rowData let-rowIndex=\"index\" [cdkVirtualForOf]=\"value\" [cdkVirtualForTrackBy]=\"dt.rowTrackBy\" [cdkVirtualForTemplateCacheSize]=\"0\">\n                <ng-container *ngTemplateOutlet=\"rowData ? template: dt.loadingBodyTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.expandedRowTemplate && !(frozen && dt.frozenExpandedRowTemplate)\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngIf=\"!dt.groupHeaderTemplate\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.groupHeaderTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupHeader(value, rowData, rowIndex)\" role=\"row\">\n                    <ng-container *ngTemplateOutlet=\"dt.groupHeaderTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, frozen: frozen}\"></ng-container>\n                    <ng-container *ngIf=\"dt.groupFooterTemplate && dt.rowGroupMode === 'subheader' && shouldRenderRowGroupFooter(value, rowData, rowIndex)\" role=\"row\">\n                        <ng-container *ngTemplateOutlet=\"dt.groupFooterTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                    </ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.frozenExpandedRowTemplate && frozen\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"value\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData)), frozen: frozen}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.frozenExpandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, frozen: frozen}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.loadingBodyTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dt.isEmpty() && !dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n    `,\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { columns: [{\n                type: Input,\n                args: [\"pTableBody\"]\n            }], template: [{\n                type: Input,\n                args: [\"pTableBodyTemplate\"]\n            }], value: [{\n                type: Input\n            }], frozen: [{\n                type: Input\n            }], frozenRows: [{\n                type: Input\n            }] } });\nclass RowGroupHeader {\n    constructor(dt) {\n        this.dt = dt;\n    }\n    get getFrozenRowGroupHeaderStickyPosition() {\n        return this.dt.rowGroupHeaderStyleObject ? this.dt.rowGroupHeaderStyleObject.top : '';\n    }\n}\nRowGroupHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: RowGroupHeader, deps: [{ token: Table }], target: i0.ɵɵFactoryTarget.Directive });\nRowGroupHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: RowGroupHeader, selector: \"[pRowGroupHeader]\", host: { properties: { \"class.p-rowgroup-header\": \"true\", \"style.top\": \"getFrozenRowGroupHeaderStickyPosition\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: RowGroupHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pRowGroupHeader]',\n                    host: {\n                        '[class.p-rowgroup-header]': 'true',\n                        '[style.top]': \"getFrozenRowGroupHeaderStickyPosition\"\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }]; } });\nclass FrozenColumn {\n    constructor(el) {\n        this.el = el;\n        this.alignFrozen = \"left\";\n        this._frozen = true;\n    }\n    get frozen() {\n        return this._frozen;\n    }\n    set frozen(val) {\n        this._frozen = val;\n        this.updateStickyPosition();\n    }\n    ngAfterViewInit() {\n        this.updateStickyPosition();\n    }\n    updateStickyPosition() {\n        if (this._frozen) {\n            if (this.alignFrozen === 'right') {\n                let right = 0;\n                let next = this.el.nativeElement.nextElementSibling;\n                if (next) {\n                    right = DomHandler.getOuterWidth(next) + parseFloat(next.style.right);\n                }\n                this.el.nativeElement.style.right = right + 'px';\n            }\n            else {\n                let left = 0;\n                let prev = this.el.nativeElement.previousElementSibling;\n                if (prev) {\n                    left = DomHandler.getOuterWidth(prev) + parseFloat(prev.style.left);\n                }\n                this.el.nativeElement.style.left = left + 'px';\n            }\n            let filterRow = this.el.nativeElement.parentElement.nextElementSibling;\n            if (filterRow) {\n                let index = DomHandler.index(this.el.nativeElement);\n                filterRow.children[index].style.left = this.el.nativeElement.style.left;\n                filterRow.children[index].style.right = this.el.nativeElement.style.right;\n            }\n        }\n    }\n}\nFrozenColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: FrozenColumn, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nFrozenColumn.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: FrozenColumn, selector: \"[pFrozenColumn]\", inputs: { frozen: \"frozen\", alignFrozen: \"alignFrozen\" }, host: { properties: { \"class.p-frozen-column\": \"frozen\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: FrozenColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pFrozenColumn]',\n                    host: {\n                        '[class.p-frozen-column]': 'frozen'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { frozen: [{\n                type: Input\n            }], alignFrozen: [{\n                type: Input\n            }] } });\nclass SortableColumn {\n    constructor(dt) {\n        this.dt = dt;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n                this.updateSortState();\n            });\n        }\n    }\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.updateSortState();\n        }\n    }\n    updateSortState() {\n        this.sorted = this.dt.isSorted(this.field);\n        this.sortOrder = this.sorted ? (this.dt.sortOrder === 1 ? 'ascending' : 'descending') : 'none';\n    }\n    onClick(event) {\n        if (this.isEnabled() && !this.isFilterElement(event.target)) {\n            this.updateSortState();\n            this.dt.sort({\n                originalEvent: event,\n                field: this.field\n            });\n            DomHandler.clearSelection();\n        }\n    }\n    onEnterKey(event) {\n        this.onClick(event);\n    }\n    isEnabled() {\n        return this.pSortableColumnDisabled !== true;\n    }\n    isFilterElement(element) {\n        return DomHandler.hasClass(element, 'pi-filter-icon') || DomHandler.hasClass(element, 'p-column-filter-menu-button');\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nSortableColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SortableColumn, deps: [{ token: Table }], target: i0.ɵɵFactoryTarget.Directive });\nSortableColumn.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: SortableColumn, selector: \"[pSortableColumn]\", inputs: { field: [\"pSortableColumn\", \"field\"], pSortableColumnDisabled: \"pSortableColumnDisabled\" }, host: { listeners: { \"click\": \"onClick($event)\", \"keydown.enter\": \"onEnterKey($event)\" }, properties: { \"class.p-sortable-column\": \"isEnabled()\", \"class.p-highlight\": \"sorted\", \"attr.tabindex\": \"isEnabled() ? \\\"0\\\" : null\", \"attr.role\": \"\\\"columnheader\\\"\", \"attr.aria-sort\": \"sortOrder\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SortableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pSortableColumn]',\n                    host: {\n                        '[class.p-sortable-column]': 'isEnabled()',\n                        '[class.p-highlight]': 'sorted',\n                        '[attr.tabindex]': 'isEnabled() ? \"0\" : null',\n                        '[attr.role]': '\"columnheader\"',\n                        '[attr.aria-sort]': 'sortOrder'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }]; }, propDecorators: { field: [{\n                type: Input,\n                args: [\"pSortableColumn\"]\n            }], pSortableColumnDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onEnterKey: [{\n                type: HostListener,\n                args: ['keydown.enter', ['$event']]\n            }] } });\nclass SortIcon {\n    constructor(dt, cd) {\n        this.dt = dt;\n        this.cd = cd;\n        this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n            this.updateSortState();\n        });\n    }\n    ngOnInit() {\n        this.updateSortState();\n    }\n    onClick(event) {\n        event.preventDefault();\n    }\n    updateSortState() {\n        if (this.dt.sortMode === 'single') {\n            this.sortOrder = this.dt.isSorted(this.field) ? this.dt.sortOrder : 0;\n        }\n        else if (this.dt.sortMode === 'multiple') {\n            let sortMeta = this.dt.getSortMeta(this.field);\n            this.sortOrder = sortMeta ? sortMeta.order : 0;\n        }\n        this.cd.markForCheck();\n    }\n    getMultiSortMetaIndex() {\n        let multiSortMeta = this.dt._multiSortMeta;\n        let index = -1;\n        if (multiSortMeta && this.dt.sortMode === 'multiple' && (this.dt.showInitialSortBadge || multiSortMeta.length > 1)) {\n            for (let i = 0; i < multiSortMeta.length; i++) {\n                let meta = multiSortMeta[i];\n                if (meta.field === this.field || meta.field === this.field) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    isMultiSorted() {\n        return this.dt.sortMode === 'multiple' && this.getMultiSortMetaIndex() > -1;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nSortIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SortIcon, deps: [{ token: Table }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nSortIcon.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: SortIcon, selector: \"p-sortIcon\", inputs: { field: \"field\" }, ngImport: i0, template: `\n        <i class=\"p-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\n        <span *ngIf=\"isMultiSorted()\" class=\"p-sortable-column-badge\">{{getMultiSortMetaIndex() + 1}}</span>\n    `, isInline: true, directives: [{ type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SortIcon, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-sortIcon',\n                    template: `\n        <i class=\"p-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\n        <span *ngIf=\"isMultiSorted()\" class=\"p-sortable-column-badge\">{{getMultiSortMetaIndex() + 1}}</span>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { field: [{\n                type: Input\n            }] } });\nclass SelectableRow {\n    constructor(dt, tableService) {\n        this.dt = dt;\n        this.tableService = tableService;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.dt.isSelected(this.data);\n            });\n        }\n    }\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.dt.isSelected(this.data);\n        }\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n        }\n    }\n    onTouchEnd(event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowTouchEnd(event);\n        }\n    }\n    onArrowDownKeyDown(event) {\n        if (!this.isEnabled()) {\n            return;\n        }\n        const row = event.currentTarget;\n        const nextRow = this.findNextSelectableRow(row);\n        if (nextRow) {\n            nextRow.focus();\n        }\n        event.preventDefault();\n    }\n    onArrowUpKeyDown(event) {\n        if (!this.isEnabled()) {\n            return;\n        }\n        const row = event.currentTarget;\n        const prevRow = this.findPrevSelectableRow(row);\n        if (prevRow) {\n            prevRow.focus();\n        }\n        event.preventDefault();\n    }\n    onEnterKeyDown(event) {\n        if (!this.isEnabled()) {\n            return;\n        }\n        this.dt.handleRowClick({\n            originalEvent: event,\n            rowData: this.data,\n            rowIndex: this.index\n        });\n    }\n    onPageDownKeyDown() {\n        if (this.dt.virtualScroll) {\n            this.dt.virtualScrollBody.elementRef.nativeElement.focus();\n        }\n    }\n    onSpaceKeydown() {\n        if (this.dt.virtualScroll && !this.dt.editingCell) {\n            this.dt.virtualScrollBody.elementRef.nativeElement.focus();\n        }\n    }\n    findNextSelectableRow(row) {\n        let nextRow = row.nextElementSibling;\n        if (nextRow) {\n            if (DomHandler.hasClass(nextRow, 'p-selectable-row'))\n                return nextRow;\n            else\n                return this.findNextSelectableRow(nextRow);\n        }\n        else {\n            return null;\n        }\n    }\n    findPrevSelectableRow(row) {\n        let prevRow = row.previousElementSibling;\n        if (prevRow) {\n            if (DomHandler.hasClass(prevRow, 'p-selectable-row'))\n                return prevRow;\n            else\n                return this.findPrevSelectableRow(prevRow);\n        }\n        else {\n            return null;\n        }\n    }\n    isEnabled() {\n        return this.pSelectableRowDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nSelectableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SelectableRow, deps: [{ token: Table }, { token: TableService }], target: i0.ɵɵFactoryTarget.Directive });\nSelectableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: SelectableRow, selector: \"[pSelectableRow]\", inputs: { data: [\"pSelectableRow\", \"data\"], index: [\"pSelectableRowIndex\", \"index\"], pSelectableRowDisabled: \"pSelectableRowDisabled\" }, host: { listeners: { \"click\": \"onClick($event)\", \"touchend\": \"onTouchEnd($event)\", \"keydown.arrowdown\": \"onArrowDownKeyDown($event)\", \"keydown.arrowup\": \"onArrowUpKeyDown($event)\", \"keydown.enter\": \"onEnterKeyDown($event)\", \"keydown.shift.enter\": \"onEnterKeyDown($event)\", \"keydown.meta.enter\": \"onEnterKeyDown($event)\", \"keydown.pagedown\": \"onPageDownKeyDown()\", \"keydown.pageup\": \"onPageDownKeyDown()\", \"keydown.home\": \"onPageDownKeyDown()\", \"keydown.end\": \"onPageDownKeyDown()\", \"keydown.space\": \"onSpaceKeydown()\" }, properties: { \"class.p-selectable-row\": \"isEnabled()\", \"class.p-highlight\": \"selected\", \"attr.tabindex\": \"isEnabled() ? 0 : undefined\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SelectableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pSelectableRow]',\n                    host: {\n                        '[class.p-selectable-row]': 'isEnabled()',\n                        '[class.p-highlight]': 'selected',\n                        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }]; }, propDecorators: { data: [{\n                type: Input,\n                args: [\"pSelectableRow\"]\n            }], index: [{\n                type: Input,\n                args: [\"pSelectableRowIndex\"]\n            }], pSelectableRowDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onTouchEnd: [{\n                type: HostListener,\n                args: ['touchend', ['$event']]\n            }], onArrowDownKeyDown: [{\n                type: HostListener,\n                args: ['keydown.arrowdown', ['$event']]\n            }], onArrowUpKeyDown: [{\n                type: HostListener,\n                args: ['keydown.arrowup', ['$event']]\n            }], onEnterKeyDown: [{\n                type: HostListener,\n                args: ['keydown.enter', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.shift.enter', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.meta.enter', ['$event']]\n            }], onPageDownKeyDown: [{\n                type: HostListener,\n                args: ['keydown.pagedown']\n            }, {\n                type: HostListener,\n                args: ['keydown.pageup']\n            }, {\n                type: HostListener,\n                args: ['keydown.home']\n            }, {\n                type: HostListener,\n                args: ['keydown.end']\n            }], onSpaceKeydown: [{\n                type: HostListener,\n                args: ['keydown.space']\n            }] } });\nclass SelectableRowDblClick {\n    constructor(dt, tableService) {\n        this.dt = dt;\n        this.tableService = tableService;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.dt.isSelected(this.data);\n            });\n        }\n    }\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.dt.isSelected(this.data);\n        }\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n        }\n    }\n    isEnabled() {\n        return this.pSelectableRowDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nSelectableRowDblClick.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SelectableRowDblClick, deps: [{ token: Table }, { token: TableService }], target: i0.ɵɵFactoryTarget.Directive });\nSelectableRowDblClick.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: SelectableRowDblClick, selector: \"[pSelectableRowDblClick]\", inputs: { data: [\"pSelectableRowDblClick\", \"data\"], index: [\"pSelectableRowIndex\", \"index\"], pSelectableRowDisabled: \"pSelectableRowDisabled\" }, host: { listeners: { \"dblclick\": \"onClick($event)\" }, properties: { \"class.p-selectable-row\": \"isEnabled()\", \"class.p-highlight\": \"selected\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SelectableRowDblClick, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pSelectableRowDblClick]',\n                    host: {\n                        '[class.p-selectable-row]': 'isEnabled()',\n                        '[class.p-highlight]': 'selected'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }]; }, propDecorators: { data: [{\n                type: Input,\n                args: [\"pSelectableRowDblClick\"]\n            }], index: [{\n                type: Input,\n                args: [\"pSelectableRowIndex\"]\n            }], pSelectableRowDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['dblclick', ['$event']]\n            }] } });\nclass ContextMenuRow {\n    constructor(dt, tableService, el) {\n        this.dt = dt;\n        this.tableService = tableService;\n        this.el = el;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.contextMenuSource$.subscribe((data) => {\n                this.selected = this.dt.equals(this.data, data);\n            });\n        }\n    }\n    onContextMenu(event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowRightClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n            this.el.nativeElement.focus();\n            event.preventDefault();\n        }\n    }\n    isEnabled() {\n        return this.pContextMenuRowDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nContextMenuRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ContextMenuRow, deps: [{ token: Table }, { token: TableService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nContextMenuRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: ContextMenuRow, selector: \"[pContextMenuRow]\", inputs: { data: [\"pContextMenuRow\", \"data\"], index: [\"pContextMenuRowIndex\", \"index\"], pContextMenuRowDisabled: \"pContextMenuRowDisabled\" }, host: { listeners: { \"contextmenu\": \"onContextMenu($event)\" }, properties: { \"class.p-highlight-contextmenu\": \"selected\", \"attr.tabindex\": \"isEnabled() ? 0 : undefined\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ContextMenuRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pContextMenuRow]',\n                    host: {\n                        '[class.p-highlight-contextmenu]': 'selected',\n                        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }, { type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input,\n                args: [\"pContextMenuRow\"]\n            }], index: [{\n                type: Input,\n                args: [\"pContextMenuRowIndex\"]\n            }], pContextMenuRowDisabled: [{\n                type: Input\n            }], onContextMenu: [{\n                type: HostListener,\n                args: ['contextmenu', ['$event']]\n            }] } });\nclass RowToggler {\n    constructor(dt) {\n        this.dt = dt;\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.dt.toggleRow(this.data, event);\n            event.preventDefault();\n        }\n    }\n    isEnabled() {\n        return this.pRowTogglerDisabled !== true;\n    }\n}\nRowToggler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: RowToggler, deps: [{ token: Table }], target: i0.ɵɵFactoryTarget.Directive });\nRowToggler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: RowToggler, selector: \"[pRowToggler]\", inputs: { data: [\"pRowToggler\", \"data\"], pRowTogglerDisabled: \"pRowTogglerDisabled\" }, host: { listeners: { \"click\": \"onClick($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: RowToggler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pRowToggler]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }]; }, propDecorators: { data: [{\n                type: Input,\n                args: ['pRowToggler']\n            }], pRowTogglerDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\nclass ResizableColumn {\n    constructor(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            DomHandler.addClass(this.el.nativeElement, 'p-resizable-column');\n            this.resizer = document.createElement('span');\n            this.resizer.className = 'p-column-resizer';\n            this.el.nativeElement.appendChild(this.resizer);\n            this.zone.runOutsideAngular(() => {\n                this.resizerMouseDownListener = this.onMouseDown.bind(this);\n                this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\n            });\n        }\n    }\n    bindDocumentEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.documentMouseMoveListener = this.onDocumentMouseMove.bind(this);\n            document.addEventListener('mousemove', this.documentMouseMoveListener);\n            this.documentMouseUpListener = this.onDocumentMouseUp.bind(this);\n            document.addEventListener('mouseup', this.documentMouseUpListener);\n        });\n    }\n    unbindDocumentEvents() {\n        if (this.documentMouseMoveListener) {\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\n            this.documentMouseMoveListener = null;\n        }\n        if (this.documentMouseUpListener) {\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\n            this.documentMouseUpListener = null;\n        }\n    }\n    onMouseDown(event) {\n        if (event.which === 1) {\n            this.dt.onColumnResizeBegin(event);\n            this.bindDocumentEvents();\n        }\n    }\n    onDocumentMouseMove(event) {\n        this.dt.onColumnResize(event);\n    }\n    onDocumentMouseUp(event) {\n        this.dt.onColumnResizeEnd();\n        this.unbindDocumentEvents();\n    }\n    isEnabled() {\n        return this.pResizableColumnDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.resizerMouseDownListener) {\n            this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\n        }\n        this.unbindDocumentEvents();\n    }\n}\nResizableColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ResizableColumn, deps: [{ token: Table }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nResizableColumn.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: ResizableColumn, selector: \"[pResizableColumn]\", inputs: { pResizableColumnDisabled: \"pResizableColumnDisabled\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ResizableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pResizableColumn]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { pResizableColumnDisabled: [{\n                type: Input\n            }] } });\nclass ReorderableColumn {\n    constructor(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            this.bindEvents();\n        }\n    }\n    bindEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.mouseDownListener = this.onMouseDown.bind(this);\n            this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n            this.dragStartListener = this.onDragStart.bind(this);\n            this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n            this.dragOverListener = this.onDragEnter.bind(this);\n            this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n            this.dragEnterListener = this.onDragEnter.bind(this);\n            this.el.nativeElement.addEventListener('dragenter', this.dragEnterListener);\n            this.dragLeaveListener = this.onDragLeave.bind(this);\n            this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n        });\n    }\n    unbindEvents() {\n        if (this.mouseDownListener) {\n            document.removeEventListener('mousedown', this.mouseDownListener);\n            this.mouseDownListener = null;\n        }\n        if (this.dragOverListener) {\n            document.removeEventListener('dragover', this.dragOverListener);\n            this.dragOverListener = null;\n        }\n        if (this.dragEnterListener) {\n            document.removeEventListener('dragenter', this.dragEnterListener);\n            this.dragEnterListener = null;\n        }\n        if (this.dragEnterListener) {\n            document.removeEventListener('dragenter', this.dragEnterListener);\n            this.dragEnterListener = null;\n        }\n        if (this.dragLeaveListener) {\n            document.removeEventListener('dragleave', this.dragLeaveListener);\n            this.dragLeaveListener = null;\n        }\n    }\n    onMouseDown(event) {\n        if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer'))\n            this.el.nativeElement.draggable = false;\n        else\n            this.el.nativeElement.draggable = true;\n    }\n    onDragStart(event) {\n        this.dt.onColumnDragStart(event, this.el.nativeElement);\n    }\n    onDragOver(event) {\n        event.preventDefault();\n    }\n    onDragEnter(event) {\n        this.dt.onColumnDragEnter(event, this.el.nativeElement);\n    }\n    onDragLeave(event) {\n        this.dt.onColumnDragLeave(event);\n    }\n    onDrop(event) {\n        if (this.isEnabled()) {\n            this.dt.onColumnDrop(event, this.el.nativeElement);\n        }\n    }\n    isEnabled() {\n        return this.pReorderableColumnDisabled !== true;\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n    }\n}\nReorderableColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReorderableColumn, deps: [{ token: Table }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nReorderableColumn.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: ReorderableColumn, selector: \"[pReorderableColumn]\", inputs: { pReorderableColumnDisabled: \"pReorderableColumnDisabled\" }, host: { listeners: { \"drop\": \"onDrop($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReorderableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pReorderableColumn]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { pReorderableColumnDisabled: [{\n                type: Input\n            }], onDrop: [{\n                type: HostListener,\n                args: ['drop', ['$event']]\n            }] } });\nclass EditableColumn {\n    constructor(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            DomHandler.addClass(this.el.nativeElement, 'p-editable-column');\n        }\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.dt.selfClick = true;\n            if (this.dt.editingCell) {\n                if (this.dt.editingCell !== this.el.nativeElement) {\n                    if (!this.dt.isEditingCellValid()) {\n                        return;\n                    }\n                    this.closeEditingCell(true, event);\n                    this.openCell();\n                }\n            }\n            else {\n                this.openCell();\n            }\n        }\n    }\n    openCell() {\n        this.dt.updateEditingCell(this.el.nativeElement, this.data, this.field, this.rowIndex);\n        DomHandler.addClass(this.el.nativeElement, 'p-cell-editing');\n        this.dt.onEditInit.emit({ field: this.field, data: this.data, index: this.rowIndex });\n        this.zone.runOutsideAngular(() => {\n            setTimeout(() => {\n                let focusCellSelector = this.pFocusCellSelector || 'input, textarea, select';\n                let focusableElement = DomHandler.findSingle(this.el.nativeElement, focusCellSelector);\n                if (focusableElement) {\n                    focusableElement.focus();\n                }\n            }, 50);\n        });\n        this.overlayEventListener = (e) => {\n            if (this.el && this.el.nativeElement.contains(e.target)) {\n                this.dt.selfClick = true;\n            }\n        };\n        this.dt.overlaySubscription = this.dt.overlayService.clickObservable.subscribe(this.overlayEventListener);\n    }\n    closeEditingCell(completed, event) {\n        if (completed)\n            this.dt.onEditComplete.emit({ field: this.dt.editingCellField, data: this.dt.editingCellData, originalEvent: event, index: this.dt.editingCellRowIndex });\n        else\n            this.dt.onEditCancel.emit({ field: this.dt.editingCellField, data: this.dt.editingCellData, originalEvent: event, index: this.dt.editingCellRowIndex });\n        DomHandler.removeClass(this.dt.editingCell, 'p-cell-editing');\n        this.dt.editingCell = null;\n        this.dt.editingCellData = null;\n        this.dt.editingCellField = null;\n        this.dt.unbindDocumentEditListener();\n        if (this.dt.overlaySubscription) {\n            this.dt.overlaySubscription.unsubscribe();\n        }\n    }\n    onEnterKeyDown(event) {\n        if (this.isEnabled()) {\n            if (this.dt.isEditingCellValid()) {\n                this.closeEditingCell(true, event);\n            }\n            event.preventDefault();\n        }\n    }\n    onEscapeKeyDown(event) {\n        if (this.isEnabled()) {\n            if (this.dt.isEditingCellValid()) {\n                this.closeEditingCell(false, event);\n            }\n            event.preventDefault();\n        }\n    }\n    onShiftKeyDown(event) {\n        if (this.isEnabled()) {\n            if (event.shiftKey)\n                this.moveToPreviousCell(event);\n            else {\n                this.moveToNextCell(event);\n            }\n        }\n    }\n    onArrowDown(event) {\n        if (this.isEnabled()) {\n            let currentCell = this.findCell(event.target);\n            if (currentCell) {\n                let cellIndex = DomHandler.index(currentCell);\n                let targetCell = this.findNextEditableColumnByIndex(currentCell, cellIndex);\n                if (targetCell) {\n                    if (this.dt.isEditingCellValid()) {\n                        this.closeEditingCell(true, event);\n                    }\n                    DomHandler.invokeElementMethod(event.target, 'blur');\n                    DomHandler.invokeElementMethod(targetCell, 'click');\n                }\n                event.preventDefault();\n            }\n        }\n    }\n    onArrowUp(event) {\n        if (this.isEnabled()) {\n            let currentCell = this.findCell(event.target);\n            if (currentCell) {\n                let cellIndex = DomHandler.index(currentCell);\n                let targetCell = this.findPrevEditableColumnByIndex(currentCell, cellIndex);\n                if (targetCell) {\n                    if (this.dt.isEditingCellValid()) {\n                        this.closeEditingCell(true, event);\n                    }\n                    DomHandler.invokeElementMethod(event.target, 'blur');\n                    DomHandler.invokeElementMethod(targetCell, 'click');\n                }\n                event.preventDefault();\n            }\n        }\n    }\n    onArrowLeft(event) {\n        if (this.isEnabled()) {\n            this.moveToPreviousCell(event);\n        }\n    }\n    onArrowRight(event) {\n        if (this.isEnabled()) {\n            this.moveToNextCell(event);\n        }\n    }\n    findCell(element) {\n        if (element) {\n            let cell = element;\n            while (cell && !DomHandler.hasClass(cell, 'p-cell-editing')) {\n                cell = cell.parentElement;\n            }\n            return cell;\n        }\n        else {\n            return null;\n        }\n    }\n    moveToPreviousCell(event) {\n        let currentCell = this.findCell(event.target);\n        if (currentCell) {\n            let targetCell = this.findPreviousEditableColumn(currentCell);\n            if (targetCell) {\n                if (this.dt.isEditingCellValid()) {\n                    this.closeEditingCell(true, event);\n                }\n                DomHandler.invokeElementMethod(event.target, 'blur');\n                DomHandler.invokeElementMethod(targetCell, 'click');\n                event.preventDefault();\n            }\n        }\n    }\n    moveToNextCell(event) {\n        let currentCell = this.findCell(event.target);\n        if (currentCell) {\n            let targetCell = this.findNextEditableColumn(currentCell);\n            if (targetCell) {\n                if (this.dt.isEditingCellValid()) {\n                    this.closeEditingCell(true, event);\n                }\n                DomHandler.invokeElementMethod(event.target, 'blur');\n                DomHandler.invokeElementMethod(targetCell, 'click');\n                event.preventDefault();\n            }\n        }\n    }\n    findPreviousEditableColumn(cell) {\n        let prevCell = cell.previousElementSibling;\n        if (!prevCell) {\n            let previousRow = cell.parentElement.previousElementSibling;\n            if (previousRow) {\n                prevCell = previousRow.lastElementChild;\n            }\n        }\n        if (prevCell) {\n            if (DomHandler.hasClass(prevCell, 'p-editable-column'))\n                return prevCell;\n            else\n                return this.findPreviousEditableColumn(prevCell);\n        }\n        else {\n            return null;\n        }\n    }\n    findNextEditableColumn(cell) {\n        let nextCell = cell.nextElementSibling;\n        if (!nextCell) {\n            let nextRow = cell.parentElement.nextElementSibling;\n            if (nextRow) {\n                nextCell = nextRow.firstElementChild;\n            }\n        }\n        if (nextCell) {\n            if (DomHandler.hasClass(nextCell, 'p-editable-column'))\n                return nextCell;\n            else\n                return this.findNextEditableColumn(nextCell);\n        }\n        else {\n            return null;\n        }\n    }\n    findNextEditableColumnByIndex(cell, index) {\n        let nextRow = cell.parentElement.nextElementSibling;\n        if (nextRow) {\n            let nextCell = nextRow.children[index];\n            if (nextCell && DomHandler.hasClass(nextCell, 'p-editable-column')) {\n                return nextCell;\n            }\n            return null;\n        }\n        else {\n            return null;\n        }\n    }\n    findPrevEditableColumnByIndex(cell, index) {\n        let prevRow = cell.parentElement.previousElementSibling;\n        if (prevRow) {\n            let prevCell = prevRow.children[index];\n            if (prevCell && DomHandler.hasClass(prevCell, 'p-editable-column')) {\n                return prevCell;\n            }\n            return null;\n        }\n        else {\n            return null;\n        }\n    }\n    isEnabled() {\n        return this.pEditableColumnDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.dt.overlaySubscription) {\n            this.dt.overlaySubscription.unsubscribe();\n        }\n    }\n}\nEditableColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: EditableColumn, deps: [{ token: Table }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nEditableColumn.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: EditableColumn, selector: \"[pEditableColumn]\", inputs: { data: [\"pEditableColumn\", \"data\"], field: [\"pEditableColumnField\", \"field\"], rowIndex: [\"pEditableColumnRowIndex\", \"rowIndex\"], pEditableColumnDisabled: \"pEditableColumnDisabled\", pFocusCellSelector: \"pFocusCellSelector\" }, host: { listeners: { \"click\": \"onClick($event)\", \"keydown.enter\": \"onEnterKeyDown($event)\", \"keydown.escape\": \"onEscapeKeyDown($event)\", \"keydown.tab\": \"onShiftKeyDown($event)\", \"keydown.shift.tab\": \"onShiftKeyDown($event)\", \"keydown.meta.tab\": \"onShiftKeyDown($event)\", \"keydown.arrowdown\": \"onArrowDown($event)\", \"keydown.arrowup\": \"onArrowUp($event)\", \"keydown.arrowleft\": \"onArrowLeft($event)\", \"keydown.arrowright\": \"onArrowRight($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: EditableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pEditableColumn]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { data: [{\n                type: Input,\n                args: [\"pEditableColumn\"]\n            }], field: [{\n                type: Input,\n                args: [\"pEditableColumnField\"]\n            }], rowIndex: [{\n                type: Input,\n                args: [\"pEditableColumnRowIndex\"]\n            }], pEditableColumnDisabled: [{\n                type: Input\n            }], pFocusCellSelector: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onEnterKeyDown: [{\n                type: HostListener,\n                args: ['keydown.enter', ['$event']]\n            }], onEscapeKeyDown: [{\n                type: HostListener,\n                args: ['keydown.escape', ['$event']]\n            }], onShiftKeyDown: [{\n                type: HostListener,\n                args: ['keydown.tab', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.shift.tab', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.meta.tab', ['$event']]\n            }], onArrowDown: [{\n                type: HostListener,\n                args: ['keydown.arrowdown', ['$event']]\n            }], onArrowUp: [{\n                type: HostListener,\n                args: ['keydown.arrowup', ['$event']]\n            }], onArrowLeft: [{\n                type: HostListener,\n                args: ['keydown.arrowleft', ['$event']]\n            }], onArrowRight: [{\n                type: HostListener,\n                args: ['keydown.arrowright', ['$event']]\n            }] } });\nclass EditableRow {\n    constructor(el) {\n        this.el = el;\n    }\n    isEnabled() {\n        return this.pEditableRowDisabled !== true;\n    }\n}\nEditableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: EditableRow, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nEditableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: EditableRow, selector: \"[pEditableRow]\", inputs: { data: [\"pEditableRow\", \"data\"], pEditableRowDisabled: \"pEditableRowDisabled\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: EditableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pEditableRow]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input,\n                args: [\"pEditableRow\"]\n            }], pEditableRowDisabled: [{\n                type: Input\n            }] } });\nclass InitEditableRow {\n    constructor(dt, editableRow) {\n        this.dt = dt;\n        this.editableRow = editableRow;\n    }\n    onClick(event) {\n        this.dt.initRowEdit(this.editableRow.data);\n        event.preventDefault();\n    }\n}\nInitEditableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: InitEditableRow, deps: [{ token: Table }, { token: EditableRow }], target: i0.ɵɵFactoryTarget.Directive });\nInitEditableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: InitEditableRow, selector: \"[pInitEditableRow]\", host: { listeners: { \"click\": \"onClick($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: InitEditableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pInitEditableRow]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: EditableRow }]; }, propDecorators: { onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\nclass SaveEditableRow {\n    constructor(dt, editableRow) {\n        this.dt = dt;\n        this.editableRow = editableRow;\n    }\n    onClick(event) {\n        this.dt.saveRowEdit(this.editableRow.data, this.editableRow.el.nativeElement);\n        event.preventDefault();\n    }\n}\nSaveEditableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SaveEditableRow, deps: [{ token: Table }, { token: EditableRow }], target: i0.ɵɵFactoryTarget.Directive });\nSaveEditableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: SaveEditableRow, selector: \"[pSaveEditableRow]\", host: { listeners: { \"click\": \"onClick($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SaveEditableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pSaveEditableRow]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: EditableRow }]; }, propDecorators: { onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\nclass CancelEditableRow {\n    constructor(dt, editableRow) {\n        this.dt = dt;\n        this.editableRow = editableRow;\n    }\n    onClick(event) {\n        this.dt.cancelRowEdit(this.editableRow.data);\n        event.preventDefault();\n    }\n}\nCancelEditableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CancelEditableRow, deps: [{ token: Table }, { token: EditableRow }], target: i0.ɵɵFactoryTarget.Directive });\nCancelEditableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: CancelEditableRow, selector: \"[pCancelEditableRow]\", host: { listeners: { \"click\": \"onClick($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CancelEditableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pCancelEditableRow]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: EditableRow }]; }, propDecorators: { onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\nclass CellEditor {\n    constructor(dt, editableColumn, editableRow) {\n        this.dt = dt;\n        this.editableColumn = editableColumn;\n        this.editableRow = editableRow;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'input':\n                    this.inputTemplate = item.template;\n                    break;\n                case 'output':\n                    this.outputTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    get editing() {\n        return (this.dt.editingCell && this.editableColumn && this.dt.editingCell === this.editableColumn.el.nativeElement) ||\n            (this.editableRow && this.dt.editMode === 'row' && this.dt.isRowEditing(this.editableRow.data));\n    }\n}\nCellEditor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CellEditor, deps: [{ token: Table }, { token: EditableColumn, optional: true }, { token: EditableRow, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCellEditor.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: CellEditor, selector: \"p-cellEditor\", queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <ng-container *ngIf=\"editing\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!editing\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `, isInline: true, directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CellEditor, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-cellEditor',\n                    template: `\n        <ng-container *ngIf=\"editing\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!editing\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: EditableColumn, decorators: [{\n                    type: Optional\n                }] }, { type: EditableRow, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass TableRadioButton {\n    constructor(dt, tableService, cd) {\n        this.dt = dt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.dt.isSelected(this.value);\n            this.cd.markForCheck();\n        });\n    }\n    ngOnInit() {\n        this.checked = this.dt.isSelected(this.value);\n    }\n    onClick(event) {\n        if (!this.disabled) {\n            this.dt.toggleRowWithRadio({\n                originalEvent: event,\n                rowIndex: this.index\n            }, this.value);\n        }\n        DomHandler.clearSelection();\n    }\n    onFocus() {\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n    onBlur() {\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nTableRadioButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TableRadioButton, deps: [{ token: Table }, { token: TableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTableRadioButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: TableRadioButton, selector: \"p-tableRadioButton\", inputs: { disabled: \"disabled\", value: \"value\", index: \"index\", inputId: \"inputId\", name: \"name\", ariaLabel: \"ariaLabel\" }, viewQueries: [{ propertyName: \"boxViewChild\", first: true, predicate: [\"box\"], descendants: true }], ngImport: i0, template: `\n        <div class=\"p-radiobutton p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-radiobutton-box p-component':true, 'p-highlight':checked, 'p-disabled':disabled}\" role=\"radio\" [attr.aria-checked]=\"checked\">\n                <div class=\"p-radiobutton-icon\"></div>\n            </div>\n        </div>\n    `, isInline: true, directives: [{ type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TableRadioButton, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-tableRadioButton',\n                    template: `\n        <div class=\"p-radiobutton p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-radiobutton-box p-component':true, 'p-highlight':checked, 'p-disabled':disabled}\" role=\"radio\" [attr.aria-checked]=\"checked\">\n                <div class=\"p-radiobutton-icon\"></div>\n            </div>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], boxViewChild: [{\n                type: ViewChild,\n                args: ['box']\n            }] } });\nclass TableCheckbox {\n    constructor(dt, tableService, cd) {\n        this.dt = dt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.dt.isSelected(this.value);\n            this.cd.markForCheck();\n        });\n    }\n    ngOnInit() {\n        this.checked = this.dt.isSelected(this.value);\n    }\n    onClick(event) {\n        if (!this.disabled) {\n            this.dt.toggleRowWithCheckbox({\n                originalEvent: event,\n                rowIndex: this.index\n            }, this.value);\n        }\n        DomHandler.clearSelection();\n    }\n    onFocus() {\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n    onBlur() {\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nTableCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TableCheckbox, deps: [{ token: Table }, { token: TableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTableCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: TableCheckbox, selector: \"p-tableCheckbox\", inputs: { disabled: \"disabled\", value: \"value\", index: \"index\", inputId: \"inputId\", name: \"name\", required: \"required\", ariaLabel: \"ariaLabel\" }, viewQueries: [{ propertyName: \"boxViewChild\", first: true, predicate: [\"box\"], descendants: true }], ngImport: i0, template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"disabled\"\n                [attr.required]=\"required\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box p-component':true,\n                'p-highlight':checked, 'p-disabled':disabled}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `, isInline: true, directives: [{ type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TableCheckbox, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-tableCheckbox',\n                    template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"disabled\"\n                [attr.required]=\"required\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box p-component':true,\n                'p-highlight':checked, 'p-disabled':disabled}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], boxViewChild: [{\n                type: ViewChild,\n                args: ['box']\n            }] } });\nclass TableHeaderCheckbox {\n    constructor(dt, tableService, cd) {\n        this.dt = dt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.valueChangeSubscription = this.dt.tableService.valueSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n        this.selectionChangeSubscription = this.dt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n    }\n    ngOnInit() {\n        this.checked = this.updateCheckedState();\n    }\n    onClick(event) {\n        if (!this.disabled) {\n            if (this.dt.value && this.dt.value.length > 0) {\n                this.dt.toggleRowsWithCheckbox(event, !this.checked);\n            }\n        }\n        DomHandler.clearSelection();\n    }\n    onFocus() {\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n    onBlur() {\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n    isDisabled() {\n        return this.disabled || !this.dt.value || !this.dt.value.length;\n    }\n    ngOnDestroy() {\n        if (this.selectionChangeSubscription) {\n            this.selectionChangeSubscription.unsubscribe();\n        }\n        if (this.valueChangeSubscription) {\n            this.valueChangeSubscription.unsubscribe();\n        }\n    }\n    updateCheckedState() {\n        this.cd.markForCheck();\n        if (this.dt.filteredValue && !this.dt.lazy) {\n            const val = this.dt.filteredValue;\n            return (val && val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.isAllFilteredValuesChecked());\n        }\n        else {\n            const val = this.dt.value;\n            const length = this.dt.lazy ? this.dt._totalRecords : val ? val.length : 0;\n            return (val && length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.dt.selection.length === length);\n        }\n    }\n    isAllFilteredValuesChecked() {\n        if (!this.dt.filteredValue) {\n            return false;\n        }\n        else {\n            for (let rowData of this.dt.filteredValue) {\n                if (!this.dt.isSelected(rowData)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n}\nTableHeaderCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TableHeaderCheckbox, deps: [{ token: Table }, { token: TableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTableHeaderCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: TableHeaderCheckbox, selector: \"p-tableHeaderCheckbox\", inputs: { disabled: \"disabled\", inputId: \"inputId\", name: \"name\", ariaLabel: \"ariaLabel\" }, viewQueries: [{ propertyName: \"boxViewChild\", first: true, predicate: [\"box\"], descendants: true }], ngImport: i0, template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"isDisabled()\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box':true,\n                'p-highlight':checked, 'p-disabled': isDisabled()}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `, isInline: true, directives: [{ type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TableHeaderCheckbox, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-tableHeaderCheckbox',\n                    template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"isDisabled()\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box':true,\n                'p-highlight':checked, 'p-disabled': isDisabled()}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { boxViewChild: [{\n                type: ViewChild,\n                args: ['box']\n            }], disabled: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }] } });\nclass ReorderableRowHandle {\n    constructor(el) {\n        this.el = el;\n    }\n    ngAfterViewInit() {\n        DomHandler.addClass(this.el.nativeElement, 'p-datatable-reorderablerow-handle');\n    }\n}\nReorderableRowHandle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReorderableRowHandle, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nReorderableRowHandle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: ReorderableRowHandle, selector: \"[pReorderableRowHandle]\", inputs: { index: [\"pReorderableRowHandle\", \"index\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReorderableRowHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pReorderableRowHandle]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { index: [{\n                type: Input,\n                args: [\"pReorderableRowHandle\"]\n            }] } });\nclass ReorderableRow {\n    constructor(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            this.el.nativeElement.droppable = true;\n            this.bindEvents();\n        }\n    }\n    bindEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.mouseDownListener = this.onMouseDown.bind(this);\n            this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n            this.dragStartListener = this.onDragStart.bind(this);\n            this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n            this.dragEndListener = this.onDragEnd.bind(this);\n            this.el.nativeElement.addEventListener('dragend', this.dragEndListener);\n            this.dragOverListener = this.onDragOver.bind(this);\n            this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n            this.dragLeaveListener = this.onDragLeave.bind(this);\n            this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n        });\n    }\n    unbindEvents() {\n        if (this.mouseDownListener) {\n            document.removeEventListener('mousedown', this.mouseDownListener);\n            this.mouseDownListener = null;\n        }\n        if (this.dragStartListener) {\n            document.removeEventListener('dragstart', this.dragStartListener);\n            this.dragStartListener = null;\n        }\n        if (this.dragEndListener) {\n            document.removeEventListener('dragend', this.dragEndListener);\n            this.dragEndListener = null;\n        }\n        if (this.dragOverListener) {\n            document.removeEventListener('dragover', this.dragOverListener);\n            this.dragOverListener = null;\n        }\n        if (this.dragLeaveListener) {\n            document.removeEventListener('dragleave', this.dragLeaveListener);\n            this.dragLeaveListener = null;\n        }\n    }\n    onMouseDown(event) {\n        if (DomHandler.hasClass(event.target, 'p-datatable-reorderablerow-handle'))\n            this.el.nativeElement.draggable = true;\n        else\n            this.el.nativeElement.draggable = false;\n    }\n    onDragStart(event) {\n        this.dt.onRowDragStart(event, this.index);\n    }\n    onDragEnd(event) {\n        this.dt.onRowDragEnd(event);\n        this.el.nativeElement.draggable = false;\n    }\n    onDragOver(event) {\n        this.dt.onRowDragOver(event, this.index, this.el.nativeElement);\n        event.preventDefault();\n    }\n    onDragLeave(event) {\n        this.dt.onRowDragLeave(event, this.el.nativeElement);\n    }\n    isEnabled() {\n        return this.pReorderableRowDisabled !== true;\n    }\n    onDrop(event) {\n        if (this.isEnabled() && this.dt.rowDragging) {\n            this.dt.onRowDrop(event, this.el.nativeElement);\n        }\n        event.preventDefault();\n    }\n}\nReorderableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReorderableRow, deps: [{ token: Table }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nReorderableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.5\", type: ReorderableRow, selector: \"[pReorderableRow]\", inputs: { index: [\"pReorderableRow\", \"index\"], pReorderableRowDisabled: \"pReorderableRowDisabled\" }, host: { listeners: { \"drop\": \"onDrop($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ReorderableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pReorderableRow]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { index: [{\n                type: Input,\n                args: [\"pReorderableRow\"]\n            }], pReorderableRowDisabled: [{\n                type: Input\n            }], onDrop: [{\n                type: HostListener,\n                args: ['drop', ['$event']]\n            }] } });\nclass ColumnFilterFormElement {\n    constructor(dt) {\n        this.dt = dt;\n        this.useGrouping = true;\n    }\n    ngOnInit() {\n        this.filterCallback = value => {\n            this.filterConstraint.value = value;\n            this.dt._filter();\n        };\n    }\n    onModelChange(value) {\n        this.filterConstraint.value = value;\n        if (this.type === 'boolean' || value === '') {\n            this.dt._filter();\n        }\n    }\n    onTextInputEnterKeyDown(event) {\n        this.dt._filter();\n        event.preventDefault();\n    }\n    onNumericInputKeyDown(event) {\n        if (event.key === 'Enter') {\n            this.dt._filter();\n            event.preventDefault();\n        }\n    }\n}\nColumnFilterFormElement.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ColumnFilterFormElement, deps: [{ token: Table }], target: i0.ɵɵFactoryTarget.Component });\nColumnFilterFormElement.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: ColumnFilterFormElement, selector: \"p-columnFilterFormElement\", inputs: { field: \"field\", type: \"type\", filterConstraint: \"filterConstraint\", filterTemplate: \"filterTemplate\", placeholder: \"placeholder\", minFractionDigits: \"minFractionDigits\", maxFractionDigits: \"maxFractionDigits\", prefix: \"prefix\", suffix: \"suffix\", locale: \"locale\", localeMatcher: \"localeMatcher\", currency: \"currency\", currencyDisplay: \"currencyDisplay\", useGrouping: \"useGrouping\" }, ngImport: i0, template: `\n        <ng-container *ngIf=\"filterTemplate; else builtInElement\">\n            <ng-container *ngTemplateOutlet=\"filterTemplate; context: {$implicit: filterConstraint.value, filterCallback: filterCallback}\"></ng-container>\n        </ng-container>\n        <ng-template #builtInElement>\n            <ng-container [ngSwitch]=\"type\">\n                <input *ngSwitchCase=\"'text'\" type=\"text\" pInputText [value]=\"filterConstraint?.value\" (input)=\"onModelChange($event.target.value)\"\n                    (keydown.enter)=\"onTextInputEnterKeyDown($event)\" [attr.placeholder]=\"placeholder\">\n                <p-inputNumber *ngSwitchCase=\"'numeric'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\" (onKeyDown)=\"onNumericInputKeyDown($event)\" [showButtons]=\"true\" [attr.placeholder]=\"placeholder\"\n                    [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\" [placeholder]=\"placeholder\"\n                    [mode]=\"currency ? 'currency' : 'decimal'\" [locale]=\"locale\" [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-inputNumber>\n                <p-triStateCheckbox *ngSwitchCase=\"'boolean'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-triStateCheckbox>\n                <p-calendar *ngSwitchCase=\"'date'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-calendar>\n            </ng-container>\n        </ng-template>\n    `, isInline: true, components: [{ type: i5.InputNumber, selector: \"p-inputNumber\", inputs: [\"showButtons\", \"format\", \"buttonLayout\", \"inputId\", \"styleClass\", \"style\", \"placeholder\", \"size\", \"maxlength\", \"tabindex\", \"title\", \"ariaLabel\", \"ariaRequired\", \"name\", \"required\", \"autocomplete\", \"min\", \"max\", \"incrementButtonClass\", \"decrementButtonClass\", \"incrementButtonIcon\", \"decrementButtonIcon\", \"step\", \"inputStyle\", \"inputStyleClass\", \"locale\", \"localeMatcher\", \"mode\", \"currency\", \"currencyDisplay\", \"useGrouping\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"disabled\"], outputs: [\"onInput\", \"onFocus\", \"onBlur\", \"onKeyDown\"] }, { type: i6.TriStateCheckbox, selector: \"p-triStateCheckbox\", inputs: [\"disabled\", \"name\", \"ariaLabelledBy\", \"tabindex\", \"inputId\", \"style\", \"styleClass\", \"label\", \"readonly\", \"checkboxTrueIcon\", \"checkboxFalseIcon\"], outputs: [\"onChange\"] }, { type: i7.Calendar, selector: \"p-calendar\", inputs: [\"style\", \"styleClass\", \"inputStyle\", \"inputId\", \"name\", \"inputStyleClass\", \"placeholder\", \"ariaLabelledBy\", \"disabled\", \"dateFormat\", \"multipleSeparator\", \"rangeSeparator\", \"inline\", \"showOtherMonths\", \"selectOtherMonths\", \"showIcon\", \"icon\", \"appendTo\", \"readonlyInput\", \"shortYearCutoff\", \"monthNavigator\", \"yearNavigator\", \"hourFormat\", \"timeOnly\", \"stepHour\", \"stepMinute\", \"stepSecond\", \"showSeconds\", \"required\", \"showOnFocus\", \"showWeek\", \"dataType\", \"selectionMode\", \"maxDateCount\", \"showButtonBar\", \"todayButtonStyleClass\", \"clearButtonStyleClass\", \"autoZIndex\", \"baseZIndex\", \"panelStyleClass\", \"panelStyle\", \"keepInvalid\", \"hideOnDateTimeSelect\", \"numberOfMonths\", \"view\", \"touchUI\", \"timeSeparator\", \"focusTrap\", \"firstDayOfWeek\", \"showTransitionOptions\", \"hideTransitionOptions\", \"tabindex\", \"defaultDate\", \"minDate\", \"maxDate\", \"disabledDates\", \"disabledDays\", \"yearRange\", \"showTime\", \"locale\"], outputs: [\"onFocus\", \"onBlur\", \"onClose\", \"onSelect\", \"onInput\", \"onTodayClick\", \"onClearClick\", \"onMonthChange\", \"onYearChange\", \"onClickOutside\", \"onShow\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i4.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i4.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i8.InputText, selector: \"[pInputText]\" }, { type: i9.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i9.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ColumnFilterFormElement, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-columnFilterFormElement',\n                    template: `\n        <ng-container *ngIf=\"filterTemplate; else builtInElement\">\n            <ng-container *ngTemplateOutlet=\"filterTemplate; context: {$implicit: filterConstraint.value, filterCallback: filterCallback}\"></ng-container>\n        </ng-container>\n        <ng-template #builtInElement>\n            <ng-container [ngSwitch]=\"type\">\n                <input *ngSwitchCase=\"'text'\" type=\"text\" pInputText [value]=\"filterConstraint?.value\" (input)=\"onModelChange($event.target.value)\"\n                    (keydown.enter)=\"onTextInputEnterKeyDown($event)\" [attr.placeholder]=\"placeholder\">\n                <p-inputNumber *ngSwitchCase=\"'numeric'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\" (onKeyDown)=\"onNumericInputKeyDown($event)\" [showButtons]=\"true\" [attr.placeholder]=\"placeholder\"\n                    [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\" [placeholder]=\"placeholder\"\n                    [mode]=\"currency ? 'currency' : 'decimal'\" [locale]=\"locale\" [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-inputNumber>\n                <p-triStateCheckbox *ngSwitchCase=\"'boolean'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-triStateCheckbox>\n                <p-calendar *ngSwitchCase=\"'date'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-calendar>\n            </ng-container>\n        </ng-template>\n    `,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: Table }]; }, propDecorators: { field: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], filterConstraint: [{\n                type: Input\n            }], filterTemplate: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], minFractionDigits: [{\n                type: Input\n            }], maxFractionDigits: [{\n                type: Input\n            }], prefix: [{\n                type: Input\n            }], suffix: [{\n                type: Input\n            }], locale: [{\n                type: Input\n            }], localeMatcher: [{\n                type: Input\n            }], currency: [{\n                type: Input\n            }], currencyDisplay: [{\n                type: Input\n            }], useGrouping: [{\n                type: Input\n            }] } });\nclass ColumnFilter {\n    constructor(el, dt, renderer, config, overlayService) {\n        this.el = el;\n        this.dt = dt;\n        this.renderer = renderer;\n        this.config = config;\n        this.overlayService = overlayService;\n        this.type = 'text';\n        this.display = 'row';\n        this.showMenu = true;\n        this.operator = FilterOperator.AND;\n        this.showOperator = true;\n        this.showClearButton = true;\n        this.showApplyButton = true;\n        this.showMatchModes = true;\n        this.showAddButton = true;\n        this.hideOnClear = false;\n        this.maxConstraints = 2;\n        this.useGrouping = true;\n    }\n    ngOnInit() {\n        if (!this.dt.filters[this.field]) {\n            this.initFieldFilterConstraint();\n        }\n        this.translationSubscription = this.config.translationObserver.subscribe(() => {\n            this.generateMatchModeOptions();\n            this.generateOperatorOptions();\n        });\n        this.resetSubscription = this.dt.tableService.resetSource$.subscribe(() => {\n            this.clearFilter();\n        });\n        this.generateMatchModeOptions();\n        this.generateOperatorOptions();\n    }\n    generateMatchModeOptions() {\n        var _a;\n        this.matchModes = this.matchModeOptions ||\n            ((_a = this.config.filterMatchModeOptions[this.type]) === null || _a === void 0 ? void 0 : _a.map(key => {\n                return { label: this.config.getTranslation(key), value: key };\n            }));\n    }\n    generateOperatorOptions() {\n        this.operatorOptions = [\n            { label: this.config.getTranslation(TranslationKeys.MATCH_ALL), value: FilterOperator.AND },\n            { label: this.config.getTranslation(TranslationKeys.MATCH_ANY), value: FilterOperator.OR }\n        ];\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'filter':\n                    this.filterTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                default:\n                    this.filterTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    initFieldFilterConstraint() {\n        let defaultMatchMode = this.getDefaultMatchMode();\n        this.dt.filters[this.field] = this.display == 'row' ? { value: null, matchMode: defaultMatchMode } : [{ value: null, matchMode: defaultMatchMode, operator: this.operator }];\n    }\n    onMenuMatchModeChange(value, filterMeta) {\n        filterMeta.matchMode = value;\n        if (!this.showApplyButton) {\n            this.dt._filter();\n        }\n    }\n    onRowMatchModeChange(matchMode) {\n        this.dt.filters[this.field].matchMode = matchMode;\n        this.dt._filter();\n        this.hide();\n    }\n    onRowMatchModeKeyDown(event) {\n        let item = event.target;\n        switch (event.key) {\n            case 'ArrowDown':\n                var nextItem = this.findNextItem(item);\n                if (nextItem) {\n                    item.removeAttribute('tabindex');\n                    nextItem.tabIndex = '0';\n                    nextItem.focus();\n                }\n                event.preventDefault();\n                break;\n            case 'ArrowUp':\n                var prevItem = this.findPrevItem(item);\n                if (prevItem) {\n                    item.removeAttribute('tabindex');\n                    prevItem.tabIndex = '0';\n                    prevItem.focus();\n                }\n                event.preventDefault();\n                break;\n        }\n    }\n    onRowClearItemClick() {\n        this.clearFilter();\n        this.hide();\n    }\n    isRowMatchModeSelected(matchMode) {\n        return this.dt.filters[this.field].matchMode === matchMode;\n    }\n    addConstraint() {\n        this.dt.filters[this.field].push({ value: null, matchMode: this.getDefaultMatchMode(), operator: this.getDefaultOperator() });\n        this.dt._filter();\n    }\n    removeConstraint(filterMeta) {\n        this.dt.filters[this.field] = this.dt.filters[this.field].filter(meta => meta !== filterMeta);\n        this.dt._filter();\n    }\n    onOperatorChange(value) {\n        this.dt.filters[this.field].forEach(filterMeta => {\n            filterMeta.operator = value;\n            this.operator = value;\n        });\n        if (!this.showApplyButton) {\n            this.dt._filter();\n        }\n    }\n    toggleMenu() {\n        this.overlayVisible = !this.overlayVisible;\n    }\n    onToggleButtonKeyDown(event) {\n        switch (event.key) {\n            case 'Escape':\n            case 'Tab':\n                this.overlayVisible = false;\n                break;\n            case 'ArrowDown':\n                if (this.overlayVisible) {\n                    let focusable = DomHandler.getFocusableElements(this.overlay);\n                    if (focusable) {\n                        focusable[0].focus();\n                    }\n                    event.preventDefault();\n                }\n                else if (event.altKey) {\n                    this.overlayVisible = true;\n                    event.preventDefault();\n                }\n                break;\n        }\n    }\n    onEscape() {\n        this.overlayVisible = false;\n        this.icon.nativeElement.focus();\n    }\n    findNextItem(item) {\n        let nextItem = item.nextElementSibling;\n        if (nextItem)\n            return DomHandler.hasClass(nextItem, 'p-column-filter-separator') ? this.findNextItem(nextItem) : nextItem;\n        else\n            return item.parentElement.firstElementChild;\n    }\n    findPrevItem(item) {\n        let prevItem = item.previousElementSibling;\n        if (prevItem)\n            return DomHandler.hasClass(prevItem, 'p-column-filter-separator') ? this.findPrevItem(prevItem) : prevItem;\n        else\n            return item.parentElement.lastElementChild;\n    }\n    onContentClick() {\n        this.selfClick = true;\n    }\n    onOverlayAnimationStart(event) {\n        switch (event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n                document.body.appendChild(this.overlay);\n                ZIndexUtils.set('overlay', this.overlay, this.config.zIndex.overlay);\n                DomHandler.absolutePosition(this.overlay, this.icon.nativeElement);\n                this.bindDocumentClickListener();\n                this.bindDocumentResizeListener();\n                this.bindScrollListener();\n                this.overlayEventListener = (e) => {\n                    if (this.overlay && this.overlay.contains(e.target)) {\n                        this.selfClick = true;\n                    }\n                };\n                this.overlaySubscription = this.overlayService.clickObservable.subscribe(this.overlayEventListener);\n                break;\n            case 'void':\n                this.onOverlayHide();\n                if (this.overlaySubscription) {\n                    this.overlaySubscription.unsubscribe();\n                }\n                break;\n        }\n    }\n    onOverlayAnimationEnd(event) {\n        switch (event.toState) {\n            case 'void':\n                ZIndexUtils.clear(event.element);\n                break;\n        }\n    }\n    getDefaultMatchMode() {\n        if (this.matchMode) {\n            return this.matchMode;\n        }\n        else {\n            if (this.type === 'text')\n                return FilterMatchMode.STARTS_WITH;\n            else if (this.type === 'numeric')\n                return FilterMatchMode.EQUALS;\n            else if (this.type === 'date')\n                return FilterMatchMode.DATE_IS;\n            else\n                return FilterMatchMode.CONTAINS;\n        }\n    }\n    getDefaultOperator() {\n        return this.dt.filters ? this.dt.filters[this.field][0].operator : this.operator;\n    }\n    hasRowFilter() {\n        return this.dt.filters[this.field] && !this.dt.isFilterBlank(this.dt.filters[this.field].value);\n    }\n    get fieldConstraints() {\n        return this.dt.filters ? this.dt.filters[this.field] : null;\n    }\n    get showRemoveIcon() {\n        return this.fieldConstraints ? this.fieldConstraints.length > 1 : false;\n    }\n    get showMenuButton() {\n        return this.showMenu && (this.display === 'row' ? this.type !== 'boolean' : true);\n    }\n    get isShowOperator() {\n        return this.showOperator && this.type !== 'boolean';\n    }\n    get isShowAddConstraint() {\n        return this.showAddButton && this.type !== 'boolean' && (this.fieldConstraints && this.fieldConstraints.length < this.maxConstraints);\n    }\n    get applyButtonLabel() {\n        return this.config.getTranslation(TranslationKeys.APPLY);\n    }\n    get clearButtonLabel() {\n        return this.config.getTranslation(TranslationKeys.CLEAR);\n    }\n    get addRuleButtonLabel() {\n        return this.config.getTranslation(TranslationKeys.ADD_RULE);\n    }\n    get removeRuleButtonLabel() {\n        return this.config.getTranslation(TranslationKeys.REMOVE_RULE);\n    }\n    get noFilterLabel() {\n        return this.config.getTranslation(TranslationKeys.NO_FILTER);\n    }\n    hasFilter() {\n        let fieldFilter = this.dt.filters[this.field];\n        if (fieldFilter) {\n            if (Array.isArray(fieldFilter))\n                return !this.dt.isFilterBlank(fieldFilter[0].value);\n            else\n                return !this.dt.isFilterBlank(fieldFilter.value);\n        }\n        return false;\n    }\n    isOutsideClicked(event) {\n        return !(this.overlay.isSameNode(event.target) || this.overlay.contains(event.target)\n            || this.icon.nativeElement.isSameNode(event.target) || this.icon.nativeElement.contains(event.target)\n            || DomHandler.hasClass(event.target, 'p-column-filter-add-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-add-button')\n            || DomHandler.hasClass(event.target, 'p-column-filter-remove-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-remove-button'));\n    }\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n            this.documentClickListener = this.renderer.listen(documentTarget, 'mousedown', event => {\n                if (this.overlayVisible && !this.selfClick && this.isOutsideClicked(event)) {\n                    this.hide();\n                }\n                this.selfClick = false;\n            });\n        }\n    }\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n            this.selfClick = false;\n        }\n    }\n    bindDocumentResizeListener() {\n        this.documentResizeListener = () => this.hide();\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.icon.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    hide() {\n        this.overlayVisible = false;\n    }\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.overlay = null;\n    }\n    clearFilter() {\n        this.initFieldFilterConstraint();\n        this.dt._filter();\n        if (this.hideOnClear)\n            this.hide();\n    }\n    applyFilter() {\n        this.dt._filter();\n        this.hide();\n    }\n    ngOnDestroy() {\n        if (this.overlay) {\n            this.el.nativeElement.appendChild(this.overlay);\n            ZIndexUtils.clear(this.overlay);\n            this.onOverlayHide();\n        }\n        if (this.translationSubscription) {\n            this.translationSubscription.unsubscribe();\n        }\n        if (this.resetSubscription) {\n            this.resetSubscription.unsubscribe();\n        }\n        if (this.overlaySubscription) {\n            this.overlaySubscription.unsubscribe();\n        }\n    }\n}\nColumnFilter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ColumnFilter, deps: [{ token: i0.ElementRef }, { token: Table }, { token: i0.Renderer2 }, { token: i1.PrimeNGConfig }, { token: i1.OverlayService }], target: i0.ɵɵFactoryTarget.Component });\nColumnFilter.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: ColumnFilter, selector: \"p-columnFilter\", inputs: { field: \"field\", type: \"type\", display: \"display\", showMenu: \"showMenu\", matchMode: \"matchMode\", operator: \"operator\", showOperator: \"showOperator\", showClearButton: \"showClearButton\", showApplyButton: \"showApplyButton\", showMatchModes: \"showMatchModes\", showAddButton: \"showAddButton\", hideOnClear: \"hideOnClear\", placeholder: \"placeholder\", matchModeOptions: \"matchModeOptions\", maxConstraints: \"maxConstraints\", minFractionDigits: \"minFractionDigits\", maxFractionDigits: \"maxFractionDigits\", prefix: \"prefix\", suffix: \"suffix\", locale: \"locale\", localeMatcher: \"localeMatcher\", currency: \"currency\", currencyDisplay: \"currencyDisplay\", useGrouping: \"useGrouping\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"icon\", first: true, predicate: [\"icon\"], descendants: true }], ngImport: i0, template: `\n        <div class=\"p-column-filter\" [ngClass]=\"{'p-column-filter-row': display === 'row', 'p-column-filter-menu': display === 'menu'}\">\n            <p-columnFilterFormElement *ngIf=\"display === 'row'\" class=\"p-fluid\" [type]=\"type\" [field]=\"field\" [filterConstraint]=\"dt.filters[field]\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\" [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                                    [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n            <button #icon *ngIf=\"showMenuButton\" type=\"button\" class=\"p-column-filter-menu-button p-link\" aria-haspopup=\"true\" [attr.aria-expanded]=\"overlayVisible\"\n                [ngClass]=\"{'p-column-filter-menu-button-open': overlayVisible, 'p-column-filter-menu-button-active': hasFilter()}\"\n                (click)=\"toggleMenu()\" (keydown)=\"onToggleButtonKeyDown($event)\"><span class=\"pi pi-filter-icon pi-filter\"></span></button>\n            <button #icon *ngIf=\"showMenuButton && display === 'row'\" [ngClass]=\"{'p-hidden-space': !hasRowFilter()}\" type=\"button\" class=\"p-column-filter-clear-button p-link\" (click)=\"clearFilter()\"><span class=\"pi pi-filter-slash\"></span></button>\n            <div *ngIf=\"showMenu && overlayVisible\" [ngClass]=\"{'p-column-filter-overlay p-component p-fluid': true, 'p-column-filter-overlay-menu': display === 'menu'}\" (click)=\"onContentClick()\"\n                [@overlayAnimation]=\"'visible'\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\" (keydown.escape)=\"onEscape()\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: field}\"></ng-container>\n                <ul *ngIf=\"display === 'row'; else menu\" class=\"p-column-filter-row-items\">\n                    <li class=\"p-column-filter-row-item\" *ngFor=\"let matchMode of matchModes; let i = index;\" (click)=\"onRowMatchModeChange(matchMode.value)\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"this.onRowMatchModeChange(matchMode.value)\"\n                        [ngClass]=\"{'p-highlight': isRowMatchModeSelected(matchMode.value)}\" [attr.tabindex]=\"i === 0 ? '0' : null\">{{matchMode.label}}</li>\n                    <li class=\"p-column-filter-separator\"></li>\n                    <li class=\"p-column-filter-row-item\" (click)=\"onRowClearItemClick()\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"onRowClearItemClick()\">{{noFilterLabel}}</li>\n                </ul>\n                <ng-template #menu>\n                    <div class=\"p-column-filter-operator\" *ngIf=\"isShowOperator\">\n                        <p-dropdown [options]=\"operatorOptions\" [ngModel]=\"operator\" (ngModelChange)=\"onOperatorChange($event)\" styleClass=\"p-column-filter-operator-dropdown\"></p-dropdown>\n                    </div>\n                    <div class=\"p-column-filter-constraints\">\n                        <div *ngFor=\"let fieldConstraint of fieldConstraints; let i = index\" class=\"p-column-filter-constraint\">\n                            <p-dropdown  *ngIf=\"showMatchModes && matchModes\" [options]=\"matchModes\" [ngModel]=\"fieldConstraint.matchMode\" (ngModelChange)=\"onMenuMatchModeChange($event, fieldConstraint)\" styleClass=\"p-column-filter-matchmode-dropdown\"></p-dropdown>\n                            <p-columnFilterFormElement [type]=\"type\" [field]=\"field\" [filterConstraint]=\"fieldConstraint\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\"\n                            [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                            [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n                            <div>\n                                <button *ngIf=\"showRemoveIcon\" type=\"button\" pButton icon=\"pi pi-trash\" class=\"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\" (click)=\"removeConstraint(fieldConstraint)\" pRipple [label]=\"removeRuleButtonLabel\"></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"p-column-filter-add-rule\" *ngIf=\"isShowAddConstraint\">\n                        <button type=\"button\" pButton [label]=\"addRuleButtonLabel\" icon=\"pi pi-plus\" class=\"p-column-filter-add-button p-button-text p-button-sm\" (click)=\"addConstraint()\" pRipple></button>\n                    </div>\n                    <div class=\"p-column-filter-buttonbar\">\n                        <button *ngIf=\"showClearButton\" type=\"button\" pButton class=\"p-button-outlined\" (click)=\"clearFilter()\" [label]=\"clearButtonLabel\" pRipple></button>\n                        <button *ngIf=\"showApplyButton\" type=\"button\" pButton (click)=\"applyFilter()\" [label]=\"applyButtonLabel\" pRipple></button>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate; context: {$implicit: field}\"></ng-container>\n            </div>\n        </div>\n    `, isInline: true, components: [{ type: ColumnFilterFormElement, selector: \"p-columnFilterFormElement\", inputs: [\"field\", \"type\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\"] }, { type: i10.Dropdown, selector: \"p-dropdown\", inputs: [\"scrollHeight\", \"filter\", \"name\", \"style\", \"panelStyle\", \"styleClass\", \"panelStyleClass\", \"readonly\", \"required\", \"editable\", \"appendTo\", \"tabindex\", \"placeholder\", \"filterPlaceholder\", \"filterLocale\", \"inputId\", \"selectId\", \"dataKey\", \"filterBy\", \"autofocus\", \"resetFilterOnHide\", \"dropdownIcon\", \"optionLabel\", \"optionValue\", \"optionDisabled\", \"optionGroupLabel\", \"optionGroupChildren\", \"autoDisplayFirst\", \"group\", \"showClear\", \"emptyFilterMessage\", \"emptyMessage\", \"virtualScroll\", \"itemSize\", \"autoZIndex\", \"baseZIndex\", \"showTransitionOptions\", \"hideTransitionOptions\", \"ariaFilterLabel\", \"ariaLabelledBy\", \"filterMatchMode\", \"maxlength\", \"tooltip\", \"tooltipPosition\", \"tooltipPositionStyle\", \"tooltipStyleClass\", \"autofocusFilter\", \"disabled\", \"options\", \"filterValue\"], outputs: [\"onChange\", \"onFilter\", \"onFocus\", \"onBlur\", \"onClick\", \"onShow\", \"onHide\"] }], directives: [{ type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i9.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i9.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i11.ButtonDirective, selector: \"[pButton]\", inputs: [\"iconPos\", \"loadingIcon\", \"label\", \"icon\", \"loading\"] }], animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                animate('.12s cubic-bezier(0, 0, 0.2, 1)')\n            ]),\n            transition(':leave', [\n                animate('.1s linear', style({ opacity: 0 }))\n            ])\n        ])\n    ], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ColumnFilter, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-columnFilter',\n                    template: `\n        <div class=\"p-column-filter\" [ngClass]=\"{'p-column-filter-row': display === 'row', 'p-column-filter-menu': display === 'menu'}\">\n            <p-columnFilterFormElement *ngIf=\"display === 'row'\" class=\"p-fluid\" [type]=\"type\" [field]=\"field\" [filterConstraint]=\"dt.filters[field]\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\" [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                                    [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n            <button #icon *ngIf=\"showMenuButton\" type=\"button\" class=\"p-column-filter-menu-button p-link\" aria-haspopup=\"true\" [attr.aria-expanded]=\"overlayVisible\"\n                [ngClass]=\"{'p-column-filter-menu-button-open': overlayVisible, 'p-column-filter-menu-button-active': hasFilter()}\"\n                (click)=\"toggleMenu()\" (keydown)=\"onToggleButtonKeyDown($event)\"><span class=\"pi pi-filter-icon pi-filter\"></span></button>\n            <button #icon *ngIf=\"showMenuButton && display === 'row'\" [ngClass]=\"{'p-hidden-space': !hasRowFilter()}\" type=\"button\" class=\"p-column-filter-clear-button p-link\" (click)=\"clearFilter()\"><span class=\"pi pi-filter-slash\"></span></button>\n            <div *ngIf=\"showMenu && overlayVisible\" [ngClass]=\"{'p-column-filter-overlay p-component p-fluid': true, 'p-column-filter-overlay-menu': display === 'menu'}\" (click)=\"onContentClick()\"\n                [@overlayAnimation]=\"'visible'\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\" (keydown.escape)=\"onEscape()\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: field}\"></ng-container>\n                <ul *ngIf=\"display === 'row'; else menu\" class=\"p-column-filter-row-items\">\n                    <li class=\"p-column-filter-row-item\" *ngFor=\"let matchMode of matchModes; let i = index;\" (click)=\"onRowMatchModeChange(matchMode.value)\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"this.onRowMatchModeChange(matchMode.value)\"\n                        [ngClass]=\"{'p-highlight': isRowMatchModeSelected(matchMode.value)}\" [attr.tabindex]=\"i === 0 ? '0' : null\">{{matchMode.label}}</li>\n                    <li class=\"p-column-filter-separator\"></li>\n                    <li class=\"p-column-filter-row-item\" (click)=\"onRowClearItemClick()\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"onRowClearItemClick()\">{{noFilterLabel}}</li>\n                </ul>\n                <ng-template #menu>\n                    <div class=\"p-column-filter-operator\" *ngIf=\"isShowOperator\">\n                        <p-dropdown [options]=\"operatorOptions\" [ngModel]=\"operator\" (ngModelChange)=\"onOperatorChange($event)\" styleClass=\"p-column-filter-operator-dropdown\"></p-dropdown>\n                    </div>\n                    <div class=\"p-column-filter-constraints\">\n                        <div *ngFor=\"let fieldConstraint of fieldConstraints; let i = index\" class=\"p-column-filter-constraint\">\n                            <p-dropdown  *ngIf=\"showMatchModes && matchModes\" [options]=\"matchModes\" [ngModel]=\"fieldConstraint.matchMode\" (ngModelChange)=\"onMenuMatchModeChange($event, fieldConstraint)\" styleClass=\"p-column-filter-matchmode-dropdown\"></p-dropdown>\n                            <p-columnFilterFormElement [type]=\"type\" [field]=\"field\" [filterConstraint]=\"fieldConstraint\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\"\n                            [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                            [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n                            <div>\n                                <button *ngIf=\"showRemoveIcon\" type=\"button\" pButton icon=\"pi pi-trash\" class=\"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\" (click)=\"removeConstraint(fieldConstraint)\" pRipple [label]=\"removeRuleButtonLabel\"></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"p-column-filter-add-rule\" *ngIf=\"isShowAddConstraint\">\n                        <button type=\"button\" pButton [label]=\"addRuleButtonLabel\" icon=\"pi pi-plus\" class=\"p-column-filter-add-button p-button-text p-button-sm\" (click)=\"addConstraint()\" pRipple></button>\n                    </div>\n                    <div class=\"p-column-filter-buttonbar\">\n                        <button *ngIf=\"showClearButton\" type=\"button\" pButton class=\"p-button-outlined\" (click)=\"clearFilter()\" [label]=\"clearButtonLabel\" pRipple></button>\n                        <button *ngIf=\"showApplyButton\" type=\"button\" pButton (click)=\"applyFilter()\" [label]=\"applyButtonLabel\" pRipple></button>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate; context: {$implicit: field}\"></ng-container>\n            </div>\n        </div>\n    `,\n                    animations: [\n                        trigger('overlayAnimation', [\n                            transition(':enter', [\n                                style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                                animate('.12s cubic-bezier(0, 0, 0.2, 1)')\n                            ]),\n                            transition(':leave', [\n                                animate('.1s linear', style({ opacity: 0 }))\n                            ])\n                        ])\n                    ],\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: Table }, { type: i0.Renderer2 }, { type: i1.PrimeNGConfig }, { type: i1.OverlayService }]; }, propDecorators: { field: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], display: [{\n                type: Input\n            }], showMenu: [{\n                type: Input\n            }], matchMode: [{\n                type: Input\n            }], operator: [{\n                type: Input\n            }], showOperator: [{\n                type: Input\n            }], showClearButton: [{\n                type: Input\n            }], showApplyButton: [{\n                type: Input\n            }], showMatchModes: [{\n                type: Input\n            }], showAddButton: [{\n                type: Input\n            }], hideOnClear: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], matchModeOptions: [{\n                type: Input\n            }], maxConstraints: [{\n                type: Input\n            }], minFractionDigits: [{\n                type: Input\n            }], maxFractionDigits: [{\n                type: Input\n            }], prefix: [{\n                type: Input\n            }], suffix: [{\n                type: Input\n            }], locale: [{\n                type: Input\n            }], localeMatcher: [{\n                type: Input\n            }], currency: [{\n                type: Input\n            }], currencyDisplay: [{\n                type: Input\n            }], useGrouping: [{\n                type: Input\n            }], icon: [{\n                type: ViewChild,\n                args: ['icon']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass TableModule {\n}\nTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TableModule, declarations: [Table, SortableColumn, FrozenColumn, RowGroupHeader, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ColumnFilter, ColumnFilterFormElement], imports: [CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule], exports: [Table, SharedModule, SortableColumn, FrozenColumn, RowGroupHeader, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ScrollingModule, ColumnFilter] });\nTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TableModule, imports: [[CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule], SharedModule,\n        ScrollingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule],\n                    exports: [Table, SharedModule, SortableColumn, FrozenColumn, RowGroupHeader, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon,\n                        TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ScrollingModule, ColumnFilter],\n                    declarations: [Table, SortableColumn, FrozenColumn, RowGroupHeader, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, SortIcon,\n                        TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ColumnFilter, ColumnFilterFormElement]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CancelEditableRow, CellEditor, ColumnFilter, ColumnFilterFormElement, ContextMenuRow, EditableColumn, EditableRow, FrozenColumn, InitEditableRow, ReorderableColumn, ReorderableRow, ReorderableRowHandle, ResizableColumn, RowGroupHeader, RowToggler, SaveEditableRow, SelectableRow, SelectableRowDblClick, SortIcon, SortableColumn, Table, TableBody, TableCheckbox, TableHeaderCheckbox, TableModule, TableRadioButton, TableService };\n//# sourceMappingURL=primeng-table.js.map\n"]},"metadata":{},"sourceType":"module"}