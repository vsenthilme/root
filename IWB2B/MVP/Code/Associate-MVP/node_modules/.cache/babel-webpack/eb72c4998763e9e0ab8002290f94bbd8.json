{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nconst _c0 = [\"cb\"];\n\nconst _c1 = function (a1, a2, a3) {\n  return {\n    \"p-checkbox-label\": true,\n    \"p-checkbox-label-active\": a1,\n    \"p-disabled\": a2,\n    \"p-checkbox-label-focus\": a3\n  };\n};\n\nfunction Checkbox_label_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"label\", 7);\n    i0.ɵɵlistener(\"click\", function Checkbox_label_6_Template_label_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(3);\n\n      return ctx_r2.onClick($event, _r0, true);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.labelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(5, _c1, ctx_r1.checked, ctx_r1.disabled, ctx_r1.focused));\n    i0.ɵɵattribute(\"for\", ctx_r1.inputId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.label);\n  }\n}\n\nconst _c2 = function (a1, a2, a3) {\n  return {\n    \"p-checkbox p-component\": true,\n    \"p-checkbox-checked\": a1,\n    \"p-checkbox-disabled\": a2,\n    \"p-checkbox-focused\": a3\n  };\n};\n\nconst _c3 = function (a0, a1, a2) {\n  return {\n    \"p-highlight\": a0,\n    \"p-disabled\": a1,\n    \"p-focus\": a2\n  };\n};\n\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Checkbox),\n  multi: true\n};\n\nclass Checkbox {\n  constructor(cd) {\n    this.cd = cd;\n    this.checkboxIcon = 'pi pi-check';\n    this.onChange = new EventEmitter();\n\n    this.onModelChange = () => {};\n\n    this.onModelTouched = () => {};\n\n    this.focused = false;\n    this.checked = false;\n  }\n\n  onClick(event, checkbox, focus) {\n    event.preventDefault();\n\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    this.checked = !this.checked;\n    this.updateModel(event);\n\n    if (focus) {\n      checkbox.focus();\n    }\n  }\n\n  updateModel(event) {\n    if (!this.binary) {\n      if (this.checked) this.addValue();else this.removeValue();\n      this.onModelChange(this.model);\n\n      if (this.formControl) {\n        this.formControl.setValue(this.model);\n      }\n    } else {\n      this.onModelChange(this.checked);\n    }\n\n    this.onChange.emit({\n      checked: this.checked,\n      originalEvent: event\n    });\n  }\n\n  handleChange(event) {\n    if (!this.readonly) {\n      this.checked = event.target.checked;\n      this.updateModel(event);\n    }\n  }\n\n  isChecked() {\n    if (this.binary) return this.model;else return this.model && this.model.indexOf(this.value) > -1;\n  }\n\n  removeValue() {\n    this.model = this.model.filter(val => val !== this.value);\n  }\n\n  addValue() {\n    if (this.model) this.model = [...this.model, this.value];else this.model = [this.value];\n  }\n\n  onFocus() {\n    this.focused = true;\n  }\n\n  onBlur() {\n    this.focused = false;\n    this.onModelTouched();\n  }\n\n  focus() {\n    this.inputViewChild.nativeElement.focus();\n  }\n\n  writeValue(model) {\n    this.model = model;\n    this.checked = this.isChecked();\n    this.cd.markForCheck();\n  }\n\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n\n}\n\nCheckbox.ɵfac = function Checkbox_Factory(t) {\n  return new (t || Checkbox)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nCheckbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Checkbox,\n  selectors: [[\"p-checkbox\"]],\n  viewQuery: function Checkbox_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputViewChild = _t.first);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    name: \"name\",\n    disabled: \"disabled\",\n    binary: \"binary\",\n    label: \"label\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    ariaLabel: \"ariaLabel\",\n    tabindex: \"tabindex\",\n    inputId: \"inputId\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    labelStyleClass: \"labelStyleClass\",\n    formControl: \"formControl\",\n    checkboxIcon: \"checkboxIcon\",\n    readonly: \"readonly\",\n    required: \"required\"\n  },\n  outputs: {\n    onChange: \"onChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR])],\n  decls: 7,\n  vars: 26,\n  consts: [[3, \"ngStyle\", \"ngClass\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"readonly\", \"value\", \"checked\", \"disabled\", \"focus\", \"blur\", \"change\"], [\"cb\", \"\"], [1, \"p-checkbox-box\", 3, \"ngClass\", \"click\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"], [3, \"class\", \"ngClass\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"click\"]],\n  template: function Checkbox_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"input\", 2, 3);\n      i0.ɵɵlistener(\"focus\", function Checkbox_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function Checkbox_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      })(\"change\", function Checkbox_Template_input_change_2_listener($event) {\n        return ctx.handleChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵlistener(\"click\", function Checkbox_Template_div_click_4_listener($event) {\n        i0.ɵɵrestoreView(_r4);\n\n        const _r0 = i0.ɵɵreference(3);\n\n        return ctx.onClick($event, _r0, true);\n      });\n      i0.ɵɵelement(5, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, Checkbox_label_6_Template, 2, 9, \"label\", 6);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", i0.ɵɵpureFunction3(18, _c2, ctx.checked, ctx.disabled, ctx.focused));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"readonly\", ctx.readonly)(\"value\", ctx.value)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"tabindex\", ctx.tabindex)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-label\", ctx.ariaLabel)(\"aria-checked\", ctx.checked)(\"required\", ctx.required);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(22, _c3, ctx.checked, ctx.disabled, ctx.focused));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", ctx.checked ? ctx.checkboxIcon : null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.label);\n    }\n  },\n  directives: [i1.NgStyle, i1.NgClass, i1.NgIf],\n  styles: [\".p-checkbox{display:inline-flex;cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none;vertical-align:bottom}.p-checkbox-disabled{cursor:default!important;pointer-events:none}.p-checkbox-box{display:flex;justify-content:center;align-items:center}p-checkbox{display:inline-flex;vertical-align:bottom;align-items:center}.p-checkbox-label{line-height:1}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Checkbox, [{\n    type: Component,\n    args: [{\n      selector: 'p-checkbox',\n      template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"{'p-checkbox p-component': true, 'p-checkbox-checked': checked, 'p-checkbox-disabled': disabled, 'p-checkbox-focused': focused}\" [class]=\"styleClass\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [readonly]=\"readonly\" [value]=\"value\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                (change)=\"handleChange($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-label]=\"ariaLabel\" [attr.aria-checked]=\"checked\" [attr.required]=\"required\">\n            </div>\n            <div class=\"p-checkbox-box\" (click)=\"onClick($event,cb,true)\"\n                        [ngClass]=\"{'p-highlight': checked, 'p-disabled': disabled, 'p-focus': focused}\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"checked ? checkboxIcon : null\"></span>\n            </div>\n        </div>\n        <label (click)=\"onClick($event,cb,true)\" [class]=\"labelStyleClass\"\n                [ngClass]=\"{'p-checkbox-label': true, 'p-checkbox-label-active':checked, 'p-disabled':disabled, 'p-checkbox-label-focus':focused}\"\n                *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    `,\n      providers: [CHECKBOX_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styleUrls: ['./checkbox.css']\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    binary: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    labelStyleClass: [{\n      type: Input\n    }],\n    formControl: [{\n      type: Input\n    }],\n    checkboxIcon: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    inputViewChild: [{\n      type: ViewChild,\n      args: ['cb']\n    }],\n    onChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass CheckboxModule {}\n\nCheckboxModule.ɵfac = function CheckboxModule_Factory(t) {\n  return new (t || CheckboxModule)();\n};\n\nCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CheckboxModule\n});\nCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Checkbox],\n      declarations: [Checkbox]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CHECKBOX_VALUE_ACCESSOR, Checkbox, CheckboxModule }; //# sourceMappingURL=primeng-checkbox.js.map","map":{"version":3,"sources":["D:/TEKCLOVER GIT MAIN/root/IWB2B/MVP/Code/Associate-MVP/node_modules/primeng/fesm2015/primeng-checkbox.js"],"names":["i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","ViewChild","Output","NgModule","i1","CommonModule","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","provide","useExisting","Checkbox","multi","constructor","cd","checkboxIcon","onChange","onModelChange","onModelTouched","focused","checked","onClick","event","checkbox","focus","preventDefault","disabled","readonly","updateModel","binary","addValue","removeValue","model","formControl","setValue","emit","originalEvent","handleChange","target","isChecked","indexOf","value","filter","val","onFocus","onBlur","inputViewChild","nativeElement","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","ɵfac","ChangeDetectorRef","ɵcmp","NgStyle","NgClass","NgIf","type","args","selector","template","providers","changeDetection","OnPush","encapsulation","None","styleUrls","name","label","ariaLabelledBy","ariaLabel","tabindex","inputId","style","styleClass","labelStyleClass","required","CheckboxModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Checkbox),\n    multi: true\n};\nclass Checkbox {\n    constructor(cd) {\n        this.cd = cd;\n        this.checkboxIcon = 'pi pi-check';\n        this.onChange = new EventEmitter();\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n        this.focused = false;\n        this.checked = false;\n    }\n    onClick(event, checkbox, focus) {\n        event.preventDefault();\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        this.checked = !this.checked;\n        this.updateModel(event);\n        if (focus) {\n            checkbox.focus();\n        }\n    }\n    updateModel(event) {\n        if (!this.binary) {\n            if (this.checked)\n                this.addValue();\n            else\n                this.removeValue();\n            this.onModelChange(this.model);\n            if (this.formControl) {\n                this.formControl.setValue(this.model);\n            }\n        }\n        else {\n            this.onModelChange(this.checked);\n        }\n        this.onChange.emit({ checked: this.checked, originalEvent: event });\n    }\n    handleChange(event) {\n        if (!this.readonly) {\n            this.checked = event.target.checked;\n            this.updateModel(event);\n        }\n    }\n    isChecked() {\n        if (this.binary)\n            return this.model;\n        else\n            return this.model && this.model.indexOf(this.value) > -1;\n    }\n    removeValue() {\n        this.model = this.model.filter(val => val !== this.value);\n    }\n    addValue() {\n        if (this.model)\n            this.model = [...this.model, this.value];\n        else\n            this.model = [this.value];\n    }\n    onFocus() {\n        this.focused = true;\n    }\n    onBlur() {\n        this.focused = false;\n        this.onModelTouched();\n    }\n    focus() {\n        this.inputViewChild.nativeElement.focus();\n    }\n    writeValue(model) {\n        this.model = model;\n        this.checked = this.isChecked();\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n}\nCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Checkbox, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: Checkbox, selector: \"p-checkbox\", inputs: { value: \"value\", name: \"name\", disabled: \"disabled\", binary: \"binary\", label: \"label\", ariaLabelledBy: \"ariaLabelledBy\", ariaLabel: \"ariaLabel\", tabindex: \"tabindex\", inputId: \"inputId\", style: \"style\", styleClass: \"styleClass\", labelStyleClass: \"labelStyleClass\", formControl: \"formControl\", checkboxIcon: \"checkboxIcon\", readonly: \"readonly\", required: \"required\" }, outputs: { onChange: \"onChange\" }, providers: [CHECKBOX_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"inputViewChild\", first: true, predicate: [\"cb\"], descendants: true }], ngImport: i0, template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"{'p-checkbox p-component': true, 'p-checkbox-checked': checked, 'p-checkbox-disabled': disabled, 'p-checkbox-focused': focused}\" [class]=\"styleClass\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [readonly]=\"readonly\" [value]=\"value\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                (change)=\"handleChange($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-label]=\"ariaLabel\" [attr.aria-checked]=\"checked\" [attr.required]=\"required\">\n            </div>\n            <div class=\"p-checkbox-box\" (click)=\"onClick($event,cb,true)\"\n                        [ngClass]=\"{'p-highlight': checked, 'p-disabled': disabled, 'p-focus': focused}\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"checked ? checkboxIcon : null\"></span>\n            </div>\n        </div>\n        <label (click)=\"onClick($event,cb,true)\" [class]=\"labelStyleClass\"\n                [ngClass]=\"{'p-checkbox-label': true, 'p-checkbox-label-active':checked, 'p-disabled':disabled, 'p-checkbox-label-focus':focused}\"\n                *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    `, isInline: true, styles: [\".p-checkbox{display:inline-flex;cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none;vertical-align:bottom}.p-checkbox-disabled{cursor:default!important;pointer-events:none}.p-checkbox-box{display:flex;justify-content:center;align-items:center}p-checkbox{display:inline-flex;vertical-align:bottom;align-items:center}.p-checkbox-label{line-height:1}\"], directives: [{ type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Checkbox, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-checkbox',\n                    template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"{'p-checkbox p-component': true, 'p-checkbox-checked': checked, 'p-checkbox-disabled': disabled, 'p-checkbox-focused': focused}\" [class]=\"styleClass\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [readonly]=\"readonly\" [value]=\"value\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                (change)=\"handleChange($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-label]=\"ariaLabel\" [attr.aria-checked]=\"checked\" [attr.required]=\"required\">\n            </div>\n            <div class=\"p-checkbox-box\" (click)=\"onClick($event,cb,true)\"\n                        [ngClass]=\"{'p-highlight': checked, 'p-disabled': disabled, 'p-focus': focused}\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"checked ? checkboxIcon : null\"></span>\n            </div>\n        </div>\n        <label (click)=\"onClick($event,cb,true)\" [class]=\"labelStyleClass\"\n                [ngClass]=\"{'p-checkbox-label': true, 'p-checkbox-label-active':checked, 'p-disabled':disabled, 'p-checkbox-label-focus':focused}\"\n                *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    `,\n                    providers: [CHECKBOX_VALUE_ACCESSOR],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    styleUrls: ['./checkbox.css']\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { value: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], binary: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], labelStyleClass: [{\n                type: Input\n            }], formControl: [{\n                type: Input\n            }], checkboxIcon: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], inputViewChild: [{\n                type: ViewChild,\n                args: ['cb']\n            }], onChange: [{\n                type: Output\n            }] } });\nclass CheckboxModule {\n}\nCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckboxModule, declarations: [Checkbox], imports: [CommonModule], exports: [Checkbox] });\nCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckboxModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Checkbox],\n                    declarations: [Checkbox]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CHECKBOX_VALUE_ACCESSOR, Checkbox, CheckboxModule };\n//# sourceMappingURL=primeng-checkbox.js.map\n"]},"metadata":{},"sourceType":"module"}